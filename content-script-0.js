LavaPack.loadBundle([
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\vendor\\trezor\\content-script.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\app\vendor\trezor\content-script.js
      return function (require, module, exports) {
"use strict";

/*
Passing messages from background script to popup
*/
let port = chrome.runtime.connect({
  name: 'trezor-connect'
});
port.onMessage.addListener(message => {
  window.postMessage(message, window.location.origin);
});
port.onDisconnect.addListener(d => {
  port = null;
});
/*
Passing messages from popup to background script
*/

window.addEventListener('message', event => {
  if (port && event.source === window && event.data) {
    port.postMessage({
      data: event.data
    });
  }
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\vendor\\trezor\\content-script.js",}]],["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\vendor\\trezor\\content-script.js"],{})

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC92ZW5kb3IvdHJlem9yL2NvbnRlbnQtc2NyaXB0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUVBLElBQUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxPQUFQLENBQWUsT0FBZixDQUF1QjtBQUFFLEVBQUEsSUFBSSxFQUFFO0FBQVIsQ0FBdkIsQ0FBWDtBQUNBLElBQUksQ0FBQyxTQUFMLENBQWUsV0FBZixDQUEyQixPQUFPLElBQUk7QUFDbEMsRUFBQSxNQUFNLENBQUMsV0FBUCxDQUFtQixPQUFuQixFQUE0QixNQUFNLENBQUMsUUFBUCxDQUFnQixNQUE1QztBQUNILENBRkQ7QUFHQSxJQUFJLENBQUMsWUFBTCxDQUFrQixXQUFsQixDQUE4QixDQUFDLElBQUk7QUFDL0IsRUFBQSxJQUFJLEdBQUcsSUFBUDtBQUNILENBRkQ7QUFJQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTSxDQUFDLGdCQUFQLENBQXdCLFNBQXhCLEVBQW1DLEtBQUssSUFBSTtBQUN4QyxNQUFJLElBQUksSUFBSSxLQUFLLENBQUMsTUFBTixLQUFpQixNQUF6QixJQUFtQyxLQUFLLENBQUMsSUFBN0MsRUFBbUQ7QUFDL0MsSUFBQSxJQUFJLENBQUMsV0FBTCxDQUFpQjtBQUFFLE1BQUEsSUFBSSxFQUFFLEtBQUssQ0FBQztBQUFkLEtBQWpCO0FBQ0g7QUFDSixDQUpEIiwiZmlsZSI6ImNvbnRlbnQtc2NyaXB0LTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuUGFzc2luZyBtZXNzYWdlcyBmcm9tIGJhY2tncm91bmQgc2NyaXB0IHRvIHBvcHVwXG4qL1xuXG5sZXQgcG9ydCA9IGNocm9tZS5ydW50aW1lLmNvbm5lY3QoeyBuYW1lOiAndHJlem9yLWNvbm5lY3QnIH0pO1xucG9ydC5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIobWVzc2FnZSA9PiB7XG4gICAgd2luZG93LnBvc3RNZXNzYWdlKG1lc3NhZ2UsIHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4pO1xufSk7XG5wb3J0Lm9uRGlzY29ubmVjdC5hZGRMaXN0ZW5lcihkID0+IHtcbiAgICBwb3J0ID0gbnVsbDtcbn0pO1xuXG4vKlxuUGFzc2luZyBtZXNzYWdlcyBmcm9tIHBvcHVwIHRvIGJhY2tncm91bmQgc2NyaXB0XG4qL1xuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGV2ZW50ID0+IHtcbiAgICBpZiAocG9ydCAmJiBldmVudC5zb3VyY2UgPT09IHdpbmRvdyAmJiBldmVudC5kYXRhKSB7XG4gICAgICAgIHBvcnQucG9zdE1lc3NhZ2UoeyBkYXRhOiBldmVudC5kYXRhIH0pO1xuICAgIH1cbn0pO1xuIl0sInByZUV4aXN0aW5nQ29tbWVudCI6Ii8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRndjQzkyWlc1a2IzSXZkSEpsZW05eUwyTnZiblJsYm5RdGMyTnlhWEIwTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN096czdPenM3T3p0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVWQkxFbEJRVWtzU1VGQlNTeEhRVUZITEUxQlFVMHNRMEZCUXl4UFFVRlFMRU5CUVdVc1QwRkJaaXhEUVVGMVFqdEJRVUZGTEVWQlFVRXNTVUZCU1N4RlFVRkZPMEZCUVZJc1EwRkJka0lzUTBGQldEdEJRVU5CTEVsQlFVa3NRMEZCUXl4VFFVRk1MRU5CUVdVc1YwRkJaaXhEUVVFeVFpeFBRVUZQTEVsQlFVazdRVUZEYkVNc1JVRkJRU3hOUVVGTkxFTkJRVU1zVjBGQlVDeERRVUZ0UWl4UFFVRnVRaXhGUVVFMFFpeE5RVUZOTEVOQlFVTXNVVUZCVUN4RFFVRm5RaXhOUVVFMVF6dEJRVU5JTEVOQlJrUTdRVUZIUVN4SlFVRkpMRU5CUVVNc1dVRkJUQ3hEUVVGclFpeFhRVUZzUWl4RFFVRTRRaXhEUVVGRExFbEJRVWs3UVVGREwwSXNSVUZCUVN4SlFVRkpMRWRCUVVjc1NVRkJVRHRCUVVOSUxFTkJSa1E3UVVGSlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFc1RVRkJUU3hEUVVGRExHZENRVUZRTEVOQlFYZENMRk5CUVhoQ0xFVkJRVzFETEV0QlFVc3NTVUZCU1R0QlFVTjRReXhOUVVGSkxFbEJRVWtzU1VGQlNTeExRVUZMTEVOQlFVTXNUVUZCVGl4TFFVRnBRaXhOUVVGNlFpeEpRVUZ0UXl4TFFVRkxMRU5CUVVNc1NVRkJOME1zUlVGQmJVUTdRVUZETDBNc1NVRkJRU3hKUVVGSkxFTkJRVU1zVjBGQlRDeERRVUZwUWp0QlFVRkZMRTFCUVVFc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF6dEJRVUZrTEV0QlFXcENPMEZCUTBnN1FVRkRTaXhEUVVwRUlpd2labWxzWlNJNkltZGxibVZ5WVhSbFpDNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2S2x4dVVHRnpjMmx1WnlCdFpYTnpZV2RsY3lCbWNtOXRJR0poWTJ0bmNtOTFibVFnYzJOeWFYQjBJSFJ2SUhCdmNIVndYRzRxTDF4dVhHNXNaWFFnY0c5eWRDQTlJR05vY205dFpTNXlkVzUwYVcxbExtTnZibTVsWTNRb2V5QnVZVzFsT2lBbmRISmxlbTl5TFdOdmJtNWxZM1FuSUgwcE8xeHVjRzl5ZEM1dmJrMWxjM05oWjJVdVlXUmtUR2x6ZEdWdVpYSW9iV1Z6YzJGblpTQTlQaUI3WEc0Z0lDQWdkMmx1Wkc5M0xuQnZjM1JOWlhOellXZGxLRzFsYzNOaFoyVXNJSGRwYm1SdmR5NXNiMk5oZEdsdmJpNXZjbWxuYVc0cE8xeHVmU2s3WEc1d2IzSjBMbTl1UkdselkyOXVibVZqZEM1aFpHUk1hWE4wWlc1bGNpaGtJRDArSUh0Y2JpQWdJQ0J3YjNKMElEMGdiblZzYkR0Y2JuMHBPMXh1WEc0dktseHVVR0Z6YzJsdVp5QnRaWE56WVdkbGN5Qm1jbTl0SUhCdmNIVndJSFJ2SUdKaFkydG5jbTkxYm1RZ2MyTnlhWEIwWEc0cUwxeHVYRzUzYVc1a2IzY3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ25iV1Z6YzJGblpTY3NJR1YyWlc1MElEMCtJSHRjYmlBZ0lDQnBaaUFvY0c5eWRDQW1KaUJsZG1WdWRDNXpiM1Z5WTJVZ1BUMDlJSGRwYm1SdmR5QW1KaUJsZG1WdWRDNWtZWFJoS1NCN1hHNGdJQ0FnSUNBZ0lIQnZjblF1Y0c5emRFMWxjM05oWjJVb2V5QmtZWFJoT2lCbGRtVnVkQzVrWVhSaElIMHBPMXh1SUNBZ0lIMWNibjBwTzF4dUlsMTkifQ==
