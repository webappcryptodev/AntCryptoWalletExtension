LavaPack.loadBundle([
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\smart-transaction-status\\arrow-icon.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\smart-transaction-status\arrow-icon.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ArrowIcon;

var _react = _interopRequireDefault(require("react"));

function ArrowIcon() {
  return /*#__PURE__*/_react.default.createElement("svg", {
    width: "15",
    height: "13",
    viewBox: "0 0 15 13",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M14.4946 6.14779C14.4863 5.93594 14.3991 5.69108 14.2539 5.53666L9.51334 0.49958C9.1921 0.21091 8.57613 0.0917437 8.21709 0.425509C7.86344 0.754237 7.87396 1.39178 8.22627 1.72181L11.5595 5.25889L1.1618 5.25889C0.670919 5.25889 0.272949 5.65687 0.272949 6.14779C0.272949 6.6387 0.670919 7.03668 1.1618 7.03668L11.5595 7.03668L8.22627 10.5738C7.92297 10.8776 7.86691 11.5376 8.21709 11.8701C8.56718 12.2025 9.20529 12.0963 9.51334 11.796L14.2539 6.75891C14.4161 6.58653 14.4952 6.38428 14.4946 6.14779Z",
    fill: "#D6D9DC"
  }));
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\smart-transaction-status\\arrow-icon.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\smart-transaction-status\\unknown-icon.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\smart-transaction-status\unknown-icon.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = UnknownIcon;

var _react = _interopRequireDefault(require("react"));

function UnknownIcon() {
  return /*#__PURE__*/_react.default.createElement("svg", {
    width: "39",
    height: "39",
    viewBox: "0 0 39 39",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react.default.createElement("circle", {
    cx: "19.1533",
    cy: "19.2715",
    r: "17.1",
    stroke: "#037DD6",
    strokeWidth: "3.8"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M16.712 21.5034C16.712 20.7834 16.88 20.1834 17.216 19.7034C17.568 19.2074 18.08 18.7274 18.752 18.2634C19.008 18.0874 19.264 17.9274 19.52 17.7834C19.776 17.6394 20 17.4874 20.192 17.3274C20.4 17.1514 20.56 16.9674 20.672 16.7754C20.8 16.5674 20.864 16.3194 20.864 16.0314C20.864 15.5354 20.688 15.1594 20.336 14.9034C20 14.6474 19.592 14.5194 19.112 14.5194C18.616 14.5194 18.16 14.6794 17.744 14.9994C17.344 15.3034 17.144 15.7674 17.144 16.3914H13.52C13.52 15.6394 13.664 14.9354 13.952 14.2794C14.24 13.6074 14.632 13.0314 15.128 12.5514C15.64 12.0554 16.232 11.6634 16.904 11.3754C17.592 11.0874 18.328 10.9434 19.112 10.9434C19.896 10.9434 20.616 11.0794 21.272 11.3514C21.944 11.6234 22.512 11.9834 22.976 12.4314C23.456 12.8794 23.824 13.3994 24.08 13.9914C24.352 14.5674 24.488 15.1754 24.488 15.8154C24.488 16.2314 24.456 16.6234 24.392 16.9914C24.344 17.3594 24.24 17.7114 24.08 18.0474C23.936 18.3834 23.728 18.7114 23.456 19.0314C23.184 19.3514 22.84 19.6634 22.424 19.9674C21.784 20.4474 21.272 20.8234 20.888 21.0954C20.52 21.3674 20.336 21.6474 20.336 21.9354V21.9594H16.712V21.5034ZM18.512 28.4634C18.16 28.4634 17.824 28.3994 17.504 28.2714C17.2 28.1274 16.928 27.9434 16.688 27.7194C16.464 27.4794 16.28 27.2074 16.136 26.9034C16.008 26.5834 15.944 26.2474 15.944 25.8954C15.944 25.5434 16.008 25.2154 16.136 24.9114C16.28 24.5914 16.464 24.3194 16.688 24.0954C16.928 23.8554 17.2 23.6714 17.504 23.5434C17.824 23.3994 18.16 23.3274 18.512 23.3274C18.864 23.3274 19.192 23.3994 19.496 23.5434C19.816 23.6714 20.088 23.8554 20.312 24.0954C20.552 24.3194 20.736 24.5914 20.864 24.9114C21.008 25.2154 21.08 25.5434 21.08 25.8954C21.08 26.2474 21.008 26.5834 20.864 26.9034C20.736 27.2074 20.552 27.4794 20.312 27.7194C20.088 27.9434 19.816 28.1274 19.496 28.2714C19.192 28.3994 18.864 28.4634 18.512 28.4634Z",
    fill: "#037DD6"
  }));
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\smart-transaction-status\\unknown-icon.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\url-icon\\index.js", {"./url-icon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\url-icon\\url-icon.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\url-icon\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _urlIcon.default;
  }
});

var _urlIcon = _interopRequireDefault(require("./url-icon"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\url-icon\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\quotes-timeout-icon.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\awaiting-swap\quotes-timeout-icon.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = QuotesTimeoutIcon;

var _react = _interopRequireDefault(require("react"));

function QuotesTimeoutIcon() {
  return /*#__PURE__*/_react.default.createElement("svg", {
    width: "44",
    height: "44",
    viewBox: "0 0 44 44",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M22 0C9.96768 0 0.178406 9.78928 0.178406 21.8216C0.178406 33.8539 9.96768 43.6432 22 43.6432C34.0323 43.6432 43.8216 33.8539 43.8216 21.8216C43.8216 9.78929 34.0323 0 22 0ZM22 3.27324C32.2633 3.27324 40.5484 11.5583 40.5484 21.8216C40.5484 32.0849 32.2633 40.3699 22 40.3699C11.7367 40.3699 3.45164 32.0849 3.45164 21.8216C3.45164 11.5583 11.7367 3.27324 22 3.27324ZM22 6.00094C21.0961 6.00094 20.3634 6.73371 20.3634 7.63756V21.8216C20.3634 22.4269 20.6932 22.9534 21.1817 23.2366L32.5187 29.783C33.3014 30.235 34.3001 29.9692 34.752 29.1864C35.2039 28.4036 34.938 27.405 34.1553 26.953L23.6366 20.8839V7.63756C23.6366 6.73371 22.9039 6.00094 22 6.00094Z",
    fill: "#037DD6"
  }));
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\quotes-timeout-icon.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\swap-failure-icon.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\awaiting-swap\swap-failure-icon.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SwapFailureIcon;

var _react = _interopRequireDefault(require("react"));

function SwapFailureIcon() {
  return /*#__PURE__*/_react.default.createElement("svg", {
    width: "45",
    height: "39",
    viewBox: "0 0 45 39",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M22.203 0.424438L0.285706 38.2816H44.1203L22.203 0.424438ZM22.203 8.39436L37.2064 34.2966H7.19961L22.203 8.39436ZM20.2105 16.3643V24.3342H24.1955V16.3643H20.2105ZM20.2105 28.3192V32.3041H24.1955V28.3192",
    fill: "#D73A49"
  }));
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\swap-failure-icon.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\swap-success-icon.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\awaiting-swap\swap-success-icon.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SwapSuccessIcon;

var _react = _interopRequireDefault(require("react"));

function SwapSuccessIcon() {
  return /*#__PURE__*/_react.default.createElement("svg", {
    width: "38",
    height: "38",
    viewBox: "0 0 38 38",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M34.1429 19C34.1429 23.0161 32.5474 26.8678 29.7076 29.7076C26.8678 32.5474 23.0161 34.1428 19 34.1428C14.9839 34.1428 11.1322 32.5474 8.29238 29.7076C5.45254 26.8678 3.85714 23.0161 3.85714 19C3.85714 14.9838 5.45254 11.1322 8.29238 8.29237C11.1322 5.45253 14.9839 3.85713 19 3.85713C20.4386 3.85713 21.8393 4.06534 23.1643 4.44391L26.1361 1.47213C23.9404 0.563554 21.5364 0.0714111 19 0.0714111C16.5143 0.0714111 14.0529 0.561013 11.7563 1.51226C9.45983 2.46351 7.37316 3.85778 5.61548 5.61546C2.06568 9.16526 0.0714264 13.9798 0.0714264 19C0.0714264 24.0201 2.06568 28.8347 5.61548 32.3845C7.37316 34.1422 9.45983 35.5364 11.7563 36.4877C14.0529 37.4389 16.5143 37.9286 19 37.9286C24.0202 37.9286 28.8347 35.9343 32.3845 32.3845C35.9343 28.8347 37.9286 24.0201 37.9286 19H34.1429ZM11.2582 15.3657L8.58928 18.0536L17.1071 26.5714L36.0357 7.64284L33.3668 4.95498L17.1071 21.2146L11.2582 15.3657Z",
    fill: "#28A745"
  }));
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\swap-success-icon.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\view-on-ether-scan-link\\index.js", {"./view-on-ether-scan-link":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\view-on-ether-scan-link\\view-on-ether-scan-link.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\awaiting-swap\view-on-ether-scan-link\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _viewOnEtherScanLink.default;
  }
});

var _viewOnEtherScanLink = _interopRequireDefault(require("./view-on-ether-scan-link"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\view-on-ether-scan-link\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useEthFiatAmount.js", {"../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../helpers/utils/confirm-tx.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\confirm-tx.util.js","../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\useEthFiatAmount.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useEthFiatAmount = useEthFiatAmount;

var _react = require("react");

var _reactRedux = require("react-redux");

var _selectors = require("../selectors");

var _conversions = require("../helpers/utils/conversions.util");

var _confirmTx = require("../helpers/utils/confirm-tx.util");

var _metamask = require("../ducks/metamask/metamask");

/**
 * Get an Eth amount converted to fiat and formatted for display
 *
 * @param {string} [ethAmount] - The eth amount to convert
 * @param {Object} [overrides] - A configuration object that allows the called to explicitly
 *                              ensure fiat is shown even if the property is not set in state.
 * @param {boolean} [overrides.showFiat] - If truthy, ensures the fiat value is shown even if the showFiat value from state is falsey
 * @param {boolean} hideCurrencySymbol - Indicates whether the returned formatted amount should include the trailing currency symbol
 * @returns {string} The formatted token amount in the user's chosen fiat currency
 */
function useEthFiatAmount(ethAmount, overrides = {}, hideCurrencySymbol) {
  var _overrides$showFiat;

  const conversionRate = (0, _reactRedux.useSelector)(_metamask.getConversionRate);
  const currentCurrency = (0, _reactRedux.useSelector)(_selectors.getCurrentCurrency);
  const userPrefersShownFiat = (0, _reactRedux.useSelector)(_selectors.getShouldShowFiat);
  const showFiat = (_overrides$showFiat = overrides.showFiat) !== null && _overrides$showFiat !== void 0 ? _overrides$showFiat : userPrefersShownFiat;
  const formattedFiat = (0, _react.useMemo)(() => (0, _conversions.decEthToConvertedCurrency)(ethAmount, currentCurrency, conversionRate), [conversionRate, currentCurrency, ethAmount]);

  if (!showFiat || currentCurrency.toUpperCase() === 'ETH' || conversionRate <= 0 || ethAmount === undefined) {
    return undefined;
  }

  return hideCurrencySymbol ? (0, _confirmTx.formatCurrency)(formattedFiat, currentCurrency) : `${(0, _confirmTx.formatCurrency)(formattedFiat, currentCurrency)} ${currentCurrency.toUpperCase()}`;
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useEthFiatAmount.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useTokensToSearch.js", {"../../shared/modules/hexstring-utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\hexstring-utils.js","../../shared/modules/swaps.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\swaps.utils.js","../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../ducks/swaps/swaps":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\swaps\\swaps.js","../helpers/utils/token-util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\token-util.js","../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","./useEqualityCheck":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useEqualityCheck.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@metamask/contract-metadata":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\contract-metadata\\index.js","bignumber.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\bignumber.js\\bignumber.js","lodash":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\lodash.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\useTokensToSearch.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRenderableTokenData = getRenderableTokenData;
exports.useTokensToSearch = useTokensToSearch;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _reactRedux = require("react-redux");

var _contractMetadata = _interopRequireDefault(require("@metamask/contract-metadata"));

var _bignumber = _interopRequireDefault(require("bignumber.js"));

var _lodash = require("lodash");

var _tokenUtil = require("../helpers/utils/token-util");

var _selectors = require("../selectors");

var _metamask = require("../ducks/metamask/metamask");

var _swaps = require("../ducks/swaps/swaps");

var _swaps2 = require("../../shared/modules/swaps.utils");

var _hexstringUtils = require("../../shared/modules/hexstring-utils");

var _useEqualityCheck = require("./useEqualityCheck");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const shuffledContractMap = (0, _lodash.shuffle)(Object.entries(_contractMetadata.default).map(([address, tokenData]) => _objectSpread(_objectSpread({}, tokenData), {}, {
  address: address.toLowerCase()
})).filter(tokenData => Boolean(tokenData.erc20)));

function getRenderableTokenData(token, contractExchangeRates, conversionRate, currentCurrency, chainId, tokenList, useTokenDetection) {
  var _tokenList$tokenAddre, _tokenList$tokenAddre2;

  const {
    symbol,
    name,
    address,
    iconUrl,
    string,
    balance,
    decimals
  } = token; // token from dynamic api list is fetched when useTokenDetection is true
  // And since the token.address from allTokens is checksumaddress
  // token Address have to be changed to lowercase when we are using dynamic list

  const tokenAddress = useTokenDetection ? address === null || address === void 0 ? void 0 : address.toLowerCase() : address;
  const formattedFiat = (0, _tokenUtil.getTokenFiatAmount)((0, _swaps2.isSwapsDefaultTokenSymbol)(symbol, chainId) ? 1 : contractExchangeRates[(0, _hexstringUtils.toChecksumHexAddress)(address)], conversionRate, currentCurrency, string, symbol, true) || '';
  const rawFiat = (0, _tokenUtil.getTokenFiatAmount)((0, _swaps2.isSwapsDefaultTokenSymbol)(symbol, chainId) ? 1 : contractExchangeRates[(0, _hexstringUtils.toChecksumHexAddress)(address)], conversionRate, currentCurrency, string, symbol, false) || '';
  const usedIconUrl = iconUrl || tokenList[tokenAddress] && `images/contract/${tokenList[tokenAddress].iconUrl}` || (token === null || token === void 0 ? void 0 : token.image);
  return _objectSpread(_objectSpread({}, token), {}, {
    primaryLabel: symbol,
    secondaryLabel: name || ((_tokenList$tokenAddre = tokenList[tokenAddress]) === null || _tokenList$tokenAddre === void 0 ? void 0 : _tokenList$tokenAddre.name),
    rightPrimaryLabel: string && `${new _bignumber.default(string).round(6).toString()} ${symbol}`,
    rightSecondaryLabel: formattedFiat,
    iconUrl: usedIconUrl,
    identiconAddress: usedIconUrl ? null : address,
    balance,
    decimals,
    name: name || ((_tokenList$tokenAddre2 = tokenList[tokenAddress]) === null || _tokenList$tokenAddre2 === void 0 ? void 0 : _tokenList$tokenAddre2.name),
    rawFiat
  });
}

function useTokensToSearch({
  usersTokens = [],
  topTokens = {},
  shuffledTokensList
}) {
  const chainId = (0, _reactRedux.useSelector)(_selectors.getCurrentChainId);
  const tokenConversionRates = (0, _reactRedux.useSelector)(_selectors.getTokenExchangeRates, _lodash.isEqual);
  const conversionRate = (0, _reactRedux.useSelector)(_metamask.getConversionRate);
  const currentCurrency = (0, _reactRedux.useSelector)(_selectors.getCurrentCurrency);
  const defaultSwapsToken = (0, _reactRedux.useSelector)(_selectors.getSwapsDefaultToken, _reactRedux.shallowEqual);
  const tokenList = (0, _reactRedux.useSelector)(_selectors.getTokenList, _lodash.isEqual);
  const useTokenDetection = (0, _reactRedux.useSelector)(_selectors.getUseTokenDetection); // token from dynamic api list is fetched when useTokenDetection is true

  const shuffledTokenList = useTokenDetection ? shuffledTokensList : shuffledContractMap;
  const memoizedTopTokens = (0, _useEqualityCheck.useEqualityCheck)(topTokens);
  const memoizedUsersToken = (0, _useEqualityCheck.useEqualityCheck)(usersTokens);
  const defaultToken = getRenderableTokenData(defaultSwapsToken, tokenConversionRates, conversionRate, currentCurrency, chainId, tokenList, useTokenDetection);
  const memoizedDefaultToken = (0, _useEqualityCheck.useEqualityCheck)(defaultToken);
  const swapsTokens = (0, _reactRedux.useSelector)(_swaps.getSwapsTokens, _lodash.isEqual) || [];
  const tokensToSearch = swapsTokens.length ? swapsTokens : [memoizedDefaultToken, ...shuffledTokenList.filter(token => token.symbol !== memoizedDefaultToken.symbol)];
  const memoizedTokensToSearch = (0, _useEqualityCheck.useEqualityCheck)(tokensToSearch);
  return (0, _react.useMemo)(() => {
    const usersTokensAddressMap = memoizedUsersToken.reduce((acc, token) => _objectSpread(_objectSpread({}, acc), {}, {
      [token.address.toLowerCase()]: token
    }), {});
    const tokensToSearchBuckets = {
      owned: [],
      top: [],
      others: []
    };
    const memoizedSwapsAndUserTokensWithoutDuplicities = (0, _lodash.uniqBy)([memoizedDefaultToken, ...memoizedTokensToSearch, ...memoizedUsersToken], token => token.address.toLowerCase());
    memoizedSwapsAndUserTokensWithoutDuplicities.forEach(token => {
      const renderableDataToken = getRenderableTokenData(_objectSpread(_objectSpread({}, usersTokensAddressMap[token.address.toLowerCase()]), token), tokenConversionRates, conversionRate, currentCurrency, chainId, tokenList, useTokenDetection);

      if (memoizedTopTokens[token.address.toLowerCase()]) {
        tokensToSearchBuckets.top[memoizedTopTokens[token.address.toLowerCase()].index] = renderableDataToken;
      } else if ((0, _swaps2.isSwapsDefaultTokenSymbol)(renderableDataToken.symbol, chainId) || usersTokensAddressMap[token.address.toLowerCase()]) {
        tokensToSearchBuckets.owned.push(renderableDataToken);
      } else {
        tokensToSearchBuckets.others.push(renderableDataToken);
      }
    });
    tokensToSearchBuckets.owned = tokensToSearchBuckets.owned.sort(({
      rawFiat
    }, {
      rawFiat: secondRawFiat
    }) => {
      return new _bignumber.default(rawFiat || 0).gt(secondRawFiat || 0) ? -1 : 1;
    });
    tokensToSearchBuckets.top = tokensToSearchBuckets.top.filter(Boolean);
    return [...tokensToSearchBuckets.top, ...tokensToSearchBuckets.owned, ...tokensToSearchBuckets.others];
  }, [memoizedTokensToSearch, memoizedUsersToken, tokenConversionRates, conversionRate, currentCurrency, memoizedTopTokens, memoizedDefaultToken, chainId, tokenList, useTokenDetection]);
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useTokensToSearch.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-input-pair\\index.js", {"./dropdown-input-pair":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-input-pair\\dropdown-input-pair.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\dropdown-input-pair\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _dropdownInputPair.default;
  }
});

var _dropdownInputPair = _interopRequireDefault(require("./dropdown-input-pair"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-input-pair\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\slippage-buttons\\index.js", {"./slippage-buttons":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\slippage-buttons\\slippage-buttons.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\slippage-buttons\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _slippageButtons.default;
  }
});

var _slippageButtons = _interopRequireDefault(require("./slippage-buttons"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\slippage-buttons\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-search-list\\index.js", {"./dropdown-search-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-search-list\\dropdown-search-list.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\dropdown-search-list\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _dropdownSearchList.default;
  }
});

var _dropdownSearchList = _interopRequireDefault(require("./dropdown-search-list"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-search-list\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-approve\\confirm-approve.util.js", {"../../../shared/constants/transaction":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\transaction.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../helpers/utils/token-util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\token-util.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-approve\confirm-approve.util.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCustomTxParamsData = getCustomTxParamsData;

var _transaction = require("../../../shared/constants/transaction");

var _conversions = require("../../helpers/utils/conversions.util");

var _tokenUtil = require("../../helpers/utils/token-util");

var _transactions = require("../../helpers/utils/transactions.util");

function getCustomTxParamsData(data, {
  customPermissionAmount,
  decimals
}) {
  const tokenData = (0, _transactions.getTransactionData)(data);

  if (!tokenData) {
    throw new Error('Invalid data');
  } else if (tokenData.name !== _transaction.TRANSACTION_TYPES.TOKEN_METHOD_APPROVE) {
    throw new Error(`Invalid data; should be 'approve' method, but instead is '${tokenData.name}'`);
  }

  let spender = (0, _tokenUtil.getTokenAddressParam)(tokenData);

  if (spender.startsWith('0x')) {
    spender = spender.substring(2);
  }

  const [signature, tokenValue] = data.split(spender);

  if (!signature || !tokenValue) {
    throw new Error('Invalid data');
  } else if (tokenValue.length !== 64) {
    throw new Error('Invalid token value; should be exactly 64 hex digits long (u256)');
  }

  let customPermissionValue = (0, _conversions.decimalToHex)((0, _tokenUtil.calcTokenValue)(customPermissionAmount, decimals));

  if (customPermissionValue.length > 64) {
    throw new Error('Custom value is larger than u256');
  }

  customPermissionValue = customPermissionValue.padStart(tokenValue.length, '0');
  const customTxParamsData = `${signature}${spender}${customPermissionValue}`;
  return customTxParamsData;
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-approve\\confirm-approve.util.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\transaction-modal.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\contexts\transaction-modal.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TransactionModalContextProvider = exports.TransactionModalContext = void 0;
exports.useTransactionModalContext = useTransactionModalContext;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const TransactionModalContext = /*#__PURE__*/(0, _react.createContext)({});
exports.TransactionModalContext = TransactionModalContext;

const TransactionModalContextProvider = ({
  children
}) => {
  const [openModals, setOpenModals] = (0, _react.useState)([]);

  const closeModal = modalName => {
    const index = openModals.indexOf(modalName);

    if (openModals < 0) {
      return;
    }

    const modals = [...openModals];
    modals.splice(index, 1);
    setOpenModals(modals);
  };

  const closeAllModals = () => {
    setOpenModals([]);
  };

  const openModal = modalName => {
    if (openModals.includes(modalName)) {
      return;
    }

    const modals = [...openModals];
    modals.push(modalName);
    setOpenModals(modals);
  };

  return /*#__PURE__*/_react.default.createElement(TransactionModalContext.Provider, {
    value: {
      closeModal,
      closeAllModals,
      currentModal: openModals[openModals.length - 1],
      openModal,
      openModalCount: openModals.length
    }
  }, children);
};

exports.TransactionModalContextProvider = TransactionModalContextProvider;

function useTransactionModalContext() {
  return (0, _react.useContext)(TransactionModalContext);
}

TransactionModalContextProvider.propTypes = {
  children: _propTypes.default.node.isRequired
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\transaction-modal.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\gasFee.js", {"../hooks/gasFeeInput/useGasFeeInputs":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasFeeInputs.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\contexts\gasFee.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GasFeeContextProvider = exports.GasFeeContext = void 0;
exports.useGasFeeContext = useGasFeeContext;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _useGasFeeInputs = require("../hooks/gasFeeInput/useGasFeeInputs");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const GasFeeContext = /*#__PURE__*/(0, _react.createContext)({});
exports.GasFeeContext = GasFeeContext;

const GasFeeContextProvider = ({
  children,
  defaultEstimateToUse,
  transaction,
  minimumGasLimit,
  editGasMode
}) => {
  const gasFeeDetails = (0, _useGasFeeInputs.useGasFeeInputs)(defaultEstimateToUse, transaction, minimumGasLimit, editGasMode);
  return /*#__PURE__*/_react.default.createElement(GasFeeContext.Provider, {
    value: gasFeeDetails
  }, children);
};

exports.GasFeeContextProvider = GasFeeContextProvider;

function useGasFeeContext() {
  return (0, _react.useContext)(GasFeeContext);
}

GasFeeContextProvider.propTypes = {
  children: _propTypes.default.node.isRequired,
  defaultEstimateToUse: _propTypes.default.string,
  transaction: _propTypes.default.object,
  minimumGasLimit: _propTypes.default.string,
  editGasMode: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\gasFee.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\view-quote\\view-quote-price-difference.js", {"../../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../components/ui/actionable-message/actionable-message":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\actionable-message\\actionable-message.js","../../../components/ui/box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","../../../components/ui/tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tooltip\\index.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\view-quote\view-quote-price-difference.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ViewQuotePriceDifference;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _i18n = require("../../../contexts/i18n");

var _actionableMessage = _interopRequireDefault(require("../../../components/ui/actionable-message/actionable-message"));

var _tooltip = _interopRequireDefault(require("../../../components/ui/tooltip"));

var _box = _interopRequireDefault(require("../../../components/ui/box"));

var _designSystem = require("../../../helpers/constants/design-system");

var _gas = require("../../../../shared/constants/gas");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ViewQuotePriceDifference(props) {
  const {
    usedQuote,
    sourceTokenValue,
    destinationTokenValue,
    onAcknowledgementClick,
    acknowledged,
    priceSlippageFromSource,
    priceSlippageFromDestination,
    priceDifferencePercentage,
    priceSlippageUnknownFiatValue
  } = props;
  const t = (0, _react.useContext)(_i18n.I18nContext);
  let priceDifferenceTitle = '';
  let priceDifferenceMessage = '';
  let priceDifferenceClass = '';
  let priceDifferenceAcknowledgementText = '';

  if (priceSlippageUnknownFiatValue) {
    // A calculation error signals we cannot determine dollar value
    priceDifferenceTitle = t('swapPriceUnavailableTitle');
    priceDifferenceMessage = t('swapPriceUnavailableDescription');
    priceDifferenceClass = _gas.GAS_RECOMMENDATIONS.HIGH;
    priceDifferenceAcknowledgementText = t('tooltipApproveButton');
  } else {
    priceDifferenceTitle = t('swapPriceDifferenceTitle', [priceDifferencePercentage]);
    priceDifferenceMessage = t('swapPriceDifference', [sourceTokenValue, // Number of source token to swap
    usedQuote.sourceTokenInfo.symbol, // Source token symbol
    priceSlippageFromSource, // Source tokens total value
    destinationTokenValue, // Number of destination tokens in return
    usedQuote.destinationTokenInfo.symbol, // Destination token symbol,
    priceSlippageFromDestination // Destination tokens total value
    ]);
    priceDifferenceClass = usedQuote.priceSlippage.bucket;
    priceDifferenceAcknowledgementText = t('tooltipApproveButton');
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('view-quote__price-difference-warning-wrapper', priceDifferenceClass)
  }, /*#__PURE__*/_react.default.createElement(_actionableMessage.default, {
    message: /*#__PURE__*/_react.default.createElement("div", {
      className: "view-quote__price-difference-warning-contents"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "view-quote__price-difference-warning-contents-text"
    }, /*#__PURE__*/_react.default.createElement(_box.default, {
      display: _designSystem.DISPLAY.FLEX,
      justifyContent: _designSystem.JUSTIFY_CONTENT.SPACE_BETWEEN,
      paddingBottom: 2
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "view-quote__price-difference-warning-contents-title"
    }, priceDifferenceTitle), /*#__PURE__*/_react.default.createElement(_tooltip.default, {
      position: "bottom",
      theme: "white",
      title: t('swapPriceImpactTooltip')
    }, /*#__PURE__*/_react.default.createElement("i", {
      className: "fa fa-info-circle"
    }))), priceDifferenceMessage, !acknowledged && /*#__PURE__*/_react.default.createElement("div", {
      className: "view-quote__price-difference-warning-contents-actions"
    }, /*#__PURE__*/_react.default.createElement("button", {
      onClick: () => {
        onAcknowledgementClick();
      }
    }, priceDifferenceAcknowledgementText))))
  }));
}

ViewQuotePriceDifference.propTypes = {
  usedQuote: _propTypes.default.object,
  sourceTokenValue: _propTypes.default.string,
  destinationTokenValue: _propTypes.default.string,
  onAcknowledgementClick: _propTypes.default.func,
  acknowledged: _propTypes.default.bool,
  priceSlippageFromSource: _propTypes.default.string,
  priceSlippageFromDestination: _propTypes.default.string,
  priceDifferencePercentage: _propTypes.default.number,
  priceSlippageUnknownFiatValue: _propTypes.default.bool
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\view-quote\\view-quote-price-difference.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasFeeInputs.js", {"../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../helpers/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\gas.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../useGasFeeEstimates":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useGasFeeEstimates.js","./useGasEstimates":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasEstimates.js","./useGasFeeErrors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasFeeErrors.js","./useGasPriceInput":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasPriceInput.js","./useMaxFeePerGasInput":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useMaxFeePerGasInput.js","./useMaxPriorityFeePerGasInput":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useMaxPriorityFeePerGasInput.js","./useTransactionFunctions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useTransactionFunctions.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\gasFeeInput\useGasFeeInputs.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useGasFeeInputs = useGasFeeInputs;

var _react = require("react");

var _reactRedux = require("react-redux");

var _gas = require("../../../shared/constants/gas");

var _gas2 = require("../../helpers/constants/gas");

var _selectors = require("../../selectors");

var _conversions = require("../../helpers/utils/conversions.util");

var _transactions = require("../../helpers/utils/transactions.util");

var _useGasFeeEstimates = require("../useGasFeeEstimates");

var _useGasFeeErrors = require("./useGasFeeErrors");

var _useGasPriceInput = require("./useGasPriceInput");

var _useMaxFeePerGasInput = require("./useMaxFeePerGasInput");

var _useMaxPriorityFeePerGasInput = require("./useMaxPriorityFeePerGasInput");

var _useGasEstimates = require("./useGasEstimates");

var _useTransactionFunctions = require("./useTransactionFunctions");

/**
 * In EIP_1559_V2 implementation as used by useGasfeeInputContext() the use of this hook is evolved.
 * It is no longer used to keep transient state of advance gas fee inputs.
 * Transient state of inputs is maintained locally in /ui/components/app/advance-gas-fee-popover component.
 *
 * This hook is used now as source of shared data about transaction, it shares details of gas fee in transaction,
 * estimate used, is EIP-1559 supported and other details. It also  have methods to update transaction.
 *
 * Transaction is used as single source of truth and as transaction is updated the fields shared by hook are
 * also updated using useEffect hook.
 *
 * It will be useful to plan a task to create a new hook of this shared information from this hook.
 * Methods like setEstimateToUse, onManualChange are deprecated in context of EIP_1559_V2 implementation.
 */

/**
 * @typedef {Object} GasFeeInputReturnType
 * @property {DecGweiString} [maxFeePerGas] - the maxFeePerGas input value.
 * @property {string} [maxFeePerGasFiat] - the maxFeePerGas converted to the
 *  user's preferred currency.
 * @property {(DecGweiString) => void} setMaxFeePerGas - state setter method to
 *  update the maxFeePerGas.
 * @property {DecGweiString} [maxPriorityFeePerGas] - the maxPriorityFeePerGas
 *  input value.
 * @property {string} [maxPriorityFeePerGasFiat] - the maxPriorityFeePerGas
 *  converted to the user's preferred currency.
 * @property {(DecGweiString) => void} setMaxPriorityFeePerGas - state setter
 *  method to update the maxPriorityFeePerGas.
 * @property {DecGweiString} [gasPrice] - the gasPrice input value.
 * @property {(DecGweiString) => void} setGasPrice - state setter method to
 *  update the gasPrice.
 * @property {DecGweiString} gasLimit - the gasLimit input value.
 * @property {(DecGweiString) => void} setGasLimit - state setter method to
 *  update the gasLimit.
 * @property {EstimateLevel} [estimateToUse] - the estimate level currently
 *  selected. This will be null if the user has ejected from using the
 *  estimates.
 * @property {([EstimateLevel]) => void} setEstimateToUse - Setter method for
 *  choosing which EstimateLevel to use.
 * @property {string} [estimatedMinimumFiat] - The amount estimated to be paid
 *  based on current network conditions. Expressed in user's preferred
 *  currency.
 * @property {string} [estimatedMaximumFiat] - the maximum amount estimated to be
 *  paid if current network transaction volume increases. Expressed in user's
 *  preferred currency.
 * @property {string} [estimatedMaximumNative] - the maximum amount estimated to
 *  be paid if the current network transaction volume increases. Expressed in
 *  the network's native currency.
 */

/**
 * Uses gasFeeEstimates and state to keep track of user gas fee inputs.
 * Will update the gas fee state when estimates update if the user has not yet
 * modified the fields.
 *
 * @param {EstimateLevel} [defaultEstimateToUse] - which estimate
 *  level to default the 'estimateToUse' state variable to.
 * @param {object} [transaction]
 * @param {string} [minimumGasLimit]
 * @param {EDIT_GAS_MODES[keyof EDIT_GAS_MODES]} editGasMode
 * @returns {GasFeeInputReturnType & __import__(
 *  './useGasFeeEstimates'
 * ).GasEstimates} gas fee input state and the GasFeeEstimates object
 */
function useGasFeeInputs(defaultEstimateToUse = _gas.GAS_RECOMMENDATIONS.MEDIUM, transaction, minimumGasLimit = '0x5208', editGasMode = _gas.EDIT_GAS_MODES.MODIFY_IN_PLACE) {
  const eip1559V2Enabled = (0, _reactRedux.useSelector)(_selectors.getEIP1559V2Enabled);
  const supportsEIP1559 = (0, _reactRedux.useSelector)(_selectors.checkNetworkAndAccountSupports1559) && !(0, _transactions.isLegacyTransaction)(transaction === null || transaction === void 0 ? void 0 : transaction.txParams);
  const supportsEIP1559V2 = supportsEIP1559 && eip1559V2Enabled; // We need the gas estimates from the GasFeeController in the background.
  // Calling this hooks initiates polling for new gas estimates and returns the
  // current estimate.

  const {
    gasEstimateType,
    gasFeeEstimates,
    isGasEstimatesLoading,
    estimatedGasFeeTimeBounds,
    isNetworkBusy
  } = (0, _useGasFeeEstimates.useGasFeeEstimates)();
  const userPrefersAdvancedGas = (0, _reactRedux.useSelector)(_selectors.getAdvancedInlineGasShown);
  const [estimateToUse, setInternalEstimateToUse] = (0, _react.useState)(() => {
    var _transaction$txParams, _transaction$txParams2;

    if (userPrefersAdvancedGas && transaction !== null && transaction !== void 0 && (_transaction$txParams = transaction.txParams) !== null && _transaction$txParams !== void 0 && _transaction$txParams.maxPriorityFeePerGas && transaction !== null && transaction !== void 0 && (_transaction$txParams2 = transaction.txParams) !== null && _transaction$txParams2 !== void 0 && _transaction$txParams2.maxFeePerGas) {
      return null;
    }

    if (transaction) {
      return (transaction === null || transaction === void 0 ? void 0 : transaction.userFeeLevel) || null;
    }

    return defaultEstimateToUse;
  });
  const [estimateUsed, setEstimateUsed] = (0, _react.useState)(() => {
    if (estimateToUse) {
      return estimateToUse;
    }

    return _gas.PRIORITY_LEVELS.CUSTOM;
  });
  const [gasLimit, setGasLimit] = (0, _react.useState)(() => {
    var _transaction$txParams3, _transaction$txParams4;

    return Number((0, _conversions.hexToDecimal)((_transaction$txParams3 = transaction === null || transaction === void 0 ? void 0 : (_transaction$txParams4 = transaction.txParams) === null || _transaction$txParams4 === void 0 ? void 0 : _transaction$txParams4.gas) !== null && _transaction$txParams3 !== void 0 ? _transaction$txParams3 : '0x0'));
  });
  const properGasLimit = Number((0, _conversions.hexToDecimal)(transaction === null || transaction === void 0 ? void 0 : transaction.originalGasEstimate));
  const [userEditedGasLimit, setUserEditedGasLimit] = (0, _react.useState)(() => Boolean(transaction === null || transaction === void 0 ? void 0 : transaction.userEditedGasLimit));
  /**
   * In EIP-1559 V2 designs change to gas estimate is always updated to transaction
   * Thus callback setEstimateToUse can be deprecate in favour of this useEffect
   * so that transaction is source of truth whenever possible.
   */

  (0, _react.useEffect)(() => {
    if (supportsEIP1559V2) {
      var _transaction$txParams5, _transaction$txParams6;

      if (transaction !== null && transaction !== void 0 && transaction.userFeeLevel) {
        setEstimateUsed(transaction === null || transaction === void 0 ? void 0 : transaction.userFeeLevel);
        setInternalEstimateToUse(transaction === null || transaction === void 0 ? void 0 : transaction.userFeeLevel);
      }

      setGasLimit(Number((0, _conversions.hexToDecimal)((_transaction$txParams5 = transaction === null || transaction === void 0 ? void 0 : (_transaction$txParams6 = transaction.txParams) === null || _transaction$txParams6 === void 0 ? void 0 : _transaction$txParams6.gas) !== null && _transaction$txParams5 !== void 0 ? _transaction$txParams5 : '0x0')));
    }
  }, [setEstimateUsed, setGasLimit, setInternalEstimateToUse, supportsEIP1559V2, transaction]);
  const {
    gasPrice,
    setGasPrice,
    setGasPriceHasBeenManuallySet
  } = (0, _useGasPriceInput.useGasPriceInput)({
    estimateToUse,
    gasEstimateType,
    gasFeeEstimates,
    transaction
  });
  const {
    maxFeePerGas,
    maxFeePerGasFiat,
    setMaxFeePerGas
  } = (0, _useMaxFeePerGasInput.useMaxFeePerGasInput)({
    estimateToUse,
    gasEstimateType,
    gasFeeEstimates,
    gasLimit,
    gasPrice,
    supportsEIP1559V2,
    transaction
  });
  const {
    maxPriorityFeePerGas,
    maxPriorityFeePerGasFiat,
    setMaxPriorityFeePerGas
  } = (0, _useMaxPriorityFeePerGasInput.useMaxPriorityFeePerGasInput)({
    estimateToUse,
    gasEstimateType,
    gasFeeEstimates,
    gasLimit,
    supportsEIP1559V2,
    transaction
  });
  const {
    estimatedBaseFee,
    estimatedMaximumFiat,
    estimatedMinimumFiat,
    estimatedMaximumNative,
    estimatedMinimumNative,
    maximumCostInHexWei,
    minimumCostInHexWei
  } = (0, _useGasEstimates.useGasEstimates)({
    editGasMode,
    gasEstimateType,
    gasFeeEstimates,
    gasLimit,
    gasPrice,
    maxFeePerGas,
    maxPriorityFeePerGas,
    minimumGasLimit,
    transaction
  });
  const {
    balanceError,
    estimatesUnavailableWarning,
    gasErrors,
    gasWarnings,
    hasGasErrors,
    hasSimulationError
  } = (0, _useGasFeeErrors.useGasFeeErrors)({
    gasEstimateType,
    gasFeeEstimates,
    isGasEstimatesLoading,
    gasLimit,
    gasPrice,
    maxPriorityFeePerGas,
    maxFeePerGas,
    minimumCostInHexWei,
    minimumGasLimit,
    transaction
  });
  const handleGasLimitOutOfBoundError = (0, _react.useCallback)(() => {
    if (gasErrors.gasLimit === _gas2.GAS_FORM_ERRORS.GAS_LIMIT_OUT_OF_BOUNDS) {
      var _transaction$txParams7;

      const transactionGasLimitDec = (0, _conversions.hexToDecimal)(transaction === null || transaction === void 0 ? void 0 : (_transaction$txParams7 = transaction.txParams) === null || _transaction$txParams7 === void 0 ? void 0 : _transaction$txParams7.gas);
      const minimumGasLimitDec = (0, _conversions.hexToDecimal)(minimumGasLimit);
      setGasLimit(transactionGasLimitDec > minimumGasLimitDec ? transactionGasLimitDec : minimumGasLimitDec);
    }
  }, [minimumGasLimit, gasErrors.gasLimit, transaction]);
  const {
    cancelTransaction,
    speedUpTransaction,
    updateTransaction,
    updateTransactionToTenPercentIncreasedGasFee,
    updateTransactionUsingDAPPSuggestedValues,
    updateTransactionUsingEstimate
  } = (0, _useTransactionFunctions.useTransactionFunctions)({
    defaultEstimateToUse,
    editGasMode,
    gasFeeEstimates,
    gasLimit,
    maxPriorityFeePerGas,
    minimumGasLimit,
    transaction
  }); // When a user selects an estimate level, it will wipe out what they have
  // previously put in the inputs. This returns the inputs to the estimated
  // values at the level specified.

  const setEstimateToUse = (0, _react.useCallback)(estimateLevel => {
    setInternalEstimateToUse(estimateLevel);
    handleGasLimitOutOfBoundError();
    setMaxFeePerGas(null);
    setMaxPriorityFeePerGas(null);
    setGasPrice(null);
    setGasPriceHasBeenManuallySet(false);
    setEstimateUsed(estimateLevel);
  }, [setInternalEstimateToUse, handleGasLimitOutOfBoundError, setMaxFeePerGas, setMaxPriorityFeePerGas, setGasPrice, setGasPriceHasBeenManuallySet, setEstimateUsed]);
  const onManualChange = (0, _react.useCallback)(() => {
    setInternalEstimateToUse(_gas.CUSTOM_GAS_ESTIMATE);
    handleGasLimitOutOfBoundError(); // Restore existing values

    setGasPrice(gasPrice);
    setGasLimit(gasLimit);
    setUserEditedGasLimit(true);
    setMaxFeePerGas(maxFeePerGas);
    setMaxPriorityFeePerGas(maxPriorityFeePerGas);
    setGasPriceHasBeenManuallySet(true);
    setEstimateUsed('custom');
  }, [setInternalEstimateToUse, handleGasLimitOutOfBoundError, setGasPrice, gasPrice, setGasLimit, gasLimit, setUserEditedGasLimit, setMaxFeePerGas, maxFeePerGas, setMaxPriorityFeePerGas, maxPriorityFeePerGas, setGasPriceHasBeenManuallySet]);
  return {
    transaction,
    maxFeePerGas,
    maxFeePerGasFiat,
    setMaxFeePerGas,
    maxPriorityFeePerGas,
    maxPriorityFeePerGasFiat,
    setMaxPriorityFeePerGas,
    gasPrice,
    setGasPrice,
    gasLimit,
    setGasLimit,
    properGasLimit,
    userEditedGasLimit,
    editGasMode,
    estimateToUse,
    setEstimateToUse,
    estimatedMinimumFiat,
    estimatedMaximumFiat,
    estimatedMaximumNative,
    estimatedMinimumNative,
    isGasEstimatesLoading,
    maximumCostInHexWei,
    minimumCostInHexWei,
    estimateUsed,
    gasFeeEstimates,
    gasEstimateType,
    estimatedGasFeeTimeBounds,
    isNetworkBusy,
    onManualChange,
    estimatedBaseFee,
    // error and warnings
    balanceError,
    estimatesUnavailableWarning,
    gasErrors,
    gasWarnings,
    hasGasErrors,
    hasSimulationError,
    minimumGasLimitDec: (0, _conversions.hexToDecimal)(minimumGasLimit),
    supportsEIP1559,
    supportsEIP1559V2,
    cancelTransaction,
    speedUpTransaction,
    updateTransaction,
    updateTransactionToTenPercentIncreasedGasFee,
    updateTransactionUsingDAPPSuggestedValues,
    updateTransactionUsingEstimate
  };
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasFeeInputs.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\countdown-timer\\index.js", {"./countdown-timer":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\countdown-timer\\countdown-timer.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\countdown-timer\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _countdownTimer.default;
  }
});

var _countdownTimer = _interopRequireDefault(require("./countdown-timer"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\countdown-timer\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\main-quote-summary\\index.js", {"./main-quote-summary":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\main-quote-summary\\main-quote-summary.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\main-quote-summary\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _mainQuoteSummary.default;
  }
});

var _mainQuoteSummary = _interopRequireDefault(require("./main-quote-summary"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\main-quote-summary\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-popover\\edit-gas-popover.component.js", {"../../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../../shared/modules/transaction.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\transaction.utils.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../ducks/app/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\app\\app.js","../../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","../../../hooks/gasFeeInput/useGasFeeInputs":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasFeeInputs.js","../../../hooks/useIncrementedGasFees":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useIncrementedGasFees.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../ui/loading-heartbeat":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\loading-heartbeat\\index.js","../../ui/popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\popover\\index.js","../edit-gas-display":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-display\\index.js","../edit-gas-display-education":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-display-education\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/extends":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\extends.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","_process":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\process\\browser.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\edit-gas-popover\edit-gas-popover.component.js
      return function (require, module, exports) {
(function (process){(function (){
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = EditGasPopover;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _useGasFeeInputs = require("../../../hooks/gasFeeInput/useGasFeeInputs");

var _app = require("../../../ducks/app/app");

var _transaction = require("../../../../shared/modules/transaction.utils");

var _gas = require("../../../../shared/constants/gas");

var _conversions = require("../../../helpers/utils/conversions.util");

var _popover = _interopRequireDefault(require("../../ui/popover"));

var _button = _interopRequireDefault(require("../../ui/button"));

var _editGasDisplay = _interopRequireDefault(require("../edit-gas-display"));

var _editGasDisplayEducation = _interopRequireDefault(require("../edit-gas-display-education"));

var _i18n = require("../../../contexts/i18n");

var _actions = require("../../../store/actions");

var _loadingHeartbeat = _interopRequireDefault(require("../../ui/loading-heartbeat"));

var _selectors = require("../../../selectors");

var _useIncrementedGasFees = require("../../../hooks/useIncrementedGasFees");

var _transactions = require("../../../helpers/utils/transactions.util");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function EditGasPopover({
  popoverTitle = '',
  confirmButtonText = '',
  editGasDisplayProps = {},
  defaultEstimateToUse = _gas.GAS_RECOMMENDATIONS.MEDIUM,
  transaction,
  mode,
  onClose,
  minimumGasLimit = _gas.GAS_LIMITS.SIMPLE
}) {
  const t = (0, _react.useContext)(_i18n.I18nContext);
  const dispatch = (0, _reactRedux.useDispatch)();
  const supportsEIP1559 = (0, _reactRedux.useSelector)(_selectors.checkNetworkAndAccountSupports1559) && !(0, _transactions.isLegacyTransaction)(transaction === null || transaction === void 0 ? void 0 : transaction.txParams);
  const gasLoadingAnimationIsShowing = (0, _reactRedux.useSelector)(_app.getGasLoadingAnimationIsShowing);
  const showEducationButton = (mode === _gas.EDIT_GAS_MODES.MODIFY_IN_PLACE || mode === _gas.EDIT_GAS_MODES.SWAPS) && supportsEIP1559;
  const [showEducationContent, setShowEducationContent] = (0, _react.useState)(false);
  const [dappSuggestedGasFeeAcknowledged, setDappSuggestedGasFeeAcknowledged] = (0, _react.useState)(false);
  const minimumGasLimitDec = (0, _conversions.hexToDecimal)(minimumGasLimit);
  const updatedCustomGasSettings = (0, _useIncrementedGasFees.useIncrementedGasFees)(transaction);
  let updatedTransaction = transaction;

  if (mode === _gas.EDIT_GAS_MODES.SPEED_UP || mode === _gas.EDIT_GAS_MODES.CANCEL) {
    updatedTransaction = _objectSpread(_objectSpread({}, transaction), {}, {
      userFeeLevel: _gas.CUSTOM_GAS_ESTIMATE,
      txParams: _objectSpread(_objectSpread({}, transaction.txParams), updatedCustomGasSettings)
    });
  }

  const {
    maxPriorityFeePerGas,
    setMaxPriorityFeePerGas,
    maxPriorityFeePerGasFiat,
    maxFeePerGas,
    setMaxFeePerGas,
    maxFeePerGasFiat,
    estimatedMaximumNative,
    estimatedMinimumNative,
    isGasEstimatesLoading,
    gasEstimateType,
    gasPrice,
    setGasPrice,
    gasLimit,
    setGasLimit,
    properGasLimit,
    estimateToUse,
    setEstimateToUse,
    estimatedMinimumFiat,
    estimatedMaximumFiat,
    hasGasErrors,
    gasErrors,
    gasWarnings,
    onManualChange,
    balanceError,
    estimatesUnavailableWarning,
    estimatedBaseFee,
    isNetworkBusy
  } = (0, _useGasFeeInputs.useGasFeeInputs)(defaultEstimateToUse, updatedTransaction, minimumGasLimit, mode);
  const txParamsHaveBeenCustomized = estimateToUse === _gas.CUSTOM_GAS_ESTIMATE || (0, _transaction.txParamsAreDappSuggested)(updatedTransaction);
  /**
   * Temporary placeholder, this should be managed by the parent component but
   * we will be extracting this component from the hard to maintain modal
   * component. For now this is just to be able to appropriately close
   * the modal in testing
   */

  const closePopover = (0, _react.useCallback)(() => {
    if (onClose) {
      onClose();
    } else {
      dispatch((0, _actions.hideModal)());
    }
  }, [onClose, dispatch]);
  const onSubmit = (0, _react.useCallback)(() => {
    if (!updatedTransaction || !mode) {
      closePopover();
    }

    const newGasSettings = {
      gas: (0, _conversions.decimalToHex)(gasLimit),
      gasLimit: (0, _conversions.decimalToHex)(gasLimit),
      estimateSuggested: defaultEstimateToUse,
      estimateUsed: estimateToUse
    };

    if (supportsEIP1559) {
      var _ref;

      newGasSettings.maxFeePerGas = (0, _conversions.decGWEIToHexWEI)(maxFeePerGas !== null && maxFeePerGas !== void 0 ? maxFeePerGas : gasPrice);
      newGasSettings.maxPriorityFeePerGas = (0, _conversions.decGWEIToHexWEI)((_ref = maxPriorityFeePerGas !== null && maxPriorityFeePerGas !== void 0 ? maxPriorityFeePerGas : maxFeePerGas) !== null && _ref !== void 0 ? _ref : gasPrice);
    } else {
      newGasSettings.gasPrice = (0, _conversions.decGWEIToHexWEI)(gasPrice);
    }

    const cleanTransactionParams = _objectSpread({}, updatedTransaction.txParams);

    if (supportsEIP1559) {
      delete cleanTransactionParams.gasPrice;
    }

    const updatedTxMeta = _objectSpread(_objectSpread({}, updatedTransaction), {}, {
      userEditedGasLimit: gasLimit !== Number(transaction.originalGasEstimate),
      userFeeLevel: estimateToUse || _gas.CUSTOM_GAS_ESTIMATE,
      txParams: _objectSpread(_objectSpread({}, cleanTransactionParams), newGasSettings)
    });

    switch (mode) {
      case _gas.EDIT_GAS_MODES.CANCEL:
        dispatch((0, _actions.createCancelTransaction)(updatedTransaction.id, newGasSettings, {
          estimatedBaseFee
        }));
        break;

      case _gas.EDIT_GAS_MODES.SPEED_UP:
        dispatch((0, _actions.createSpeedUpTransaction)(updatedTransaction.id, newGasSettings, {
          estimatedBaseFee
        }));
        break;

      case _gas.EDIT_GAS_MODES.MODIFY_IN_PLACE:
        dispatch((0, _actions.updateTransaction)(updatedTxMeta));
        break;

      case _gas.EDIT_GAS_MODES.SWAPS:
        // This popover component should only be used for the "FEE_MARKET" type in Swaps.
        if (supportsEIP1559) {
          dispatch((0, _actions.updateSwapsUserFeeLevel)(estimateToUse || _gas.CUSTOM_GAS_ESTIMATE));
          dispatch((0, _actions.updateCustomSwapsEIP1559GasParams)(newGasSettings));
        }

        break;

      default:
        break;
    }

    closePopover();
  }, [updatedTransaction, mode, dispatch, closePopover, gasLimit, gasPrice, transaction.originalGasEstimate, maxFeePerGas, maxPriorityFeePerGas, supportsEIP1559, estimateToUse, estimatedBaseFee, defaultEstimateToUse]);
  let title = t('editGasTitle');

  if (popoverTitle) {
    title = popoverTitle;
  } else if (showEducationContent) {
    title = t('editGasEducationModalTitle');
  } else if (mode === _gas.EDIT_GAS_MODES.SPEED_UP) {
    title = t('speedUpPopoverTitle');
  } else if (mode === _gas.EDIT_GAS_MODES.CANCEL) {
    title = t('cancelPopoverTitle');
  }

  const footerButtonText = confirmButtonText || t('save');
  return /*#__PURE__*/_react.default.createElement(_popover.default, {
    title: title,
    onClose: closePopover,
    className: "edit-gas-popover__wrapper",
    onBack: showEducationContent ? () => setShowEducationContent(false) : undefined,
    footer: showEducationContent ? null : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "primary",
      onClick: onSubmit,
      disabled: hasGasErrors || balanceError || (isGasEstimatesLoading || gasLoadingAnimationIsShowing) && !txParamsHaveBeenCustomized
    }, footerButtonText))
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      padding: '0 20px 20px 20px',
      position: 'relative'
    }
  }, showEducationContent ? /*#__PURE__*/_react.default.createElement(_editGasDisplayEducation.default, null) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, process.env.IN_TEST ? null : /*#__PURE__*/_react.default.createElement(_loadingHeartbeat.default, null), /*#__PURE__*/_react.default.createElement(_editGasDisplay.default, (0, _extends2.default)({
    showEducationButton: showEducationButton,
    dappSuggestedGasFeeAcknowledged: dappSuggestedGasFeeAcknowledged,
    setDappSuggestedGasFeeAcknowledged: setDappSuggestedGasFeeAcknowledged,
    maxPriorityFeePerGas: maxPriorityFeePerGas,
    setMaxPriorityFeePerGas: setMaxPriorityFeePerGas,
    maxPriorityFeePerGasFiat: maxPriorityFeePerGasFiat,
    maxFeePerGas: maxFeePerGas,
    setMaxFeePerGas: setMaxFeePerGas,
    maxFeePerGasFiat: maxFeePerGasFiat,
    estimatedMaximumNative: estimatedMaximumNative,
    estimatedMinimumNative: estimatedMinimumNative,
    isGasEstimatesLoading: isGasEstimatesLoading,
    gasEstimateType: gasEstimateType,
    gasPrice: gasPrice,
    setGasPrice: setGasPrice,
    gasLimit: gasLimit,
    setGasLimit: setGasLimit,
    properGasLimit: properGasLimit,
    estimateToUse: estimateToUse,
    setEstimateToUse: setEstimateToUse,
    estimatedMinimumFiat: estimatedMinimumFiat,
    estimatedMaximumFiat: estimatedMaximumFiat,
    onEducationClick: () => setShowEducationContent(true),
    mode: mode,
    transaction: updatedTransaction,
    gasErrors: gasErrors,
    gasWarnings: gasWarnings,
    onManualChange: onManualChange,
    minimumGasLimit: minimumGasLimitDec,
    balanceError: balanceError,
    estimatesUnavailableWarning: estimatesUnavailableWarning,
    hasGasErrors: hasGasErrors,
    txParamsHaveBeenCustomized: txParamsHaveBeenCustomized,
    isNetworkBusy: isNetworkBusy
  }, editGasDisplayProps)))));
}

EditGasPopover.propTypes = {
  popoverTitle: _propTypes.default.string,
  editGasDisplayProps: _propTypes.default.object,
  confirmButtonText: _propTypes.default.string,
  onClose: _propTypes.default.func,
  transaction: _propTypes.default.object,
  mode: _propTypes.default.oneOf(Object.values(_gas.EDIT_GAS_MODES)),
  defaultEstimateToUse: _propTypes.default.string,
  minimumGasLimit: _propTypes.default.string
};

}).call(this)}).call(this,require('_process'))

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-popover\\edit-gas-popover.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\fee-card\\index.js", {"./fee-card":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\fee-card\\fee-card.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\fee-card\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _feeCard.default;
  }
});

var _feeCard = _interopRequireDefault(require("./fee-card"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\fee-card\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\select-quote-popover\\index.js", {"./select-quote-popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\select-quote-popover\\select-quote-popover.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\select-quote-popover\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _selectQuotePopover.default;
  }
});

var _selectQuotePopover = _interopRequireDefault(require("./select-quote-popover"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\select-quote-popover\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-fee-popover\\index.js", {"./edit-gas-fee-popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-fee-popover\\edit-gas-fee-popover.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\edit-gas-fee-popover\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _editGasFeePopover.default;
  }
});

var _editGasFeePopover = _interopRequireDefault(require("./edit-gas-fee-popover"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-fee-popover\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\index.js", {"./advanced-gas-fee-popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\advanced-gas-fee-popover.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\advanced-gas-fee-popover\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _advancedGasFeePopover.default;
  }
});

var _advancedGasFeePopover = _interopRequireDefault(require("./advanced-gas-fee-popover"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-header\\send-header.component.js", {"../../../components/ui/page-container/page-container-header":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-header\\index.js","../../../ducks/history/history":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\history\\history.js","../../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\send\send-header\send-header.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SendHeader;

var _react = _interopRequireDefault(require("react"));

var _reactRouterDom = require("react-router-dom");

var _reactRedux = require("react-redux");

var _pageContainerHeader = _interopRequireDefault(require("../../../components/ui/page-container/page-container-header"));

var _history = require("../../../ducks/history/history");

var _useI18nContext = require("../../../hooks/useI18nContext");

var _send = require("../../../ducks/send");

function SendHeader() {
  const history = (0, _reactRouterDom.useHistory)();
  const mostRecentOverviewPage = (0, _reactRedux.useSelector)(_history.getMostRecentOverviewPage);
  const dispatch = (0, _reactRedux.useDispatch)();
  const stage = (0, _reactRedux.useSelector)(_send.getSendStage);
  const asset = (0, _reactRedux.useSelector)(_send.getSendAsset);
  const t = (0, _useI18nContext.useI18nContext)();

  const onClose = () => {
    dispatch((0, _send.resetSendState)());
    history.push(mostRecentOverviewPage);
  };

  let title = asset.type === _send.ASSET_TYPES.NATIVE ? t('send') : t('sendTokens');

  if (stage === _send.SEND_STAGES.ADD_RECIPIENT || stage === _send.SEND_STAGES.INACTIVE) {
    title = t('sendTo');
  } else if (stage === _send.SEND_STAGES.EDIT) {
    title = t('edit');
  }

  return /*#__PURE__*/_react.default.createElement(_pageContainerHeader.default, {
    className: "send__header",
    onClose: onClose,
    title: title,
    headerCloseText: stage === _send.SEND_STAGES.EDIT ? t('cancelEdit') : t('cancel'),
    hideClose: stage === _send.SEND_STAGES.DRAFT
  });
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-header\\send-header.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-footer\\send-footer.container.js", {"../../../../app/scripts/lib/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\scripts\\lib\\util.js","../../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../ducks/history/history":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\history\\history.js","../../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./send-footer.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-footer\\send-footer.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\send\send-footer\send-footer.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _actions = require("../../../store/actions");

var _selectors = require("../../../selectors");

var _send = require("../../../ducks/send");

var _history = require("../../../ducks/history/history");

var _util = require("../../../../app/scripts/lib/util");

var _metamask = require("../../../ducks/metamask/metamask");

var _gas = require("../../../../shared/constants/gas");

var _sendFooter = _interopRequireDefault(require("./send-footer.component"));

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_sendFooter.default);

exports.default = _default;

function addressIsNew(toAccounts, newAddress) {
  const newAddressNormalized = newAddress.toLowerCase();
  const foundMatching = toAccounts.some(({
    address
  }) => address.toLowerCase() === newAddressNormalized);
  return !foundMatching;
}

function mapStateToProps(state) {
  const gasButtonInfo = (0, _selectors.getRenderableEstimateDataForSmallButtonsFromGWEI)(state);
  const gasPrice = (0, _send.getGasPrice)(state);
  const activeButtonIndex = (0, _selectors.getDefaultActiveButtonIndex)(gasButtonInfo, gasPrice);
  const gasEstimateType = activeButtonIndex >= 0 ? gasButtonInfo[activeButtonIndex].gasEstimateType : _gas.CUSTOM_GAS_ESTIMATE;
  return {
    disabled: (0, _send.isSendFormInvalid)(state),
    to: (0, _send.getSendTo)(state),
    toAccounts: (0, _metamask.getSendToAccounts)(state),
    sendStage: (0, _send.getSendStage)(state),
    sendErrors: (0, _send.getSendErrors)(state),
    draftTransactionID: (0, _send.getDraftTransactionID)(state),
    gasEstimateType,
    mostRecentOverviewPage: (0, _history.getMostRecentOverviewPage)(state)
  };
}

function mapDispatchToProps(dispatch) {
  return {
    resetSendState: () => dispatch((0, _send.resetSendState)()),
    cancelTx: t => dispatch((0, _actions.cancelTx)(t)),
    sign: () => dispatch((0, _send.signTransaction)()),
    addToAddressBookIfNew: (newAddress, toAccounts, nickname = '') => {
      const hexPrefixedAddress = (0, _util.addHexPrefix)(newAddress);

      if (addressIsNew(toAccounts, hexPrefixedAddress)) {
        // TODO: nickname, i.e. addToAddressBook(recipient, nickname)
        dispatch((0, _actions.addToAddressBook)(hexPrefixedAddress, nickname));
      }
    }
  };
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-footer\\send-footer.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\ens-input.container.js", {"../../../../ducks/ens":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\ens.js","./ens-input.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\ens-input.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","lodash":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\lodash.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\send\send-content\add-recipient\ens-input.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _lodash = require("lodash");

var _reactRedux = require("react-redux");

var _ens = require("../../../../ducks/ens");

var _ensInput = _interopRequireDefault(require("./ens-input.component"));

function mapDispatchToProps(dispatch) {
  return {
    lookupEnsName: (0, _lodash.debounce)(ensName => dispatch((0, _ens.lookupEnsName)(ensName)), 150),
    initializeEnsSlice: () => dispatch((0, _ens.initializeEnsSlice)()),
    resetEnsResolution: (0, _lodash.debounce)(() => dispatch((0, _ens.resetEnsResolution)()), 300)
  };
}

var _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(_ensInput.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\ens-input.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\add-recipient.container.js", {"../../../../ducks/ens":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\ens.js","../../../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","../../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","./add-recipient.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\add-recipient.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\send\send-content\add-recipient\add-recipient.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _selectors = require("../../../../selectors");

var _send = require("../../../../ducks/send");

var _ens = require("../../../../ducks/ens");

var _addRecipient = _interopRequireDefault(require("./add-recipient.component"));

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_addRecipient.default);

exports.default = _default;

function mapStateToProps(state) {
  const ensResolution = (0, _ens.getEnsResolution)(state);
  let addressBookEntryName = '';

  if (ensResolution) {
    const addressBookEntry = (0, _selectors.getAddressBookEntry)(state, ensResolution) || {};
    addressBookEntryName = addressBookEntry.name;
  }

  const addressBook = (0, _selectors.getAddressBook)(state);
  const ownedAccounts = (0, _selectors.getMetaMaskAccountsOrdered)(state);
  return {
    addressBook,
    addressBookEntryName,
    contacts: addressBook.filter(({
      name
    }) => Boolean(name)),
    ensResolution,
    ensError: (0, _ens.getEnsError)(state),
    ensWarning: (0, _ens.getEnsWarning)(state),
    nonContacts: addressBook.filter(({
      name
    }) => !name),
    ownedAccounts,
    isUsingMyAccountsForRecipientSearch: (0, _send.getIsUsingMyAccountForRecipientSearch)(state),
    userInput: (0, _send.getRecipientUserInput)(state),
    recipient: (0, _send.getRecipient)(state)
  };
}

function mapDispatchToProps(dispatch) {
  return {
    updateRecipient: ({
      address,
      nickname
    }) => dispatch((0, _send.updateRecipient)({
      address,
      nickname
    })),
    updateRecipientUserInput: newInput => dispatch((0, _send.updateRecipientUserInput)(newInput)),
    useMyAccountsForRecipientSearch: () => dispatch((0, _send.useMyAccountsForRecipientSearch)()),
    useContactListForRecipientSearch: () => dispatch((0, _send.useContactListForRecipientSearch)())
  };
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\add-recipient.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\send-content.container.js", {"../../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","./send-content.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\send-content.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\send\send-content\send-content.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _selectors = require("../../../selectors");

var _send = require("../../../ducks/send");

var _sendContent = _interopRequireDefault(require("./send-content.component"));

function mapStateToProps(state) {
  const ownedAccounts = (0, _selectors.accountsWithSendEtherInfoSelector)(state);
  const to = (0, _send.getSendTo)(state);
  return {
    isOwnedAccount: Boolean(ownedAccounts.find(({
      address
    }) => address.toLowerCase() === to.toLowerCase())),
    contact: (0, _selectors.getAddressBookEntry)(state, to),
    isEthGasPrice: (0, _selectors.getIsEthGasPriceFetched)(state),
    noGasPrice: (0, _selectors.getNoGasPriceFetched)(state),
    to,
    networkOrAccountNotSupports1559: (0, _selectors.checkNetworkOrAccountNotSupports1559)(state),
    getIsBalanceInsufficient: (0, _send.getIsBalanceInsufficient)(state),
    asset: (0, _send.getSendAsset)(state),
    assetError: (0, _send.getAssetError)(state)
  };
}

var _default = (0, _reactRedux.connect)(mapStateToProps)(_sendContent.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\send-content.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\multiple-notifications\\index.js", {"./multiple-notifications.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\multiple-notifications\\multiple-notifications.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\multiple-notifications\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _multipleNotifications.default;
  }
});

var _multipleNotifications = _interopRequireDefault(require("./multiple-notifications.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\multiple-notifications\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\home-notification\\index.js", {"./home-notification.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\home-notification\\home-notification.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\home-notification\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _homeNotification.default;
  }
});

var _homeNotification = _interopRequireDefault(require("./home-notification.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\home-notification\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\recovery-phrase-reminder\\index.js", {"./recovery-phrase-reminder":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\recovery-phrase-reminder\\recovery-phrase-reminder.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\recovery-phrase-reminder\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _recoveryPhraseReminder.default;
  }
});

var _recoveryPhraseReminder = _interopRequireDefault(require("./recovery-phrase-reminder"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\recovery-phrase-reminder\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\whats-new-popup\\index.js", {"./whats-new-popup":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\whats-new-popup\\whats-new-popup.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\whats-new-popup\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _whatsNewPopup.default;
  }
});

var _whatsNewPopup = _interopRequireDefault(require("./whats-new-popup"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\whats-new-popup\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\collectibles-tab\\index.js", {"./collectibles-tab":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\collectibles-tab\\collectibles-tab.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\collectibles-tab\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _collectiblesTab.default;
  }
});

var _collectiblesTab = _interopRequireDefault(require("./collectibles-tab"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\collectibles-tab\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-sites\\index.js", {"./connected-sites.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-sites\\connected-sites.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\connected-sites\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connectedSites.default;
  }
});

var _connectedSites = _interopRequireDefault(require("./connected-sites.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-sites\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-accounts\\index.js", {"./connected-accounts.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-accounts\\connected-accounts.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\connected-accounts\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connectedAccounts.default;
  }
});

var _connectedAccounts = _interopRequireDefault(require("./connected-accounts.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-accounts\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\menu-bar\\index.js", {"./menu-bar":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\menu-bar\\menu-bar.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\menu-bar\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _menuBar.default;
  }
});

var _menuBar = _interopRequireDefault(require("./menu-bar"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\menu-bar\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\asset-list\\index.js", {"./asset-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\asset-list\\asset-list.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\asset-list\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _assetList.default;
  }
});

var _assetList = _interopRequireDefault(require("./asset-list"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\asset-list\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-token-transaction-base\\index.js", {"./confirm-token-transaction-base.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-token-transaction-base\\confirm-token-transaction-base.component.js","./confirm-token-transaction-base.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-token-transaction-base\\confirm-token-transaction-base.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-token-transaction-base\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ConfirmTokenTransactionBase", {
  enumerable: true,
  get: function () {
    return _confirmTokenTransactionBase2.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _confirmTokenTransactionBase.default;
  }
});

var _confirmTokenTransactionBase = _interopRequireDefault(require("./confirm-token-transaction-base.container"));

var _confirmTokenTransactionBase2 = _interopRequireDefault(require("./confirm-token-transaction-base.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-token-transaction-base\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-deploy-contract\\index.js", {"./confirm-deploy-contract.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-deploy-contract\\confirm-deploy-contract.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-deploy-contract\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _confirmDeployContract.default;
  }
});

var _confirmDeployContract = _interopRequireDefault(require("./confirm-deploy-contract.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-deploy-contract\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-ether\\index.js", {"./confirm-send-ether.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-ether\\confirm-send-ether.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-send-ether\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _confirmSendEther.default;
  }
});

var _confirmSendEther = _interopRequireDefault(require("./confirm-send-ether.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-ether\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-token\\index.js", {"./confirm-send-token.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-token\\confirm-send-token.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-send-token\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _confirmSendToken.default;
  }
});

var _confirmSendToken = _interopRequireDefault(require("./confirm-send-token.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-token\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-decrypt-message\\index.js", {"./confirm-decrypt-message.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-decrypt-message\\confirm-decrypt-message.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-decrypt-message\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _confirmDecryptMessage.default;
  }
});

var _confirmDecryptMessage = _interopRequireDefault(require("./confirm-decrypt-message.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-decrypt-message\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-switch\\index.js", {"./confirm-transaction-switch.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-switch\\confirm-transaction-switch.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-transaction-switch\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _confirmTransactionSwitch = _interopRequireDefault(require("./confirm-transaction-switch.container"));

var _default = _confirmTransactionSwitch.default;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-switch\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-approve\\index.js", {"./confirm-approve":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-approve\\confirm-approve.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-approve\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _confirmApprove.default;
  }
});

var _confirmApprove = _interopRequireDefault(require("./confirm-approve"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-approve\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-encryption-public-key\\index.js", {"./confirm-encryption-public-key.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-encryption-public-key\\confirm-encryption-public-key.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-encryption-public-key\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _confirmEncryptionPublicKey.default;
  }
});

var _confirmEncryptionPublicKey = _interopRequireDefault(require("./confirm-encryption-public-key.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-encryption-public-key\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction\\conf-tx.js", {"../../../shared/constants/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\app.js","../../../shared/constants/transaction":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\transaction.js","../../components/app/signature-request":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\signature-request\\index.js","../../components/app/signature-request-original":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\signature-request-original\\index.js","../../components/ui/loading-screen":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\loading-screen\\index.js","../../ducks/history/history":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\history\\history.js","../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","../../helpers/utils/tx-helper":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\tx-helper.js","../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","loglevel":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\loglevel\\lib\\loglevel.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-transaction\conf-tx.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _redux = require("redux");

var _loglevel = _interopRequireDefault(require("loglevel"));

var actions = _interopRequireWildcard(require("../../store/actions"));

var _txHelper = _interopRequireDefault(require("../../helpers/utils/tx-helper"));

var _signatureRequest = _interopRequireDefault(require("../../components/app/signature-request"));

var _signatureRequestOriginal = _interopRequireDefault(require("../../components/app/signature-request-original"));

var _loadingScreen = _interopRequireDefault(require("../../components/ui/loading-screen"));

var _history = require("../../ducks/history/history");

var _app = require("../../../shared/constants/app");

var _transaction = require("../../../shared/constants/transaction");

var _send = require("../../ducks/send");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function mapStateToProps(state) {
  const {
    metamask,
    appState
  } = state;
  const {
    unapprovedMsgCount,
    unapprovedPersonalMsgCount,
    unapprovedTypedMessagesCount
  } = metamask;
  const {
    txId
  } = appState;
  return {
    identities: state.metamask.identities,
    mostRecentOverviewPage: (0, _history.getMostRecentOverviewPage)(state),
    unapprovedTxs: state.metamask.unapprovedTxs,
    unapprovedMsgs: state.metamask.unapprovedMsgs,
    unapprovedPersonalMsgs: state.metamask.unapprovedPersonalMsgs,
    unapprovedTypedMessages: state.metamask.unapprovedTypedMessages,
    index: txId,
    warning: state.appState.warning,
    network: state.metamask.network,
    chainId: state.metamask.provider.chainId,
    currentCurrency: state.metamask.currentCurrency,
    blockGasLimit: state.metamask.currentBlockGasLimit,
    unapprovedMsgCount,
    unapprovedPersonalMsgCount,
    unapprovedTypedMessagesCount,
    sendTo: (0, _send.getSendTo)(state),
    currentNetworkTxList: state.metamask.currentNetworkTxList
  };
}

class ConfirmTxScreen extends _react.Component {
  getUnapprovedMessagesTotal() {
    const {
      unapprovedMsgCount = 0,
      unapprovedPersonalMsgCount = 0,
      unapprovedTypedMessagesCount = 0
    } = this.props;
    return unapprovedTypedMessagesCount + unapprovedMsgCount + unapprovedPersonalMsgCount;
  }

  getTxData() {
    const {
      network,
      index,
      unapprovedTxs,
      unapprovedMsgs,
      unapprovedPersonalMsgs,
      unapprovedTypedMessages,
      match: {
        params: {
          id: transactionId
        } = {}
      },
      chainId
    } = this.props;
    const unconfTxList = (0, _txHelper.default)(unapprovedTxs, unapprovedMsgs, unapprovedPersonalMsgs, unapprovedTypedMessages, network, chainId);

    _loglevel.default.info(`rendering a combined ${unconfTxList.length} unconf msgs & txs`);

    return transactionId ? unconfTxList.find(({
      id
    }) => `${id}` === transactionId) : unconfTxList[index];
  }

  signatureSelect(type, version) {
    // Temporarily direct only v3 and v4 requests to new code.
    if (type === _app.MESSAGE_TYPE.ETH_SIGN_TYPED_DATA && (version === 'V3' || version === 'V4')) {
      return _signatureRequest.default;
    }

    return _signatureRequestOriginal.default;
  }

  signMessage(msgData, event) {
    _loglevel.default.info('conf-tx.js: signing message');

    const params = msgData.msgParams;
    params.metamaskId = msgData.id;
    this.stopPropagation(event);
    return this.props.dispatch(actions.signMsg(params));
  }

  stopPropagation(event) {
    if (event !== null && event !== void 0 && event.stopPropagation) {
      event.stopPropagation();
    }
  }

  signPersonalMessage(msgData, event) {
    _loglevel.default.info('conf-tx.js: signing personal message');

    const params = msgData.msgParams;
    params.metamaskId = msgData.id;
    this.stopPropagation(event);
    return this.props.dispatch(actions.signPersonalMsg(params));
  }

  signTypedMessage(msgData, event) {
    _loglevel.default.info('conf-tx.js: signing typed message');

    const params = msgData.msgParams;
    params.metamaskId = msgData.id;
    this.stopPropagation(event);
    return this.props.dispatch(actions.signTypedMsg(params));
  }

  cancelMessage(msgData, event) {
    _loglevel.default.info('canceling message');

    this.stopPropagation(event);
    return this.props.dispatch(actions.cancelMsg(msgData));
  }

  cancelPersonalMessage(msgData, event) {
    _loglevel.default.info('canceling personal message');

    this.stopPropagation(event);
    return this.props.dispatch(actions.cancelPersonalMsg(msgData));
  }

  cancelTypedMessage(msgData, event) {
    _loglevel.default.info('canceling typed message');

    this.stopPropagation(event);
    return this.props.dispatch(actions.cancelTypedMsg(msgData));
  }

  componentDidMount() {
    const {
      unapprovedTxs = {},
      history,
      mostRecentOverviewPage,
      network,
      chainId,
      sendTo
    } = this.props;
    const unconfTxList = (0, _txHelper.default)(unapprovedTxs, {}, {}, {}, network, chainId);

    if (unconfTxList.length === 0 && !sendTo && this.getUnapprovedMessagesTotal() === 0) {
      history.push(mostRecentOverviewPage);
    }
  }

  componentDidUpdate(prevProps) {
    const {
      unapprovedTxs = {},
      network,
      chainId,
      currentNetworkTxList,
      sendTo,
      history,
      match: {
        params: {
          id: transactionId
        } = {}
      },
      mostRecentOverviewPage
    } = this.props;
    let prevTx;

    if (transactionId) {
      prevTx = currentNetworkTxList.find(({
        id
      }) => `${id}` === transactionId);
    } else {
      const {
        index: prevIndex,
        unapprovedTxs: prevUnapprovedTxs
      } = prevProps;
      const prevUnconfTxList = (0, _txHelper.default)(prevUnapprovedTxs, {}, {}, {}, network, chainId);
      const prevTxData = prevUnconfTxList[prevIndex] || {};
      prevTx = currentNetworkTxList.find(({
        id
      }) => id === prevTxData.id) || {};
    }

    const unconfTxList = (0, _txHelper.default)(unapprovedTxs, {}, {}, {}, network, chainId);

    if (prevTx && prevTx.status === _transaction.TRANSACTION_STATUSES.DROPPED) {
      this.props.dispatch(actions.showModal({
        name: 'TRANSACTION_CONFIRMED',
        onSubmit: () => history.push(mostRecentOverviewPage)
      }));
      return;
    }

    if (unconfTxList.length === 0 && !sendTo && this.getUnapprovedMessagesTotal() === 0) {
      this.props.history.push(mostRecentOverviewPage);
    }
  }

  render() {
    const {
      currentCurrency,
      blockGasLimit
    } = this.props;
    const txData = this.getTxData() || {};
    const {
      msgParams,
      type,
      msgParams: {
        version
      }
    } = txData;

    _loglevel.default.debug('msgParams detected, rendering pending msg');

    if (!msgParams) {
      return /*#__PURE__*/_react.default.createElement(_loadingScreen.default, null);
    }

    const SigComponent = this.signatureSelect(type, version);
    return /*#__PURE__*/_react.default.createElement(SigComponent, {
      txData: txData,
      key: txData.id,
      identities: this.props.identities,
      currentCurrency: currentCurrency,
      blockGasLimit: blockGasLimit,
      signMessage: this.signMessage.bind(this, txData),
      signPersonalMessage: this.signPersonalMessage.bind(this, txData),
      signTypedMessage: this.signTypedMessage.bind(this, txData),
      cancelMessage: this.cancelMessage.bind(this, txData),
      cancelPersonalMessage: this.cancelPersonalMessage.bind(this, txData),
      cancelTypedMessage: this.cancelTypedMessage.bind(this, txData)
    });
  }

}

(0, _defineProperty2.default)(ConfirmTxScreen, "propTypes", {
  mostRecentOverviewPage: _propTypes.default.string.isRequired,
  unapprovedMsgCount: _propTypes.default.number,
  unapprovedPersonalMsgCount: _propTypes.default.number,
  unapprovedTypedMessagesCount: _propTypes.default.number,
  network: _propTypes.default.string,
  chainId: _propTypes.default.string,
  index: _propTypes.default.number,
  unapprovedTxs: _propTypes.default.object,
  unapprovedMsgs: _propTypes.default.object,
  unapprovedPersonalMsgs: _propTypes.default.object,
  unapprovedTypedMessages: _propTypes.default.object,
  match: _propTypes.default.shape({
    params: _propTypes.default.shape({
      id: _propTypes.default.string
    })
  }),
  currentNetworkTxList: _propTypes.default.array,
  currentCurrency: _propTypes.default.string,
  blockGasLimit: _propTypes.default.string,
  history: _propTypes.default.object,
  identities: _propTypes.default.object,
  dispatch: _propTypes.default.func.isRequired,
  sendTo: _propTypes.default.string
});

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps))(ConfirmTxScreen);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction\\conf-tx.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-base\\index.js", {"./confirm-transaction-base.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-base\\confirm-transaction-base.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-transaction-base\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _confirmTransactionBase.default;
  }
});

var _confirmTransactionBase = _interopRequireDefault(require("./confirm-transaction-base.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-base\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\_apply.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\lodash\_apply.js
      return function (require, module, exports) {
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;

      };
    };
  }
}, {package:"lodash",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\_apply.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\_shortOut.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\lodash\_shortOut.js
      return function (require, module, exports) {
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;

      };
    };
  }
}, {package:"lodash",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\_shortOut.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\_baseSetToString.js", {"./_defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\_defineProperty.js","./constant":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\constant.js","./identity":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\identity.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\lodash\_baseSetToString.js
      return function (require, module, exports) {
var constant = require('./constant'),
    defineProperty = require('./_defineProperty'),
    identity = require('./identity');

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;

      };
    };
  }
}, {package:"lodash",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\_baseSetToString.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\text-field\\text-field.component.js", {"@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/extends":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\extends.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@babel/runtime/helpers/objectWithoutProperties":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\objectWithoutProperties.js","@material-ui/core/TextField":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\TextField\\index.js","@material-ui/core/styles":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\text-field\text-field.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _TextField = _interopRequireDefault(require("@material-ui/core/TextField"));

const _excluded = ["error", "classes", "theme", "startAdornment", "largeLabel", "dir", "min", "max", "autoComplete", "onPaste"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const inputLabelBase = {
  transform: 'none',
  transition: 'none',
  position: 'initial',
  color: '#5b5b5b'
};
const styles = {
  materialLabel: {
    '&$materialFocused': {
      color: '#aeaeae'
    },
    '&$materialError': {
      color: '#aeaeae'
    },
    fontWeight: '400',
    color: '#aeaeae'
  },
  materialFocused: {},
  materialUnderline: {
    '&:after': {
      borderBottom: `2px solid rgb(3, 125, 214)`
    }
  },
  materialError: {},
  materialWhitePaddedRoot: {
    color: '#aeaeae'
  },
  materialWhitePaddedInput: {
    padding: '8px',
    '&::placeholder': {
      color: '#aeaeae'
    }
  },
  materialWhitePaddedFocused: {
    color: '#fff'
  },
  materialWhitePaddedUnderline: {
    '&:after': {
      borderBottom: '2px solid #fff'
    }
  },
  // Non-material styles
  formLabel: {
    '&$formLabelFocused': {
      color: '#5b5b5b'
    },
    '&$materialError': {
      color: '#5b5b5b'
    }
  },
  formLabelFocused: {},
  inputFocused: {},
  inputRoot: {
    'label + &': {
      marginTop: '9px'
    },
    border: '1px solid #BBC0C5',
    height: '48px',
    borderRadius: '6px',
    padding: '0 16px',
    display: 'flex',
    alignItems: 'center',
    '&$inputFocused': {
      border: '1px solid #2f9ae0'
    }
  },
  largeInputLabel: _objectSpread(_objectSpread({}, inputLabelBase), {}, {
    fontSize: '1rem'
  }),
  inputLabel: _objectSpread(_objectSpread({}, inputLabelBase), {}, {
    fontSize: '.75rem'
  }),
  inputMultiline: {
    lineHeight: 'initial !important'
  }
};

const getMaterialThemeInputProps = ({
  dir,
  classes: {
    materialLabel,
    materialFocused,
    materialError,
    materialUnderline
  },
  startAdornment,
  min,
  max,
  autoComplete
}) => ({
  InputLabelProps: {
    classes: {
      root: materialLabel,
      focused: materialFocused,
      error: materialError
    }
  },
  InputProps: {
    startAdornment,
    classes: {
      underline: materialUnderline
    },
    inputProps: {
      dir,
      min,
      max,
      autoComplete
    }
  }
});

const getMaterialWhitePaddedThemeInputProps = ({
  dir,
  classes: {
    materialWhitePaddedRoot,
    materialWhitePaddedFocused,
    materialWhitePaddedInput,
    materialWhitePaddedUnderline
  },
  startAdornment,
  min,
  max,
  autoComplete
}) => ({
  InputProps: {
    startAdornment,
    classes: {
      root: materialWhitePaddedRoot,
      focused: materialWhitePaddedFocused,
      input: materialWhitePaddedInput,
      underline: materialWhitePaddedUnderline
    },
    inputProps: {
      dir,
      min,
      max,
      autoComplete
    }
  }
});

const getBorderedThemeInputProps = ({
  dir,
  classes: {
    formLabel,
    formLabelFocused,
    materialError,
    largeInputLabel,
    inputLabel,
    inputRoot,
    input,
    inputFocused
  },
  largeLabel,
  startAdornment,
  min,
  max,
  autoComplete
}) => ({
  InputLabelProps: {
    shrink: true,
    className: largeLabel ? largeInputLabel : inputLabel,
    classes: {
      root: formLabel,
      focused: formLabelFocused,
      error: materialError
    }
  },
  InputProps: {
    startAdornment,
    disableUnderline: true,
    classes: {
      root: inputRoot,
      input,
      focused: inputFocused
    },
    inputProps: {
      dir,
      min,
      max,
      autoComplete
    }
  }
});

const themeToInputProps = {
  material: getMaterialThemeInputProps,
  bordered: getBorderedThemeInputProps,
  'material-white-padded': getMaterialWhitePaddedThemeInputProps
};

const TextField = _ref => {
  let {
    error,
    classes,
    theme,
    startAdornment,
    largeLabel,
    dir,
    min,
    max,
    autoComplete,
    onPaste
  } = _ref,
      textFieldProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const inputProps = themeToInputProps[theme]({
    classes,
    startAdornment,
    largeLabel,
    dir,
    min,
    max,
    autoComplete
  });

  if (onPaste) {
    if (!inputProps.InputProps) {
      inputProps.InputProps = {};
    }

    if (!inputProps.InputProps.inputProps) {
      inputProps.InputProps.inputProps = {};
    }

    inputProps.InputProps.inputProps.onPaste = onPaste;
  }

  return /*#__PURE__*/_react.default.createElement(_TextField.default, (0, _extends2.default)({
    error: Boolean(error),
    helperText: error
  }, inputProps, textFieldProps));
};

TextField.defaultProps = {
  error: null,
  dir: 'auto',
  theme: 'bordered'
};
TextField.propTypes = {
  /**
   * Show error message
   */
  error: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),

  /**
   * Add custom CSS class
   */
  classes: _propTypes.default.object,
  dir: _propTypes.default.string,

  /**
   * Give theme to the text field
   */
  theme: _propTypes.default.oneOf(['bordered', 'material', 'material-white-padded']),
  startAdornment: _propTypes.default.element,

  /**
   * Show large label
   */
  largeLabel: _propTypes.default.bool,

  /**
   * Define min number input
   */
  min: _propTypes.default.number,

  /**
   * Define max number input
   */
  max: _propTypes.default.number,

  /**
   * Show auto complete text
   */
  autoComplete: _propTypes.default.string,
  onPaste: _propTypes.default.func
};

var _default = (0, _styles.withStyles)(styles)(TextField);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\text-field\\text-field.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-simple-file-input\\lib\\index.js", {"prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-simple-file-input\lib\index.js
      return function (require, module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var INPUT_FIELD_REF = 'inputField';

var READ_METHOD_ALIASES = {
  buffer: 'readAsArrayBuffer',
  binary: 'readAsBinaryString',
  dataUrl: 'readAsDataURL',
  text: 'readAsText'
};

var SUPPORTED_EVENTS = ['onLoadStart', 'onLoadEnd', 'onLoad', 'onAbort', 'onError'];

var UNSUPPORTED_BY_INPUT = {
  readAs: true,
  abortIf: true,
  cancelIf: true,
  onCancel: true
};

var FileInput = function (_Component) {
  _inherits(FileInput, _Component);

  function FileInput(props, context) {
    _classCallCheck(this, FileInput);

    var _this = _possibleConstructorReturn(this, (FileInput.__proto__ || Object.getPrototypeOf(FileInput)).call(this, props, context));

    _this.handleChange = _this.handleChange.bind(_this);
    return _this;
  }

  _createClass(FileInput, [{
    key: 'componentDidMount',
    value: function componentDidMount() {

      if (window && !window.File || !window.FileReader) {
        console.warn('Browser does not appear to support API react-simple-file-input relies upon');
      }
    }
  }, {
    key: 'handleChange',
    value: function handleChange(event) {
      var _this2 = this;

      var _props = this.props,
          readAs = _props.readAs,
          cancelIf = _props.cancelIf,
          onCancel = _props.onCancel,
          onProgress = _props.onProgress,
          abortIf = _props.abortIf,
          onChange = _props.onChange,
          multiple = _props.multiple;
      var files = event.target.files;


      if (onChange) {
        if (multiple) {
          onChange(files);
        } else {
          onChange(files[0]);
        }
      }

      if (readAs) {
        var _loop = function _loop(i) {
          var file = files[i];

          if (cancelIf && cancelIf(file)) {
            if (onCancel) {
              onCancel(file);
            }

            return {
              v: void 0
            };
          }

          var fileReader = new window.FileReader();

          var _loop2 = function _loop2(_i) {
            var handlerName = SUPPORTED_EVENTS[_i];

            if (_this2.props[handlerName]) {
              fileReader[handlerName.toLowerCase()] = function (fileReadEvent) {
                _this2.props[handlerName](fileReadEvent, file);
              };
            }
          };

          for (var _i = 0; _i < SUPPORTED_EVENTS.length; _i++) {
            _loop2(_i);
          }

          if (typeof abortIf !== 'undefined') {
            fileReader.onprogress = function (event) {

              if (abortIf(event, file)) {
                fileReader.abort();
              } else if (onProgress) {
                onProgress(event, file);
              }
            };
          } else if (onProgress) {
            fileReader.onprogress = onProgress;
          }

          fileReader[READ_METHOD_ALIASES[readAs]](file);
        };

        for (var i = 0; i < files.length; i++) {
          var _ret = _loop(i);

          if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var inputProps = {};

      for (var property in this.props) {
        if (this.props.hasOwnProperty(property) && !UNSUPPORTED_BY_INPUT[property]) {
          inputProps[property] = this.props[property];
        }
      }

      return _react2.default.createElement('input', _extends({}, inputProps, {
        type: 'file',
        ref: INPUT_FIELD_REF,
        onChange: this.handleChange
      }));
    }
  }]);

  return FileInput;
}(_react.Component);

FileInput.propTypes = {
  id: _propTypes2.default.string,
  className: _propTypes2.default.string,

  multiple: _propTypes2.default.bool,

  readAs: _propTypes2.default.oneOf(Object.keys(READ_METHOD_ALIASES)),

  onLoadStart: _propTypes2.default.func,
  onLoadEnd: _propTypes2.default.func,
  onLoad: _propTypes2.default.func,
  onAbort: _propTypes2.default.func,
  onCancel: _propTypes2.default.func,
  onChange: _propTypes2.default.func,
  onError: _propTypes2.default.func,
  onProgress: _propTypes2.default.func,

  cancelIf: _propTypes2.default.func,
  abortIf: _propTypes2.default.func
};

exports.default = FileInput;
      };
    };
  }
}, {package:"react-simple-file-input",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-simple-file-input\\lib\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\cssClasses.js", {"classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-responsive-carousel\lib\js\cssClasses.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = {
  ROOT: function ROOT(customClassName) {
    return (0, _classnames.default)(_defineProperty({
      'carousel-root': true
    }, customClassName || '', !!customClassName));
  },
  CAROUSEL: function CAROUSEL(isSlider) {
    return (0, _classnames.default)({
      carousel: true,
      'carousel-slider': isSlider
    });
  },
  WRAPPER: function WRAPPER(isSlider, axis) {
    return (0, _classnames.default)({
      'thumbs-wrapper': !isSlider,
      'slider-wrapper': isSlider,
      'axis-horizontal': axis === 'horizontal',
      'axis-vertical': axis !== 'horizontal'
    });
  },
  SLIDER: function SLIDER(isSlider, isSwiping) {
    return (0, _classnames.default)({
      thumbs: !isSlider,
      slider: isSlider,
      animated: !isSwiping
    });
  },
  ITEM: function ITEM(isSlider, selected, previous) {
    return (0, _classnames.default)({
      thumb: !isSlider,
      slide: isSlider,
      selected: selected,
      previous: previous
    });
  },
  ARROW_PREV: function ARROW_PREV(disabled) {
    return (0, _classnames.default)({
      'control-arrow control-prev': true,
      'control-disabled': disabled
    });
  },
  ARROW_NEXT: function ARROW_NEXT(disabled) {
    return (0, _classnames.default)({
      'control-arrow control-next': true,
      'control-disabled': disabled
    });
  },
  DOT: function DOT(selected) {
    return (0, _classnames.default)({
      dot: true,
      selected: selected
    });
  }
};
exports.default = _default;
      };
    };
  }
}, {package:"react-responsive-carousel",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\cssClasses.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\CSSTranslate.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-responsive-carousel\lib\js\CSSTranslate.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _default = function _default(position, metric, axis) {
  var positionPercent = position === 0 ? position : position + metric;
  var positionCss = axis === 'horizontal' ? [positionPercent, 0, 0] : [0, positionPercent, 0];
  var transitionProp = 'translate3d';
  var translatedPosition = '(' + positionCss.join(',') + ')';
  return transitionProp + translatedPosition;
};

exports.default = _default;
      };
    };
  }
}, {package:"react-responsive-carousel",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\CSSTranslate.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\dimensions.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-responsive-carousel\lib\js\dimensions.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.outerWidth = void 0;

var outerWidth = function outerWidth(el) {
  var width = el.offsetWidth;
  var style = getComputedStyle(el);
  width += parseInt(style.marginLeft) + parseInt(style.marginRight);
  return width;
};

exports.outerWidth = outerWidth;
      };
    };
  }
}, {package:"react-responsive-carousel",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\dimensions.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\shims\\window.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-responsive-carousel\lib\js\shims\window.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _default = function _default() {
  return window;
};

exports.default = _default;
      };
    };
  }
}, {package:"react-responsive-carousel",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\shims\\window.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-easy-swipe\\lib\\index.js", {"./react-swipe":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-easy-swipe\\lib\\react-swipe.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-easy-swipe\lib\index.js
      return function (require, module, exports) {
(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', './react-swipe'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('./react-swipe'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.reactSwipe);
    global.index = mod.exports;
  }
})(this, function (exports, _reactSwipe) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactSwipe2 = _interopRequireDefault(_reactSwipe);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  exports.default = _reactSwipe2.default;
});
      };
    };
  }
}, {package:"react-easy-swipe",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-easy-swipe\\lib\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\shims\\document.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-responsive-carousel\lib\js\shims\document.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _default = function _default() {
  return document;
};

exports.default = _default;
      };
    };
  }
}, {package:"react-responsive-carousel",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-responsive-carousel\\lib\\js\\shims\\document.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\numeric-input\\numeric-input.component.js", {"../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../typography/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\typography.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\numeric-input\numeric-input.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = NumericInput;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _typography = _interopRequireDefault(require("../typography/typography"));

var _designSystem = require("../../../helpers/constants/design-system");

const DECIMAL_REGEX = /\.(\d*)/u;

function NumericInput({
  detailText = '',
  value = 0,
  onChange,
  error = '',
  autoFocus = false,
  allowDecimals = true,
  disabled = false,
  dataTestId,
  placeholder
}) {
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('numeric-input', {
      'numeric-input--error': error
    })
  }, /*#__PURE__*/_react.default.createElement("input", {
    type: "number",
    value: value,
    onKeyDown: e => {
      if (!allowDecimals && e.key === '.') {
        e.preventDefault();
      }
    },
    onChange: e => {
      var _match$;

      const newValue = e.target.value;
      const match = DECIMAL_REGEX.exec(newValue);

      if ((match === null || match === void 0 ? void 0 : (_match$ = match[1]) === null || _match$ === void 0 ? void 0 : _match$.length) >= 15) {
        return;
      }

      onChange === null || onChange === void 0 ? void 0 : onChange(parseFloat(newValue || 0, 10));
    },
    min: "0",
    autoFocus: autoFocus,
    disabled: disabled,
    "data-testid": dataTestId,
    placeholder: placeholder
  }), detailText && /*#__PURE__*/_react.default.createElement(_typography.default, {
    color: _designSystem.COLORS.UI4,
    variant: _designSystem.TYPOGRAPHY.H7,
    tag: "span"
  }, detailText));
}

NumericInput.propTypes = {
  value: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  detailText: _propTypes.default.string,
  onChange: _propTypes.default.func,
  error: _propTypes.default.string,
  autoFocus: _propTypes.default.bool,
  allowDecimals: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  dataTestId: _propTypes.default.string,
  placeholder: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\numeric-input\\numeric-input.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\info-tooltip\\info-tooltip.js", {"../tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tooltip\\index.js","./info-tooltip-icon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\info-tooltip\\info-tooltip-icon.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\info-tooltip\info-tooltip.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InfoTooltip;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _tooltip = _interopRequireDefault(require("../tooltip"));

var _infoTooltipIcon = _interopRequireDefault(require("./info-tooltip-icon"));

const positionArrowClassMap = {
  top: 'info-tooltip__top-tooltip-arrow',
  bottom: 'info-tooltip__bottom-tooltip-arrow',
  left: 'info-tooltip__left-tooltip-arrow',
  right: 'info-tooltip__right-tooltip-arrow'
};

function InfoTooltip({
  contentText = '',
  position = '',
  containerClassName,
  wrapperClassName,
  wide,
  iconFillColor = '#b8b8b8'
}) {
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "info-tooltip"
  }, /*#__PURE__*/_react.default.createElement(_tooltip.default, {
    interactive: true,
    position: position,
    containerClassName: (0, _classnames.default)('info-tooltip__tooltip-container', containerClassName),
    wrapperClassName: wrapperClassName,
    tooltipInnerClassName: "info-tooltip__tooltip-content",
    tooltipArrowClassName: positionArrowClassMap[position],
    html: contentText,
    theme: wide ? 'tippy-tooltip-wideInfo' : 'tippy-tooltip-info'
  }, /*#__PURE__*/_react.default.createElement(_infoTooltipIcon.default, {
    fillColor: iconFillColor
  })));
}

InfoTooltip.propTypes = {
  /**
   * Text label that shows up after hover
   */
  contentText: _propTypes.default.node,

  /**
   * Shows position of the tooltip
   */
  position: _propTypes.default.oneOf(['top', 'left', 'bottom', 'right']),

  /**
   * Set if the tooltip wide
   */
  wide: _propTypes.default.bool,

  /**
   * Add custom CSS class for container
   */
  containerClassName: _propTypes.default.string,

  /**
   * Add custom CSS class for the wrapper
   */
  wrapperClassName: _propTypes.default.string,

  /**
   * Add color for the icon
   */
  iconFillColor: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\info-tooltip\\info-tooltip.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\toggle-button\\toggle-button.component.js", {"@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-toggle-button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-toggle-button\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\toggle-button\toggle-button.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactToggleButton = _interopRequireDefault(require("react-toggle-button"));

var _classnames = _interopRequireDefault(require("classnames"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const trackStyle = {
  width: '40px',
  height: '24px',
  padding: '0px',
  borderRadius: '26px',
  border: '2px solid rgb(3, 125, 214)',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center'
};

const offTrackStyle = _objectSpread(_objectSpread({}, trackStyle), {}, {
  border: '2px solid #8E8E8E'
});

const thumbStyle = {
  width: '18px',
  height: '18px',
  display: 'flex',
  boxShadow: 'none',
  alignSelf: 'center',
  borderRadius: '50%',
  position: 'relative'
};
const colors = {
  activeThumb: {
    base: '#037DD6'
  },
  inactiveThumb: {
    base: '#6A737D'
  },
  active: {
    base: '#ffffff',
    hover: '#ffffff'
  },
  inactive: {
    base: '#DADADA',
    hover: '#DADADA'
  }
};

const ToggleButton = props => {
  const {
    value,
    onToggle,
    offLabel,
    onLabel,
    disabled,
    className
  } = props;
  const modifier = value ? 'on' : 'off';
  return /*#__PURE__*/_react.default.createElement("div", {
    tabIndex: "0",
    onKeyDown: e => {
      if (e.key === 'Enter') {
        onToggle(value);
      }
    },
    className: (0, _classnames.default)('toggle-button', `toggle-button--${modifier}`, {
      'toggle-button--disabled': disabled
    }, className)
  }, /*#__PURE__*/_react.default.createElement(_reactToggleButton.default, {
    value: value,
    onToggle: disabled ? undefined : onToggle,
    activeLabel: "",
    inactiveLabel: "",
    trackStyle: value ? trackStyle : offTrackStyle,
    thumbStyle: thumbStyle,
    thumbAnimateRange: [3, 18],
    colors: colors
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "toggle-button__status"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "toggle-button__label-off"
  }, offLabel), /*#__PURE__*/_react.default.createElement("span", {
    className: "toggle-button__label-on"
  }, onLabel)));
};

ToggleButton.propTypes = {
  /**
   * ToggleButton value
   */
  value: _propTypes.default.bool,

  /**
   * The onChange handler of the ToggleButton
   */
  onToggle: _propTypes.default.func,

  /**
   * Label text when toggle is off
   */
  offLabel: _propTypes.default.string,

  /**
   * Label text when toggle is on
   */
  onLabel: _propTypes.default.string,

  /**
   * Disables ToggleButton if true. Set to false as default
   */
  disabled: _propTypes.default.bool,

  /**
   * Additional className to add to the ToggleButton
   */
  className: _propTypes.default.string
};
var _default = ToggleButton;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\toggle-button\\toggle-button.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\build-types.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\helpers\utils\build-types.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBuildSpecificAsset = getBuildSpecificAsset;
exports.isBeta = isBeta;
const assetList = {
  main: {
    // Will use default provided by the @metamask/logo library
    foxMeshJson: undefined
  }
};

function isBeta() {
  return "main" === 'beta';
} // Returns a specific version of an asset based on
// the current metamask version (i.e. main, beta, etc.)


function getBuildSpecificAsset(assetName) {
  const buildType = "main";

  if (!assetList[buildType] || !Object.keys(assetList[buildType]).includes(assetName)) {
    console.error(`Cannot find asset "${assetName}" for build "${buildType}", returning main build asset.`);
    return assetList.main[assetName];
  }

  return assetList[buildType][assetName];
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\build-types.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\logo\\index.js", {"./fox.json":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\logo\\fox.json","./util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\logo\\util.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@metamask\logo\index.js
      return function (require, module, exports) {
const foxJson = require('./fox.json');
const {
  calculateSizingOptions,
  createLogoViewer,
  loadModelFromJson,
  createModelRenderer,
  createNode,
  setAttribute,
  setGradientDefinitions,
  setMaskDefinitions,
} = require('./util');

module.exports = createLogo;

function createLogo(options = {}) {
  const cameraDistance = options.cameraDistance || 400;
  const { height, width } = calculateSizingOptions(options);
  const meshJson = options.meshJson || foxJson;

  const container = createNode('svg');
  setAttribute(container, 'width', `${width}px`);
  setAttribute(container, 'height', `${height}px`);
  document.body.appendChild(container);

  setGradientDefinitions(container, meshJson.gradients);
  setMaskDefinitions({ container, masks: meshJson.masks, height, width });

  const modelObj = loadModelFromJson(meshJson);
  const renderFox = createModelRenderer(container, cameraDistance, modelObj);
  const renderScene = (lookCurrent, slowDrift) => {
    const rect = container.getBoundingClientRect();
    renderFox(rect, lookCurrent, slowDrift);
  };

  return createLogoViewer(
    container,
    renderScene,
    Object.assign({ cameraDistance }, options),
  );
}

      };
    };
  }
}, {package:"@metamask\\logo",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\logo\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\utils\\PropTypes.js", {"prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-transition-group\utils\PropTypes.js
      return function (require, module, exports) {
'use strict';

exports.__esModule = true;
exports.nameShape = undefined;
exports.transitionTimeout = transitionTimeout;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transitionTimeout(transitionType) {
  var timeoutPropName = 'transition' + transitionType + 'Timeout';
  var enabledPropName = 'transition' + transitionType;

  return function (props) {
    // If the transition is enabled
    if (props[enabledPropName]) {
      // If no timeout duration is provided
      if (props[timeoutPropName] == null) {
        return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');

        // If the duration isn't a number
      } else if (typeof props[timeoutPropName] !== 'number') {
        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
      }
    }

    return null;
  };
}

var nameShape = exports.nameShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
  enter: _propTypes2.default.string,
  leave: _propTypes2.default.string,
  active: _propTypes2.default.string
}), _propTypes2.default.shape({
  enter: _propTypes2.default.string,
  enterActive: _propTypes2.default.string,
  leave: _propTypes2.default.string,
  leaveActive: _propTypes2.default.string,
  appear: _propTypes2.default.string,
  appearActive: _propTypes2.default.string
})]);
      };
    };
  }
}, {package:"react-transition-group",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\utils\\PropTypes.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\TransitionGroup.js", {"./utils/ChildMapping":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\utils\\ChildMapping.js","chain-function":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\chain-function\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","warning":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\node_modules\\warning\\browser.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-transition-group\TransitionGroup.js
      return function (require, module, exports) {
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _chainFunction = require('chain-function');

var _chainFunction2 = _interopRequireDefault(_chainFunction);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _warning = require('warning');

var _warning2 = _interopRequireDefault(_warning);

var _ChildMapping = require('./utils/ChildMapping');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  component: _propTypes2.default.any,
  childFactory: _propTypes2.default.func,
  children: _propTypes2.default.node
};

var defaultProps = {
  component: 'span',
  childFactory: function childFactory(child) {
    return child;
  }
};

var TransitionGroup = function (_React$Component) {
  _inherits(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    _classCallCheck(this, TransitionGroup);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

    _this.performAppear = function (key, component) {
      _this.currentlyTransitioningKeys[key] = true;

      if (component.componentWillAppear) {
        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));
      } else {
        _this._handleDoneAppearing(key, component);
      }
    };

    _this._handleDoneAppearing = function (key, component) {
      if (component.componentDidAppear) {
        component.componentDidAppear();
      }

      delete _this.currentlyTransitioningKeys[key];

      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
        // This was removed before it had fully appeared. Remove it.
        _this.performLeave(key, component);
      }
    };

    _this.performEnter = function (key, component) {
      _this.currentlyTransitioningKeys[key] = true;

      if (component.componentWillEnter) {
        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));
      } else {
        _this._handleDoneEntering(key, component);
      }
    };

    _this._handleDoneEntering = function (key, component) {
      if (component.componentDidEnter) {
        component.componentDidEnter();
      }

      delete _this.currentlyTransitioningKeys[key];

      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
        // This was removed before it had fully entered. Remove it.
        _this.performLeave(key, component);
      }
    };

    _this.performLeave = function (key, component) {
      _this.currentlyTransitioningKeys[key] = true;

      if (component.componentWillLeave) {
        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));
      } else {
        // Note that this is somewhat dangerous b/c it calls setState()
        // again, effectively mutating the component before all the work
        // is done.
        _this._handleDoneLeaving(key, component);
      }
    };

    _this._handleDoneLeaving = function (key, component) {
      if (component.componentDidLeave) {
        component.componentDidLeave();
      }

      delete _this.currentlyTransitioningKeys[key];

      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
        // This entered again before it fully left. Add it again.
        _this.keysToEnter.push(key);
      } else {
        _this.setState(function (state) {
          var newChildren = _extends({}, state.children);
          delete newChildren[key];
          return { children: newChildren };
        });
      }
    };

    _this.childRefs = Object.create(null);

    _this.state = {
      children: (0, _ChildMapping.getChildMapping)(props.children)
    };
    return _this;
  }

  TransitionGroup.prototype.componentWillMount = function componentWillMount() {
    this.currentlyTransitioningKeys = {};
    this.keysToEnter = [];
    this.keysToLeave = [];
  };

  TransitionGroup.prototype.componentDidMount = function componentDidMount() {
    var initialChildMapping = this.state.children;
    for (var key in initialChildMapping) {
      if (initialChildMapping[key]) {
        this.performAppear(key, this.childRefs[key]);
      }
    }
  };

  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);
    var prevChildMapping = this.state.children;

    this.setState({
      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)
    });

    for (var key in nextChildMapping) {
      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
        this.keysToEnter.push(key);
      }
    }

    for (var _key in prevChildMapping) {
      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);
      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {
        this.keysToLeave.push(_key);
      }
    }

    // If we want to someday check for reordering, we could do it here.
  };

  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {
    var _this2 = this;

    var keysToEnter = this.keysToEnter;
    this.keysToEnter = [];
    keysToEnter.forEach(function (key) {
      return _this2.performEnter(key, _this2.childRefs[key]);
    });

    var keysToLeave = this.keysToLeave;
    this.keysToLeave = [];
    keysToLeave.forEach(function (key) {
      return _this2.performLeave(key, _this2.childRefs[key]);
    });
  };

  TransitionGroup.prototype.render = function render() {
    var _this3 = this;

    // TODO: we could get rid of the need for the wrapper node
    // by cloning a single child
    var childrenToRender = [];

    var _loop = function _loop(key) {
      var child = _this3.state.children[key];
      if (child) {
        var isCallbackRef = typeof child.ref !== 'string';
        var factoryChild = _this3.props.childFactory(child);
        var ref = function ref(r) {
          _this3.childRefs[key] = r;
        };

        "development" !== 'production' ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;

        // Always chaining the refs leads to problems when the childFactory
        // wraps the child. The child ref callback gets called twice with the
        // wrapper and the child. So we only need to chain the ref if the
        // factoryChild is not different from child.
        if (factoryChild === child && isCallbackRef) {
          ref = (0, _chainFunction2.default)(child.ref, ref);
        }

        // You may need to apply reactive updates to a child as it is leaving.
        // The normal React way to do it won't work since the child will have
        // already been removed. In case you need this behavior you can provide
        // a childFactory function to wrap every child, even the ones that are
        // leaving.
        childrenToRender.push(_react2.default.cloneElement(factoryChild, {
          key: key,
          ref: ref
        }));
      }
    };

    for (var key in this.state.children) {
      _loop(key);
    }

    // Do not forward TransitionGroup props to primitive DOM nodes
    var props = _extends({}, this.props);
    delete props.transitionLeave;
    delete props.transitionName;
    delete props.transitionAppear;
    delete props.transitionEnter;
    delete props.childFactory;
    delete props.transitionLeaveTimeout;
    delete props.transitionEnterTimeout;
    delete props.transitionAppearTimeout;
    delete props.component;

    return _react2.default.createElement(this.props.component, props, childrenToRender);
  };

  return TransitionGroup;
}(_react2.default.Component);

TransitionGroup.displayName = 'TransitionGroup';


TransitionGroup.propTypes = "development" !== "production" ? propTypes : {};
TransitionGroup.defaultProps = defaultProps;

exports.default = TransitionGroup;
module.exports = exports['default'];
      };
    };
  }
}, {package:"react-transition-group",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\TransitionGroup.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\CSSTransitionGroupChild.js", {"./utils/PropTypes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\utils\\PropTypes.js","dom-helpers/class/addClass":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\class\\addClass.js","dom-helpers/class/removeClass":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\class\\removeClass.js","dom-helpers/transition/properties":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\transition\\properties.js","dom-helpers/util/requestAnimationFrame":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\util\\requestAnimationFrame.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-transition-group\CSSTransitionGroupChild.js
      return function (require, module, exports) {
'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _addClass = require('dom-helpers/class/addClass');

var _addClass2 = _interopRequireDefault(_addClass);

var _removeClass = require('dom-helpers/class/removeClass');

var _removeClass2 = _interopRequireDefault(_removeClass);

var _requestAnimationFrame = require('dom-helpers/util/requestAnimationFrame');

var _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);

var _properties = require('dom-helpers/transition/properties');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = require('react-dom');

var _PropTypes = require('./utils/PropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var events = [];
if (_properties.transitionEnd) events.push(_properties.transitionEnd);
if (_properties.animationEnd) events.push(_properties.animationEnd);

function addEndListener(node, listener) {
  if (events.length) {
    events.forEach(function (e) {
      return node.addEventListener(e, listener, false);
    });
  } else {
    setTimeout(listener, 0);
  }

  return function () {
    if (!events.length) return;
    events.forEach(function (e) {
      return node.removeEventListener(e, listener, false);
    });
  };
}

var propTypes = {
  children: _propTypes2.default.node,
  name: _PropTypes.nameShape.isRequired,

  // Once we require timeouts to be specified, we can remove the
  // boolean flags (appear etc.) and just accept a number
  // or a bool for the timeout flags (appearTimeout etc.)
  appear: _propTypes2.default.bool,
  enter: _propTypes2.default.bool,
  leave: _propTypes2.default.bool,
  appearTimeout: _propTypes2.default.number,
  enterTimeout: _propTypes2.default.number,
  leaveTimeout: _propTypes2.default.number
};

var CSSTransitionGroupChild = function (_React$Component) {
  _inherits(CSSTransitionGroupChild, _React$Component);

  function CSSTransitionGroupChild() {
    var _temp, _this, _ret;

    _classCallCheck(this, CSSTransitionGroupChild);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.componentWillAppear = function (done) {
      if (_this.props.appear) {
        _this.transition('appear', done, _this.props.appearTimeout);
      } else {
        done();
      }
    }, _this.componentWillEnter = function (done) {
      if (_this.props.enter) {
        _this.transition('enter', done, _this.props.enterTimeout);
      } else {
        done();
      }
    }, _this.componentWillLeave = function (done) {
      if (_this.props.leave) {
        _this.transition('leave', done, _this.props.leaveTimeout);
      } else {
        done();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  CSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {
    this.classNameAndNodeQueue = [];
    this.transitionTimeouts = [];
  };

  CSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {
    this.unmounted = true;

    if (this.timeout) {
      clearTimeout(this.timeout);
    }
    this.transitionTimeouts.forEach(function (timeout) {
      clearTimeout(timeout);
    });

    this.classNameAndNodeQueue.length = 0;
  };

  CSSTransitionGroupChild.prototype.transition = function transition(animationType, finishCallback, timeout) {
    var node = (0, _reactDom.findDOMNode)(this);

    if (!node) {
      if (finishCallback) {
        finishCallback();
      }
      return;
    }

    var className = this.props.name[animationType] || this.props.name + '-' + animationType;
    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
    var timer = null;
    var removeListeners = void 0;

    (0, _addClass2.default)(node, className);

    // Need to do this to actually trigger a transition.
    this.queueClassAndNode(activeClassName, node);

    // Clean-up the animation after the specified delay
    var finish = function finish(e) {
      if (e && e.target !== node) {
        return;
      }

      clearTimeout(timer);
      if (removeListeners) removeListeners();

      (0, _removeClass2.default)(node, className);
      (0, _removeClass2.default)(node, activeClassName);

      if (removeListeners) removeListeners();

      // Usually this optional callback is used for informing an owner of
      // a leave animation and telling it to remove the child.
      if (finishCallback) {
        finishCallback();
      }
    };

    if (timeout) {
      timer = setTimeout(finish, timeout);
      this.transitionTimeouts.push(timer);
    } else if (_properties.transitionEnd) {
      removeListeners = addEndListener(node, finish);
    }
  };

  CSSTransitionGroupChild.prototype.queueClassAndNode = function queueClassAndNode(className, node) {
    var _this2 = this;

    this.classNameAndNodeQueue.push({
      className: className,
      node: node
    });

    if (!this.rafHandle) {
      this.rafHandle = (0, _requestAnimationFrame2.default)(function () {
        return _this2.flushClassNameAndNodeQueue();
      });
    }
  };

  CSSTransitionGroupChild.prototype.flushClassNameAndNodeQueue = function flushClassNameAndNodeQueue() {
    if (!this.unmounted) {
      this.classNameAndNodeQueue.forEach(function (obj) {
        // This is for to force a repaint,
        // which is necessary in order to transition styles when adding a class name.
        /* eslint-disable no-unused-expressions */
        obj.node.scrollTop;
        /* eslint-enable no-unused-expressions */
        (0, _addClass2.default)(obj.node, obj.className);
      });
    }
    this.classNameAndNodeQueue.length = 0;
    this.rafHandle = null;
  };

  CSSTransitionGroupChild.prototype.render = function render() {
    var props = _extends({}, this.props);
    delete props.name;
    delete props.appear;
    delete props.enter;
    delete props.leave;
    delete props.appearTimeout;
    delete props.enterTimeout;
    delete props.leaveTimeout;
    delete props.children;
    return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), props);
  };

  return CSSTransitionGroupChild;
}(_react2.default.Component);

CSSTransitionGroupChild.displayName = 'CSSTransitionGroupChild';


CSSTransitionGroupChild.propTypes = "development" !== "production" ? propTypes : {};

exports.default = CSSTransitionGroupChild;
module.exports = exports['default'];
      };
    };
  }
}, {package:"react-transition-group",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\CSSTransitionGroupChild.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\dialog\\index.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\dialog\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Dialog;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

function Dialog(props) {
  const {
    children,
    type,
    className,
    onClick
  } = props;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('dialog', className, {
      'dialog--message': type === 'message',
      'dialog--error': type === 'error',
      'dialog--warning': type === 'warning'
    }),
    onClick: onClick
  }, children);
}

Dialog.propTypes = {
  className: _propTypes.default.string,
  children: _propTypes.default.node,
  type: _propTypes.default.oneOf(['message', 'error', 'warning']),
  onClick: _propTypes.default.func
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\dialog\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-header\\page-container-header.component.js", {"../../button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\page-container\page-container-header\page-container-header.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _button = _interopRequireDefault(require("../../button"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class PageContainerHeader extends _react.Component {
  renderTabs() {
    const {
      tabs
    } = this.props;
    return tabs ? /*#__PURE__*/_react.default.createElement("ul", {
      className: "page-container__tabs"
    }, tabs) : null;
  }

  renderCloseAction() {
    const {
      hideClose,
      onClose,
      headerCloseText
    } = this.props;

    if (hideClose) {
      return null;
    }

    if (headerCloseText) {
      return onClose && /*#__PURE__*/_react.default.createElement(_button.default, {
        type: "link",
        className: "page-container__header-close-text",
        onClick: () => onClose()
      }, headerCloseText);
    }

    return onClose && /*#__PURE__*/_react.default.createElement("button", {
      className: "page-container__header-close",
      onClick: () => onClose(),
      "aria-label": "close"
    });
  }

  renderHeaderRow() {
    const {
      showBackButton,
      onBackButtonClick,
      backButtonStyles,
      backButtonString
    } = this.props;
    return showBackButton && /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container__header-row"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "page-container__back-button",
      onClick: onBackButtonClick,
      style: backButtonStyles
    }, backButtonString || 'Back'));
  }

  render() {
    const {
      title,
      subtitle,
      tabs,
      className,
      hideClose
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('page-container__header', className, {
        'page-container__header--no-padding-bottom': Boolean(tabs)
      }),
      "data-testid": "page-container__header"
    }, this.renderHeaderRow(), title && /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('page-container__title', {
        'page-container__title--no-margin-right': hideClose
      })
    }, title), subtitle ? /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container__subtitle"
    }, subtitle) : null, this.renderCloseAction(), this.renderTabs());
  }

}

exports.default = PageContainerHeader;
(0, _defineProperty2.default)(PageContainerHeader, "propTypes", {
  title: _propTypes.default.string,
  subtitle: _propTypes.default.string,
  onClose: _propTypes.default.func,
  showBackButton: _propTypes.default.bool,
  onBackButtonClick: _propTypes.default.func,
  backButtonStyles: _propTypes.default.object,
  backButtonString: _propTypes.default.string,
  tabs: _propTypes.default.node,
  headerCloseText: _propTypes.default.string,
  className: _propTypes.default.string,
  hideClose: _propTypes.default.bool
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-header\\page-container-header.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-footer\\page-container-footer.component.js", {"../../button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\page-container\page-container-footer\page-container-footer.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _button = _interopRequireDefault(require("../../button"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class PageContainerFooter extends _react.Component {
  render() {
    const {
      children,
      onCancel,
      cancelText,
      onSubmit,
      submitText,
      disabled,
      submitButtonType,
      hideCancel,
      cancelButtonType,
      buttonSizeLarge = false,
      footerClassName,
      footerButtonClassName
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('page-container__footer', footerClassName)
    }, /*#__PURE__*/_react.default.createElement("footer", null, !hideCancel && /*#__PURE__*/_react.default.createElement(_button.default, {
      type: cancelButtonType || 'secondary',
      large: buttonSizeLarge,
      className: (0, _classnames.default)('page-container__footer-button', footerButtonClassName),
      onClick: e => onCancel(e),
      "data-testid": "page-container-footer-cancel"
    }, cancelText || this.context.t('cancel')), /*#__PURE__*/_react.default.createElement(_button.default, {
      type: submitButtonType || 'primary',
      large: buttonSizeLarge,
      className: (0, _classnames.default)('page-container__footer-button', footerButtonClassName),
      disabled: disabled,
      onClick: e => onSubmit(e),
      "data-testid": "page-container-footer-next"
    }, submitText || this.context.t('next'))), children && /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container__footer-secondary"
    }, children));
  }

}

exports.default = PageContainerFooter;
(0, _defineProperty2.default)(PageContainerFooter, "propTypes", {
  children: _propTypes.default.node,
  onCancel: _propTypes.default.func,
  cancelText: _propTypes.default.string,
  cancelButtonType: _propTypes.default.string,
  onSubmit: _propTypes.default.func,
  submitText: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  submitButtonType: _propTypes.default.string,
  hideCancel: _propTypes.default.bool,
  buttonSizeLarge: _propTypes.default.bool,
  footerClassName: _propTypes.default.string,
  footerButtonClassName: _propTypes.default.string
});
(0, _defineProperty2.default)(PageContainerFooter, "contextTypes", {
  t: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-footer\\page-container-footer.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\asset\\components\\asset-breadcrumb.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\asset\components\asset-breadcrumb.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

const AssetBreadcrumb = ({
  accountName,
  assetName,
  onBack
}) => {
  return /*#__PURE__*/_react.default.createElement("button", {
    className: "asset-breadcrumb",
    onClick: onBack
  }, /*#__PURE__*/_react.default.createElement("i", {
    className: "fas fa-chevron-left asset-breadcrumb__chevron",
    "data-testid": "asset__back"
  }), /*#__PURE__*/_react.default.createElement("span", null, accountName), "\xA0/\xA0", /*#__PURE__*/_react.default.createElement("span", {
    className: "asset-breadcrumb__asset"
  }, assetName));
};

AssetBreadcrumb.propTypes = {
  accountName: _propTypes.default.string.isRequired,
  assetName: _propTypes.default.string.isRequired,
  onBack: _propTypes.default.func.isRequired
};
var _default = AssetBreadcrumb;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\asset\\components\\asset-breadcrumb.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\menu\\index.js", {"./menu":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\menu\\menu.js","./menu-item":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\menu\\menu-item.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\menu\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Menu", {
  enumerable: true,
  get: function () {
    return _menu.default;
  }
});
Object.defineProperty(exports, "MenuItem", {
  enumerable: true,
  get: function () {
    return _menuItem.default;
  }
});

var _menu = _interopRequireDefault(require("./menu"));

var _menuItem = _interopRequireDefault(require("./menu-item"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\menu\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\wallet-overview\\eth-overview.js", {"../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../ducks/swaps/swaps":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\swaps\\swaps.js","../../../helpers/constants/common":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\common.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../../helpers/utils/hardware":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\hardware.js","../../../hooks/useMetricEvent":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useMetricEvent.js","../../../selectors/selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\selectors.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","../../ui/icon-button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-button\\index.js","../../ui/icon/overview-buy-icon.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\overview-buy-icon.component.js","../../ui/icon/overview-send-icon.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\overview-send-icon.component.js","../../ui/icon/swap-icon.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\swap-icon.component.js","../../ui/identicon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\index.js","../../ui/tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tooltip\\index.js","../user-preferenced-currency-display":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\user-preferenced-currency-display\\index.js","./wallet-overview":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\wallet-overview\\wallet-overview.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\wallet-overview\eth-overview.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _classnames = _interopRequireDefault(require("classnames"));

var _reactRouterDom = require("react-router-dom");

var _identicon = _interopRequireDefault(require("../../ui/identicon"));

var _i18n = require("../../../contexts/i18n");

var _routes = require("../../../helpers/constants/routes");

var _useMetricEvent = require("../../../hooks/useMetricEvent");

var _tooltip = _interopRequireDefault(require("../../ui/tooltip"));

var _userPreferencedCurrencyDisplay = _interopRequireDefault(require("../user-preferenced-currency-display"));

var _common = require("../../../helpers/constants/common");

var _actions = require("../../../store/actions");

var _selectors = require("../../../selectors/selectors");

var _swapIcon = _interopRequireDefault(require("../../ui/icon/swap-icon.component"));

var _overviewBuyIcon = _interopRequireDefault(require("../../ui/icon/overview-buy-icon.component"));

var _overviewSendIcon = _interopRequireDefault(require("../../ui/icon/overview-send-icon.component"));

var _swaps = require("../../../ducks/swaps/swaps");

var _iconButton = _interopRequireDefault(require("../../ui/icon-button"));

var _hardware = require("../../../helpers/utils/hardware");

var _walletOverview = _interopRequireDefault(require("./wallet-overview"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const EthOverview = ({
  className
}) => {
  const dispatch = (0, _reactRedux.useDispatch)();
  const t = (0, _react.useContext)(_i18n.I18nContext);
  const sendEvent = (0, _useMetricEvent.useMetricEvent)({
    eventOpts: {
      category: 'Navigation',
      action: 'Home',
      name: 'Clicked Send: Eth'
    }
  });
  const depositEvent = (0, _useMetricEvent.useMetricEvent)({
    eventOpts: {
      category: 'Navigation',
      action: 'Home',
      name: 'Clicked Deposit'
    }
  });
  const history = (0, _reactRouterDom.useHistory)();
  const keyring = (0, _reactRedux.useSelector)(_selectors.getCurrentKeyring);
  const usingHardwareWallet = (0, _hardware.isHardwareKeyring)(keyring.type);
  const balanceIsCached = (0, _reactRedux.useSelector)(_selectors.isBalanceCached);
  const showFiat = (0, _reactRedux.useSelector)(_selectors.getShouldShowFiat);
  const selectedAccount = (0, _reactRedux.useSelector)(_selectors.getSelectedAccount);
  const {
    balance
  } = selectedAccount;
  const isSwapsChain = (0, _reactRedux.useSelector)(_selectors.getIsSwapsChain);
  const isBuyableChain = (0, _reactRedux.useSelector)(_selectors.getIsBuyableChain);
  const primaryTokenImage = (0, _reactRedux.useSelector)(_selectors.getNativeCurrencyImage);
  const enteredSwapsEvent = (0, _useMetricEvent.useNewMetricEvent)({
    event: 'Swaps Opened',
    properties: {
      source: 'Main View',
      active_currency: 'ETH'
    },
    category: 'swaps'
  });
  const defaultSwapsToken = (0, _reactRedux.useSelector)(_selectors.getSwapsDefaultToken);
  return /*#__PURE__*/_react.default.createElement(_walletOverview.default, {
    balance: /*#__PURE__*/_react.default.createElement(_tooltip.default, {
      position: "top",
      title: t('balanceOutdated'),
      disabled: !balanceIsCached
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "eth-overview__balance"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "eth-overview__primary-container"
    }, /*#__PURE__*/_react.default.createElement(_userPreferencedCurrencyDisplay.default, {
      className: (0, _classnames.default)('eth-overview__primary-balance', {
        'eth-overview__cached-balance': balanceIsCached
      }),
      "data-testid": "eth-overview__primary-currency",
      value: balance,
      type: _common.PRIMARY,
      ethNumberOfDecimals: 4,
      hideTitle: true
    }), balanceIsCached ? /*#__PURE__*/_react.default.createElement("span", {
      className: "eth-overview__cached-star"
    }, "*") : null), showFiat && /*#__PURE__*/_react.default.createElement(_userPreferencedCurrencyDisplay.default, {
      className: (0, _classnames.default)({
        'eth-overview__cached-secondary-balance': balanceIsCached,
        'eth-overview__secondary-balance': !balanceIsCached
      }),
      "data-testid": "eth-overview__secondary-currency",
      value: balance,
      type: _common.SECONDARY,
      ethNumberOfDecimals: 4,
      hideTitle: true
    }))),
    buttons: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_iconButton.default, {
      className: "eth-overview__button",
      Icon: _overviewBuyIcon.default,
      disabled: !isBuyableChain,
      label: t('buy'),
      onClick: () => {
        depositEvent();
        dispatch((0, _actions.showModal)({
          name: 'DEPOSIT_ETHER'
        }));
      }
    }), /*#__PURE__*/_react.default.createElement(_iconButton.default, {
      className: "eth-overview__button",
      "data-testid": "eth-overview-send",
      Icon: _overviewSendIcon.default,
      label: t('send'),
      onClick: () => {
        sendEvent();
        history.push(_routes.SEND_ROUTE);
      }
    }), /*#__PURE__*/_react.default.createElement(_iconButton.default, {
      className: "eth-overview__button",
      disabled: !isSwapsChain,
      Icon: _swapIcon.default,
      onClick: () => {
        if (isSwapsChain) {
          enteredSwapsEvent();
          dispatch((0, _swaps.setSwapsFromToken)(defaultSwapsToken));

          if (usingHardwareWallet) {
            global.platform.openExtensionInBrowser(_routes.BUILD_QUOTE_ROUTE);
          } else {
            history.push(_routes.BUILD_QUOTE_ROUTE);
          }
        }
      },
      label: t('swap'),
      tooltipRender: contents => /*#__PURE__*/_react.default.createElement(_tooltip.default, {
        title: t('currentlyUnavailable'),
        position: "bottom",
        disabled: isSwapsChain
      }, contents)
    })),
    className: className,
    icon: /*#__PURE__*/_react.default.createElement(_identicon.default, {
      diameter: 32,
      image: primaryTokenImage,
      imageBorder: true
    })
  });
};

EthOverview.propTypes = {
  className: _propTypes.default.string
};
EthOverview.defaultProps = {
  className: undefined
};
var _default = EthOverview;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\wallet-overview\\eth-overview.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\wallet-overview\\token-overview.js", {"../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","../../../ducks/swaps/swaps":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\swaps\\swaps.js","../../../helpers/constants/error-keys":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\error-keys.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../../helpers/utils/hardware":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\hardware.js","../../../hooks/useMetricEvent":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useMetricEvent.js","../../../hooks/useTokenFiatAmount":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useTokenFiatAmount.js","../../../hooks/useTokenTracker":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useTokenTracker.js","../../../selectors/selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\selectors.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","../../ui/currency-display":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\currency-display\\index.js","../../ui/icon-button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-button\\index.js","../../ui/icon/overview-send-icon.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\overview-send-icon.component.js","../../ui/icon/swap-icon.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\swap-icon.component.js","../../ui/identicon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\index.js","../../ui/tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tooltip\\index.js","./wallet-overview":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\wallet-overview\\wallet-overview.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\wallet-overview\token-overview.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _identicon = _interopRequireDefault(require("../../ui/identicon"));

var _tooltip = _interopRequireDefault(require("../../ui/tooltip"));

var _currencyDisplay = _interopRequireDefault(require("../../ui/currency-display"));

var _i18n = require("../../../contexts/i18n");

var _hardware = require("../../../helpers/utils/hardware");

var _routes = require("../../../helpers/constants/routes");

var _useMetricEvent = require("../../../hooks/useMetricEvent");

var _useTokenTracker = require("../../../hooks/useTokenTracker");

var _useTokenFiatAmount = require("../../../hooks/useTokenFiatAmount");

var _send = require("../../../ducks/send");

var _swaps = require("../../../ducks/swaps/swaps");

var _selectors = require("../../../selectors/selectors");

var _swapIcon = _interopRequireDefault(require("../../ui/icon/swap-icon.component"));

var _overviewSendIcon = _interopRequireDefault(require("../../ui/icon/overview-send-icon.component"));

var _iconButton = _interopRequireDefault(require("../../ui/icon-button"));

var _errorKeys = require("../../../helpers/constants/error-keys");

var _actions = require("../../../store/actions");

var _walletOverview = _interopRequireDefault(require("./wallet-overview"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const TokenOverview = ({
  className,
  token
}) => {
  var _tokensWithBalances$, _tokensWithBalances$2;

  const dispatch = (0, _reactRedux.useDispatch)();
  const t = (0, _react.useContext)(_i18n.I18nContext);
  const sendTokenEvent = (0, _useMetricEvent.useMetricEvent)({
    eventOpts: {
      category: 'Navigation',
      action: 'Home',
      name: 'Clicked Send: Token'
    }
  });
  const history = (0, _reactRouterDom.useHistory)();
  const keyring = (0, _reactRedux.useSelector)(_selectors.getCurrentKeyring);
  const usingHardwareWallet = (0, _hardware.isHardwareKeyring)(keyring.type);
  const {
    tokensWithBalances
  } = (0, _useTokenTracker.useTokenTracker)([token]);
  const balanceToRender = (_tokensWithBalances$ = tokensWithBalances[0]) === null || _tokensWithBalances$ === void 0 ? void 0 : _tokensWithBalances$.string;
  const balance = (_tokensWithBalances$2 = tokensWithBalances[0]) === null || _tokensWithBalances$2 === void 0 ? void 0 : _tokensWithBalances$2.balance;
  const formattedFiatBalance = (0, _useTokenFiatAmount.useTokenFiatAmount)(token.address, balanceToRender, token.symbol);
  const isSwapsChain = (0, _reactRedux.useSelector)(_selectors.getIsSwapsChain);
  const enteredSwapsEvent = (0, _useMetricEvent.useNewMetricEvent)({
    event: 'Swaps Opened',
    properties: {
      source: 'Token View',
      active_currency: token.symbol
    },
    category: 'swaps'
  });
  (0, _react.useEffect)(() => {
    if (token.isERC721 && false) {
      dispatch((0, _actions.showModal)({
        name: 'CONVERT_TOKEN_TO_NFT',
        tokenAddress: token.address
      }));
    }
  }, [token.isERC721, token.address, dispatch]);
  return /*#__PURE__*/_react.default.createElement(_walletOverview.default, {
    balance: /*#__PURE__*/_react.default.createElement("div", {
      className: "token-overview__balance"
    }, /*#__PURE__*/_react.default.createElement(_currencyDisplay.default, {
      className: "token-overview__primary-balance",
      displayValue: balanceToRender,
      suffix: token.symbol
    }), formattedFiatBalance ? /*#__PURE__*/_react.default.createElement(_currencyDisplay.default, {
      className: "token-overview__secondary-balance",
      displayValue: formattedFiatBalance,
      hideLabel: true
    }) : null),
    buttons: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_iconButton.default, {
      className: "token-overview__button",
      onClick: async () => {
        sendTokenEvent();

        try {
          await dispatch((0, _send.updateSendAsset)({
            type: _send.ASSET_TYPES.TOKEN,
            details: token
          }));
          history.push(_routes.SEND_ROUTE);
        } catch (err) {
          if (!err.message.includes(_errorKeys.INVALID_ASSET_TYPE)) {
            throw err;
          }
        }
      },
      Icon: _overviewSendIcon.default,
      label: t('send'),
      "data-testid": "eth-overview-send",
      disabled: token.isERC721
    }), /*#__PURE__*/_react.default.createElement(_iconButton.default, {
      className: "token-overview__button",
      disabled: !isSwapsChain,
      Icon: _swapIcon.default,
      onClick: () => {
        if (isSwapsChain) {
          enteredSwapsEvent();
          dispatch((0, _swaps.setSwapsFromToken)(_objectSpread(_objectSpread({}, token), {}, {
            iconUrl: token.image,
            balance,
            string: balanceToRender
          })));

          if (usingHardwareWallet) {
            global.platform.openExtensionInBrowser(_routes.BUILD_QUOTE_ROUTE);
          } else {
            history.push(_routes.BUILD_QUOTE_ROUTE);
          }
        }
      },
      label: t('swap'),
      tooltipRender: contents => /*#__PURE__*/_react.default.createElement(_tooltip.default, {
        title: t('currentlyUnavailable'),
        position: "bottom",
        disabled: isSwapsChain
      }, contents)
    })),
    className: className,
    icon: /*#__PURE__*/_react.default.createElement(_identicon.default, {
      diameter: 32,
      address: token.address,
      image: token.image
    })
  });
};

TokenOverview.propTypes = {
  className: _propTypes.default.string,
  token: _propTypes.default.shape({
    address: _propTypes.default.string.isRequired,
    decimals: _propTypes.default.number,
    symbol: _propTypes.default.string,
    image: _propTypes.default.string,
    isERC721: _propTypes.default.bool
  }).isRequired
};
TokenOverview.defaultProps = {
  className: undefined
};
var _default = TokenOverview;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\wallet-overview\\token-overview.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-list\\transaction-list.component.js", {"../../../../shared/constants/swaps":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\swaps.js","../../../../shared/constants/transaction":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\transaction.js","../../../helpers/constants/transactions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\transactions.js","../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../selectors/transactions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\transactions.js","../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../transaction-list-item":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-list-item\\index.js","../transaction-list-item/smart-transaction-list-item.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-list-item\\smart-transaction-list-item.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\transaction-list\transaction-list.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TransactionList;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _transactions = require("../../../selectors/transactions");

var _selectors = require("../../../selectors");

var _useI18nContext = require("../../../hooks/useI18nContext");

var _transactionListItem = _interopRequireDefault(require("../transaction-list-item"));

var _smartTransactionListItem = _interopRequireDefault(require("../transaction-list-item/smart-transaction-list-item.component"));

var _button = _interopRequireDefault(require("../../ui/button"));

var _transactions2 = require("../../../helpers/constants/transactions");

var _swaps = require("../../../../shared/constants/swaps");

var _transaction = require("../../../../shared/constants/transaction");

var _util = require("../../../helpers/utils/util");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PAGE_INCREMENT = 10; // When we are on a token page, we only want to show transactions that involve that token.
// In the case of token transfers or approvals, these will be transactions sent to the
// token contract. In the case of swaps, these will be transactions sent to the swaps contract
// and which have the token address in the transaction data.
//
// getTransactionGroupRecipientAddressFilter is used to determine whether a transaction matches
// either of those criteria

const getTransactionGroupRecipientAddressFilter = (recipientAddress, chainId) => {
  return ({
    initialTransaction: {
      txParams
    }
  }) => {
    return (0, _util.isEqualCaseInsensitive)(txParams === null || txParams === void 0 ? void 0 : txParams.to, recipientAddress) || (txParams === null || txParams === void 0 ? void 0 : txParams.to) === _swaps.SWAPS_CHAINID_CONTRACT_ADDRESS_MAP[chainId] && txParams.data.match(recipientAddress.slice(2));
  };
};

const tokenTransactionFilter = ({
  initialTransaction: {
    type,
    destinationTokenSymbol,
    sourceTokenSymbol
  }
}) => {
  if (_transactions2.TOKEN_CATEGORY_HASH[type]) {
    return false;
  } else if (type === _transaction.TRANSACTION_TYPES.SWAP) {
    return destinationTokenSymbol === 'ETH' || sourceTokenSymbol === 'ETH';
  }

  return true;
};

const getFilteredTransactionGroups = (transactionGroups, hideTokenTransactions, tokenAddress, chainId) => {
  if (hideTokenTransactions) {
    return transactionGroups.filter(tokenTransactionFilter);
  } else if (tokenAddress) {
    return transactionGroups.filter(getTransactionGroupRecipientAddressFilter(tokenAddress, chainId));
  }

  return transactionGroups;
};

function TransactionList({
  hideTokenTransactions,
  tokenAddress
}) {
  const [limit, setLimit] = (0, _react.useState)(PAGE_INCREMENT);
  const t = (0, _useI18nContext.useI18nContext)();
  const unfilteredPendingTransactions = (0, _reactRedux.useSelector)(_transactions.nonceSortedPendingTransactionsSelector);
  const unfilteredCompletedTransactions = (0, _reactRedux.useSelector)(_transactions.nonceSortedCompletedTransactionsSelector);
  const chainId = (0, _reactRedux.useSelector)(_selectors.getCurrentChainId);
  const pendingTransactions = (0, _react.useMemo)(() => getFilteredTransactionGroups(unfilteredPendingTransactions, hideTokenTransactions, tokenAddress, chainId), [hideTokenTransactions, tokenAddress, unfilteredPendingTransactions, chainId]);
  const completedTransactions = (0, _react.useMemo)(() => getFilteredTransactionGroups(unfilteredCompletedTransactions, hideTokenTransactions, tokenAddress, chainId), [hideTokenTransactions, tokenAddress, unfilteredCompletedTransactions, chainId]);
  const viewMore = (0, _react.useCallback)(() => setLimit(prev => prev + PAGE_INCREMENT), []);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "transaction-list"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "transaction-list__transactions"
  }, pendingTransactions.length > 0 && /*#__PURE__*/_react.default.createElement("div", {
    className: "transaction-list__pending-transactions"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "transaction-list__header"
  }, `${t('queue')} (${pendingTransactions.length})`), pendingTransactions.map((transactionGroup, index) => transactionGroup.initialTransaction.transactionType === _transaction.TRANSACTION_TYPES.SMART ? /*#__PURE__*/_react.default.createElement(_smartTransactionListItem.default, {
    isEarliestNonce: index === 0,
    smartTransaction: transactionGroup.initialTransaction,
    key: `${transactionGroup.nonce}:${index}`
  }) : /*#__PURE__*/_react.default.createElement(_transactionListItem.default, {
    isEarliestNonce: index === 0,
    transactionGroup: transactionGroup,
    key: `${transactionGroup.nonce}:${index}`
  }))), /*#__PURE__*/_react.default.createElement("div", {
    className: "transaction-list__completed-transactions"
  }, pendingTransactions.length > 0 ? /*#__PURE__*/_react.default.createElement("div", {
    className: "transaction-list__header"
  }, t('history')) : null, completedTransactions.length > 0 ? completedTransactions.slice(0, limit).map((transactionGroup, index) => {
    var _transactionGroup$ini;

    return ((_transactionGroup$ini = transactionGroup.initialTransaction) === null || _transactionGroup$ini === void 0 ? void 0 : _transactionGroup$ini.transactionType) === 'smart' ? /*#__PURE__*/_react.default.createElement(_smartTransactionListItem.default, {
      smartTransaction: transactionGroup.initialTransaction,
      key: `${transactionGroup.nonce}:${index}`
    }) : /*#__PURE__*/_react.default.createElement(_transactionListItem.default, {
      transactionGroup: transactionGroup,
      key: `${transactionGroup.nonce}:${limit + index - 10}`
    });
  }) : /*#__PURE__*/_react.default.createElement("div", {
    className: "transaction-list__empty"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "transaction-list__empty-text"
  }, t('noTransactions'))), completedTransactions.length > limit && /*#__PURE__*/_react.default.createElement(_button.default, {
    className: "transaction-list__view-more",
    type: "secondary",
    onClick: viewMore
  }, t('viewMore')))));
}

TransactionList.propTypes = {
  hideTokenTransactions: _propTypes.default.bool,
  tokenAddress: _propTypes.default.string
};
TransactionList.defaultProps = {
  hideTokenTransactions: false,
  tokenAddress: undefined
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-list\\transaction-list.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\card\\card.js", {"../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@babel/runtime/helpers/objectWithoutProperties":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\objectWithoutProperties.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\card\card.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _box = _interopRequireDefault(require("../box"));

var _designSystem = require("../../../helpers/constants/design-system");

const _excluded = ["border", "padding", "backgroundColor", "children"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const Card = _ref => {
  let {
    border = true,
    padding = 4,
    backgroundColor = _designSystem.COLORS.WHITE,
    children
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const defaultBorderProps = {
    borderColor: border && _designSystem.COLORS.UI2,
    borderRadius: border && _designSystem.SIZES.MD,
    borderStyle: border && _designSystem.BORDER_STYLE.SOLID
  };
  return /*#__PURE__*/_react.default.createElement(_box.default, _objectSpread(_objectSpread({
    padding,
    backgroundColor
  }, defaultBorderProps), props), children);
};

Card.propTypes = _objectSpread({
  /**
   * Whether the Card has a border or not.
   * Defaults to true
   */
  border: _propTypes.default.bool,

  /**
   * Padding of the Card component accepts number or an array of 2 numbers.
   * Defaults to 4 (16px)
   */
  padding: _box.default.propTypes.padding,

  /**
   * The background color of the card
   * Defaults to COLORS.WHITE
   */
  backgroundColor: _box.default.propTypes.backgroundColor
}, _box.default.propTypes);
var _default = Card;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\card\\card.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\loading-indicator\\loading-indicator.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\loading-indicator\loading-indicator.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LoadingIndicator;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function LoadingIndicator({
  alt,
  title,
  isLoading,
  children = null
}) {
  return isLoading ? /*#__PURE__*/_react.default.createElement("span", {
    className: "loading-indicator"
  }, /*#__PURE__*/_react.default.createElement("img", {
    className: "loading-indicator__spinner",
    alt: alt,
    title: title,
    src: "images/loading.svg"
  })) : children;
}

LoadingIndicator.propTypes = {
  isLoading: _propTypes.default.bool.isRequired,
  alt: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired,
  children: _propTypes.default.node
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\loading-indicator\\loading-indicator.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\info-icon-inverted.component.js", {"../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\icon\info-icon-inverted.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InfoIconInverted;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _designSystem = require("../../../helpers/constants/design-system");

function InfoIconInverted({
  severity
}) {
  const className = (0, _classnames.default)('info-icon', {
    'info-icon--success': severity === _designSystem.SEVERITIES.SUCCESS,
    'info-icon--warning': severity === _designSystem.SEVERITIES.WARNING,
    'info-icon--danger': severity === _designSystem.SEVERITIES.DANGER,
    'info-icon--info': severity === _designSystem.SEVERITIES.INFO
  });
  return /*#__PURE__*/_react.default.createElement("svg", {
    className: className,
    width: "16",
    height: "16",
    viewBox: "0 0 16 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M15.75 8C15.75 3.75 12.25 0.25 8 0.25C3.71875 0.25 0.25 3.75 0.25 8C0.25 12.2812 3.71875 15.75 8 15.75C12.25 15.75 15.75 12.2812 15.75 8ZM8 9.5625C8.78125 9.5625 9.4375 10.2188 9.4375 11C9.4375 11.8125 8.78125 12.4375 8 12.4375C7.1875 12.4375 6.5625 11.8125 6.5625 11C6.5625 10.2188 7.1875 9.5625 8 9.5625ZM6.625 4.40625C6.59375 4.1875 6.78125 4 7 4H8.96875C9.1875 4 9.375 4.1875 9.34375 4.40625L9.125 8.65625C9.09375 8.875 8.9375 9 8.75 9H7.21875C7.03125 9 6.875 8.875 6.84375 8.65625L6.625 4.40625Z"
  }));
}

InfoIconInverted.propTypes = {
  /**
   * Severity can be 1 of 4 states:'danger', 'warning', 'info' or 'success'
   */
  severity: _propTypes.default.oneOf(Object.values(_designSystem.SEVERITIES))
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\info-icon-inverted.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-with-fallback\\index.js", {"./icon-with-fallback.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-with-fallback\\icon-with-fallback.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\icon-with-fallback\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _iconWithFallback.default;
  }
});

var _iconWithFallback = _interopRequireDefault(require("./icon-with-fallback.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-with-fallback\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\metamask-template-renderer\\safe-component-list.js", {"../../ui/box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../ui/chip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\chip\\index.js","../../ui/definition-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\definition-list\\index.js","../../ui/popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\popover\\index.js","../../ui/textarea/textarea":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\textarea\\textarea.js","../../ui/truncated-definition-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\truncated-definition-list\\index.js","../../ui/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\index.js","../metamask-translation":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\metamask-translation\\index.js","../network-display":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\network-display\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\metamask-template-renderer\safe-component-list.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.safeComponentList = void 0;

var _button = _interopRequireDefault(require("../../ui/button"));

var _chip = _interopRequireDefault(require("../../ui/chip"));

var _definitionList = _interopRequireDefault(require("../../ui/definition-list"));

var _truncatedDefinitionList = _interopRequireDefault(require("../../ui/truncated-definition-list"));

var _popover = _interopRequireDefault(require("../../ui/popover"));

var _typography = _interopRequireDefault(require("../../ui/typography"));

var _box = _interopRequireDefault(require("../../ui/box"));

var _metamaskTranslation = _interopRequireDefault(require("../metamask-translation"));

var _networkDisplay = _interopRequireDefault(require("../network-display"));

var _textarea = _interopRequireDefault(require("../../ui/textarea/textarea"));

const safeComponentList = {
  MetaMaskTranslation: _metamaskTranslation.default,
  a: 'a',
  b: 'b',
  p: 'p',
  div: 'div',
  span: 'span',
  Typography: _typography.default,
  Chip: _chip.default,
  DefinitionList: _definitionList.default,
  TruncatedDefinitionList: _truncatedDefinitionList.default,
  Button: _button.default,
  Popover: _popover.default,
  Box: _box.default,
  NetworkDisplay: _networkDisplay.default,
  TextArea: _textarea.default
};
exports.safeComponentList = safeComponentList;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\metamask-template-renderer\\safe-component-list.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\permissions-connect\\redirect\\permissions-redirect.component.js", {"../../../components/ui/site-icon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\site-icon\\index.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\permissions-connect\redirect\permissions-redirect.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PermissionsRedirect;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _siteIcon = _interopRequireDefault(require("../../../components/ui/site-icon"));

var _i18n = require("../../../contexts/i18n");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function PermissionsRedirect({
  subjectMetadata
}) {
  const t = (0, _react.useContext)(_i18n.I18nContext);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "permissions-redirect"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "permissions-redirect__result"
  }, t('connecting'), /*#__PURE__*/_react.default.createElement("div", {
    className: "permissions-redirect__icons"
  }, /*#__PURE__*/_react.default.createElement(_siteIcon.default, {
    icon: subjectMetadata.iconUrl,
    name: subjectMetadata.name,
    size: 64
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "permissions-redirect__center-icon"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "permissions-redirect__check"
  }), renderBrokenLine()), /*#__PURE__*/_react.default.createElement(_siteIcon.default, {
    icon: "/images/logo/metamask-fox.svg",
    size: 64
  }))));

  function renderBrokenLine() {
    return /*#__PURE__*/_react.default.createElement("svg", {
      width: "131",
      height: "2",
      viewBox: "0 0 131 2",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, /*#__PURE__*/_react.default.createElement("path", {
      d: "M0 1H134",
      stroke: "#CDD1E4",
      strokeLinejoin: "round",
      strokeDasharray: "8 7"
    }));
  }
}

PermissionsRedirect.propTypes = {
  subjectMetadata: _propTypes.default.shape({
    extensionId: _propTypes.default.string,
    iconUrl: _propTypes.default.string,
    subjectType: _propTypes.default.string,
    name: _propTypes.default.string.isRequired,
    origin: _propTypes.default.string.isRequired
  })
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\permissions-connect\\redirect\\permissions-redirect.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\permissions-connect\\choose-account\\choose-account.js", {"../../../components/app/permissions-connect-footer":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-footer\\index.js","../../../components/app/permissions-connect-header":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-header\\index.js","../../../components/ui/account-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\account-list\\index.js","../../../components/ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\permissions-connect\choose-account\choose-account.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _useI18nContext = require("../../../hooks/useI18nContext");

var _button = _interopRequireDefault(require("../../../components/ui/button"));

var _permissionsConnectHeader = _interopRequireDefault(require("../../../components/app/permissions-connect-header"));

var _permissionsConnectFooter = _interopRequireDefault(require("../../../components/app/permissions-connect-footer"));

var _accountList = _interopRequireDefault(require("../../../components/ui/account-list"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const ChooseAccount = ({
  selectedAccountAddresses,
  addressLastConnectedMap = {},
  accounts,
  selectAccounts,
  selectNewAccountViaModal,
  cancelPermissionsRequest,
  permissionsRequestId,
  targetSubjectMetadata,
  nativeCurrency
}) => {
  const [selectedAccounts, setSelectedAccounts] = (0, _react.useState)(selectedAccountAddresses);
  const t = (0, _useI18nContext.useI18nContext)();

  const handleAccountClick = address => {
    const newSelectedAccounts = new Set(selectedAccounts);

    if (newSelectedAccounts.has(address)) {
      newSelectedAccounts.delete(address);
    } else {
      newSelectedAccounts.add(address);
    }

    setSelectedAccounts(newSelectedAccounts);
  };

  const selectAll = () => {
    const newSelectedAccounts = new Set(accounts.map(account => account.address));
    setSelectedAccounts(newSelectedAccounts);
  };

  const deselectAll = () => {
    setSelectedAccounts(new Set());
  };

  const allAreSelected = () => {
    return accounts.length === selectedAccounts.size;
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "permissions-connect-choose-account"
  }, /*#__PURE__*/_react.default.createElement(_permissionsConnectHeader.default, {
    iconUrl: targetSubjectMetadata === null || targetSubjectMetadata === void 0 ? void 0 : targetSubjectMetadata.iconUrl,
    iconName: targetSubjectMetadata === null || targetSubjectMetadata === void 0 ? void 0 : targetSubjectMetadata.name,
    headerTitle: t('connectWithMetaMask'),
    headerText: accounts.length > 0 ? t('selectAccounts') : t('connectAccountOrCreate'),
    siteOrigin: targetSubjectMetadata === null || targetSubjectMetadata === void 0 ? void 0 : targetSubjectMetadata.origin
  }), /*#__PURE__*/_react.default.createElement(_accountList.default, {
    accounts: accounts,
    selectNewAccountViaModal: selectNewAccountViaModal,
    addressLastConnectedMap: addressLastConnectedMap,
    nativeCurrency: nativeCurrency,
    selectedAccounts: selectedAccounts,
    allAreSelected: allAreSelected,
    deselectAll: deselectAll,
    selectAll: selectAll,
    handleAccountClick: handleAccountClick
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "permissions-connect-choose-account__footer-container"
  }, /*#__PURE__*/_react.default.createElement(_permissionsConnectFooter.default, null), /*#__PURE__*/_react.default.createElement("div", {
    className: "permissions-connect-choose-account__bottom-buttons"
  }, /*#__PURE__*/_react.default.createElement(_button.default, {
    onClick: () => cancelPermissionsRequest(permissionsRequestId),
    type: "secondary"
  }, t('cancel')), /*#__PURE__*/_react.default.createElement(_button.default, {
    onClick: () => selectAccounts(selectedAccounts),
    type: "primary",
    disabled: selectedAccounts.size === 0
  }, t('next')))));
};

ChooseAccount.propTypes = {
  /**
   * Array of user account objects
   */
  accounts: _propTypes.default.arrayOf(_propTypes.default.shape({
    address: _propTypes.default.string,
    addressLabel: _propTypes.default.string,
    lastConnectedDate: _propTypes.default.string,
    balance: _propTypes.default.string
  })).isRequired,

  /**
   * Function to select an account
   */
  selectAccounts: _propTypes.default.func.isRequired,

  /**
   * Function to select a new account via modal
   */
  selectNewAccountViaModal: _propTypes.default.func.isRequired,

  /**
   * Native currency of current chain
   */
  nativeCurrency: _propTypes.default.string.isRequired,

  /**
   * A map of the last connected addresses
   */
  addressLastConnectedMap: _propTypes.default.object,

  /**
   * Function to cancel permission request
   */
  cancelPermissionsRequest: _propTypes.default.func.isRequired,

  /**
   * Permission request Id
   */
  permissionsRequestId: _propTypes.default.string.isRequired,

  /**
   * Currently selected account addresses
   */
  selectedAccountAddresses: _propTypes.default.object.isRequired,

  /**
   * Domain data used to display site-origin pill
   */
  targetSubjectMetadata: _propTypes.default.shape({
    extensionId: _propTypes.default.string,
    iconUrl: _propTypes.default.string,
    name: _propTypes.default.string,
    origin: _propTypes.default.string.isRequired,
    subjectType: _propTypes.default.string
  })
};
var _default = ChooseAccount;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\permissions-connect\\choose-account\\choose-account.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container.container.js", {"../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","./permission-page-container.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\permission-page-container\permission-page-container.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _selectors = require("../../../selectors");

var _permissionPageContainer = _interopRequireDefault(require("./permission-page-container.component"));

const mapStateToProps = (state, ownProps) => {
  const {
    selectedIdentities
  } = ownProps;
  const allIdentities = (0, _selectors.getMetaMaskIdentities)(state);
  const allIdentitiesSelected = Object.keys(selectedIdentities).length === Object.keys(allIdentities).length && selectedIdentities.length > 1;
  return {
    allIdentitiesSelected
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps)(_permissionPageContainer.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container-content\\index.js", {"./permission-page-container-content.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container-content\\permission-page-container-content.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\permission-page-container\permission-page-container-content\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _permissionPageContainerContent.default;
  }
});

var _permissionPageContainerContent = _interopRequireDefault(require("./permission-page-container-content.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container-content\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\qr-hardware-sign-request\\reader.js", {"../../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../base-reader":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\base-reader.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@keystonehq/bc-ur-registry-eth":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@keystonehq\\bc-ur-registry-eth\\dist\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","uuid":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\uuid\\dist\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\qr-hardware-popover\qr-hardware-sign-request\reader.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _bcUrRegistryEth = require("@keystonehq/bc-ur-registry-eth");

var uuid = _interopRequireWildcard(require("uuid"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _baseReader = _interopRequireDefault(require("../base-reader"));

var _useI18nContext = require("../../../../hooks/useI18nContext");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const Reader = ({
  submitQRHardwareSignature,
  cancelQRHardwareSignRequest,
  requestId,
  setErrorTitle
}) => {
  const t = (0, _useI18nContext.useI18nContext)();

  const cancel = () => {
    cancelQRHardwareSignRequest();
  };

  const handleSuccess = async ur => {
    if (ur.type === 'eth-signature') {
      const ethSignature = _bcUrRegistryEth.ETHSignature.fromCBOR(ur.cbor);

      const buffer = ethSignature.getRequestId();
      const signId = uuid.stringify(buffer);

      if (signId === requestId) {
        return await submitQRHardwareSignature(signId, ur.cbor.toString('hex'));
      }

      setErrorTitle(t('QRHardwareInvalidTransactionTitle'));
      throw new Error(t('QRHardwareMismatchedSignId'));
    } else {
      setErrorTitle(t('QRHardwareInvalidTransactionTitle'));
      throw new Error(t('unknownQrCode'));
    }
  };

  return /*#__PURE__*/_react.default.createElement(_baseReader.default, {
    isReadingWallet: false,
    handleCancel: cancel,
    handleSuccess: handleSuccess,
    setErrorTitle: setErrorTitle
  });
};

Reader.propTypes = {
  submitQRHardwareSignature: _propTypes.default.func.isRequired,
  cancelQRHardwareSignRequest: _propTypes.default.func.isRequired,
  requestId: _propTypes.default.string.isRequired,
  setErrorTitle: _propTypes.default.func.isRequired
};
var _default = Reader;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\qr-hardware-sign-request\\reader.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\qr-hardware-sign-request\\player.js", {"../../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../../ui/box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","../../../ui/page-container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\index.js","../../../ui/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@ngraveio/bc-ur":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@ngraveio\\bc-ur\\dist\\index.js","buffer":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\browserify\\node_modules\\buffer\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","qrcode.react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\qrcode.react\\lib\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\qr-hardware-popover\qr-hardware-sign-request\player.js
      return function (require, module, exports) {
(function (Buffer){(function (){
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _qrcode = _interopRequireDefault(require("qrcode.react"));

var _bcUr = require("@ngraveio/bc-ur");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _typography = _interopRequireDefault(require("../../../ui/typography"));

var _box = _interopRequireDefault(require("../../../ui/box"));

var _useI18nContext = require("../../../../hooks/useI18nContext");

var _designSystem = require("../../../../helpers/constants/design-system");

var _pageContainer = require("../../../ui/page-container");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const Player = ({
  type,
  cbor,
  cancelQRHardwareSignRequest,
  toRead
}) => {
  const t = (0, _useI18nContext.useI18nContext)();
  const urEncoder = (0, _react.useMemo)(() => new _bcUr.UREncoder(new _bcUr.UR(Buffer.from(cbor, 'hex'), type), 400), [cbor, type]);
  const [currentQRCode, setCurrentQRCode] = (0, _react.useState)(urEncoder.nextPart());
  (0, _react.useEffect)(() => {
    const id = setInterval(() => {
      setCurrentQRCode(urEncoder.nextPart());
    }, 100);
    return () => {
      clearInterval(id);
    };
  }, [urEncoder]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_box.default, null, /*#__PURE__*/_react.default.createElement(_typography.default, {
    align: _designSystem.TEXT_ALIGN.CENTER
  }, t('QRHardwareSignRequestSubtitle'))), /*#__PURE__*/_react.default.createElement(_box.default, {
    paddingTop: 4,
    paddingBottom: 4,
    display: _designSystem.DISPLAY.FLEX,
    alignItems: _designSystem.ALIGN_ITEMS.CENTER,
    flexDirection: _designSystem.FLEX_DIRECTION.COLUMN
  }, /*#__PURE__*/_react.default.createElement(_qrcode.default, {
    value: currentQRCode.toUpperCase(),
    size: 250
  })), /*#__PURE__*/_react.default.createElement(_box.default, {
    paddingBottom: 4,
    paddingLeft: 4,
    paddingRight: 4
  }, /*#__PURE__*/_react.default.createElement(_typography.default, {
    align: _designSystem.TEXT_ALIGN.CENTER
  }, t('QRHardwareSignRequestDescription'))), /*#__PURE__*/_react.default.createElement(_pageContainer.PageContainerFooter, {
    onCancel: cancelQRHardwareSignRequest,
    onSubmit: toRead,
    cancelText: t('QRHardwareSignRequestCancel'),
    submitText: t('QRHardwareSignRequestGetSignature'),
    submitButtonType: "confirm"
  }));
};

Player.propTypes = {
  type: _propTypes.default.string.isRequired,
  cbor: _propTypes.default.string.isRequired,
  cancelQRHardwareSignRequest: _propTypes.default.func.isRequired,
  toRead: _propTypes.default.func.isRequired
};
var _default = Player;
exports.default = _default;

}).call(this)}).call(this,require("buffer").Buffer)

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\qr-hardware-sign-request\\player.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\base-reader.js", {"../../../../app/scripts/lib/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\scripts\\lib\\util.js","../../../../shared/constants/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\app.js","../../../../shared/constants/time":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\time.js","../../../helpers/utils/webcam-utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\webcam-utils.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../ui/page-container/page-container-footer/page-container-footer.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-footer\\page-container-footer.component.js","./enhanced-reader":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\enhanced-reader.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@ngraveio/bc-ur":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@ngraveio\\bc-ur\\dist\\index.js","loglevel":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\loglevel\\lib\\loglevel.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\qr-hardware-popover\base-reader.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _loglevel = _interopRequireDefault(require("loglevel"));

var _bcUr = require("@ngraveio/bc-ur");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _util = require("../../../../app/scripts/lib/util");

var _app = require("../../../../shared/constants/app");

var _webcamUtils = _interopRequireDefault(require("../../../helpers/utils/webcam-utils"));

var _pageContainerFooter = _interopRequireDefault(require("../../ui/page-container/page-container-footer/page-container-footer.component"));

var _useI18nContext = require("../../../hooks/useI18nContext");

var _time = require("../../../../shared/constants/time");

var _enhancedReader = _interopRequireDefault(require("./enhanced-reader"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const READY_STATE = {
  ACCESSING_CAMERA: 'ACCESSING_CAMERA',
  NEED_TO_ALLOW_ACCESS: 'NEED_TO_ALLOW_ACCESS',
  READY: 'READY'
};

const BaseReader = ({
  isReadingWallet,
  handleCancel,
  handleSuccess,
  setErrorTitle
}) => {
  const t = (0, _useI18nContext.useI18nContext)();
  const [ready, setReady] = (0, _react.useState)(READY_STATE.ACCESSING_CAMERA);
  const [error, setError] = (0, _react.useState)(null);
  const [urDecoder, setURDecoder] = (0, _react.useState)(new _bcUr.URDecoder());
  let permissionChecker = null;
  const mounted = (0, _react.useRef)(false);

  const reset = () => {
    setReady(READY_STATE.ACCESSING_CAMERA);
    setError(null);
    setURDecoder(new _bcUr.URDecoder());
  };

  const checkEnvironment = async () => {
    try {
      const {
        environmentReady
      } = await _webcamUtils.default.checkStatus();

      if (!environmentReady && (0, _util.getEnvironmentType)() !== _app.ENVIRONMENT_TYPE_FULLSCREEN) {
        const currentUrl = new URL(window.location.href);
        const currentHash = currentUrl.hash;
        const currentRoute = currentHash ? currentHash.substring(1) : null;
        global.platform.openExtensionInBrowser(currentRoute);
      }
    } catch (e) {
      if (mounted.current) {
        setError(e);
      }
    } // initial attempt is required to trigger permission prompt
    // eslint-disable-next-line no-use-before-define


    return initCamera();
  };

  const checkPermissions = async () => {
    try {
      const {
        permissions
      } = await _webcamUtils.default.checkStatus();

      if (permissions) {
        // Let the video stream load first...
        await new Promise(resolve => setTimeout(resolve, _time.SECOND * 2));

        if (!mounted.current) {
          return;
        }

        setReady(READY_STATE.READY);
      } else if (mounted.current) {
        // Keep checking for permissions
        permissionChecker = setTimeout(checkPermissions, _time.SECOND);
        setReady(READY_STATE.NEED_TO_ALLOW_ACCESS);
      }
    } catch (e) {
      if (mounted.current) {
        setError(e);
      }
    }
  };

  const handleScan = data => {
    try {
      if (!data) {
        return;
      }

      urDecoder.receivePart(data);

      if (urDecoder.isComplete()) {
        const result = urDecoder.resultUR();
        handleSuccess(result).catch(setError);
      }
    } catch (e) {
      if (isReadingWallet) {
        setErrorTitle(t('QRHardwareUnknownQRCodeTitle'));
      } else {
        setErrorTitle(t('QRHardwareInvalidTransactionTitle'));
      }

      setError(new Error(t('unknownQrCode')));
    }
  };

  const initCamera = () => {
    try {
      checkPermissions();
    } catch (e) {
      if (!mounted.current) {
        return;
      }

      if (e.name === 'NotAllowedError') {
        _loglevel.default.info(`Permission denied: '${e}'`);

        setReady(READY_STATE.NEED_TO_ALLOW_ACCESS);
      } else {
        setError(e);
      }
    }
  };

  (0, _react.useEffect)(() => {
    mounted.current = true;
    checkEnvironment();
    return () => {
      mounted.current = false;
      clearTimeout(permissionChecker);
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  (0, _react.useEffect)(() => {
    if (ready === READY_STATE.READY) {
      initCamera();
    } else if (ready === READY_STATE.NEED_TO_ALLOW_ACCESS) {
      checkPermissions();
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [ready]);

  const tryAgain = () => {
    clearTimeout(permissionChecker);
    reset();
    checkEnvironment();
  };

  const renderError = () => {
    let title, msg;

    if (error.type === 'NO_WEBCAM_FOUND') {
      title = t('noWebcamFoundTitle');
      msg = t('noWebcamFound');
    } else if (error.message === t('unknownQrCode')) {
      if (isReadingWallet) {
        msg = t('QRHardwareUnknownWalletQRCode');
      } else {
        msg = t('unknownQrCode');
      }
    } else if (error.message === t('QRHardwareMismatchedSignId')) {
      msg = t('QRHardwareMismatchedSignId');
    } else {
      title = t('unknownCameraErrorTitle');
      msg = t('unknownCameraError');
    }

    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__image"
    }, /*#__PURE__*/_react.default.createElement("img", {
      src: "images/webcam.svg",
      width: "70",
      height: "70",
      alt: ""
    })), title ? /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__title"
    }, title) : null, /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__error"
    }, msg), /*#__PURE__*/_react.default.createElement(_pageContainerFooter.default, {
      onCancel: () => {
        setErrorTitle('');
        handleCancel();
      },
      onSubmit: () => {
        setErrorTitle('');
        tryAgain();
      },
      cancelText: t('cancel'),
      submitText: t('tryAgain'),
      submitButtonType: "confirm"
    }));
  };

  const renderVideo = () => {
    let message;

    if (ready === READY_STATE.ACCESSING_CAMERA) {
      message = t('accessingYourCamera');
    } else if (ready === READY_STATE.READY) {
      message = t('QRHardwareScanInstructions');
    } else if (ready === READY_STATE.NEED_TO_ALLOW_ACCESS) {
      message = t('youNeedToAllowCameraAccess');
    }

    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__content"
    }, /*#__PURE__*/_react.default.createElement(_enhancedReader.default, {
      handleScan: handleScan
    })), message && /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__status"
    }, message));
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "qr-scanner"
  }, error ? renderError() : renderVideo());
};

BaseReader.propTypes = {
  isReadingWallet: _propTypes.default.bool.isRequired,
  handleCancel: _propTypes.default.func.isRequired,
  handleSuccess: _propTypes.default.func.isRequired,
  setErrorTitle: _propTypes.default.func.isRequired
};
var _default = BaseReader;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\base-reader.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\identicon.component.js", {"../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../jazzicon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\jazzicon\\index.js","./blockieIdenticon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\blockieIdenticon\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\identicon\identicon.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _jazzicon = _interopRequireDefault(require("../jazzicon"));

var _util = require("../../../helpers/utils/util");

var _blockieIdenticon = _interopRequireDefault(require("./blockieIdenticon"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const getStyles = diameter => ({
  height: diameter,
  width: diameter,
  borderRadius: diameter / 2
});

class Identicon extends _react.PureComponent {
  renderImage() {
    const {
      className,
      diameter,
      alt,
      imageBorder,
      ipfsGateway
    } = this.props;
    let {
      image
    } = this.props;

    if (Array.isArray(image) && image.length) {
      image = image[0];
    }

    if (typeof image === 'string' && image.toLowerCase().startsWith('ipfs://')) {
      image = (0, _util.getAssetImageURL)(image, ipfsGateway);
    }

    return /*#__PURE__*/_react.default.createElement("img", {
      className: (0, _classnames.default)('identicon', className, {
        'identicon__image-border': imageBorder
      }),
      src: image,
      style: getStyles(diameter),
      alt: alt
    });
  }

  renderJazzicon() {
    const {
      address,
      className,
      diameter,
      alt,
      useTokenDetection,
      tokenList
    } = this.props;
    return /*#__PURE__*/_react.default.createElement(_jazzicon.default, {
      address: address,
      diameter: diameter,
      className: (0, _classnames.default)('identicon', className),
      style: getStyles(diameter),
      alt: alt,
      useTokenDetection: useTokenDetection,
      tokenList: tokenList
    });
  }

  renderBlockie() {
    const {
      address,
      className,
      diameter,
      alt
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('identicon', className),
      style: getStyles(diameter)
    }, /*#__PURE__*/_react.default.createElement(_blockieIdenticon.default, {
      address: address,
      diameter: diameter,
      alt: alt
    }));
  }

  render() {
    const {
      address,
      image,
      useBlockie,
      addBorder,
      diameter,
      useTokenDetection,
      tokenList
    } = this.props;
    const size = diameter + 8;

    if (image) {
      return this.renderImage();
    }

    if (address) {
      var _tokenList$tokenAddre;

      // token from dynamic api list is fetched when useTokenDetection is true
      // And since the token.address from allTokens is checksumaddress
      // tokenAddress have to be changed to lowercase when we are using dynamic list
      const tokenAddress = useTokenDetection ? address.toLowerCase() : address;

      if (tokenAddress && (_tokenList$tokenAddre = tokenList[tokenAddress]) !== null && _tokenList$tokenAddre !== void 0 && _tokenList$tokenAddre.iconUrl) {
        return this.renderJazzicon();
      }

      return /*#__PURE__*/_react.default.createElement("div", {
        className: (0, _classnames.default)({
          'identicon__address-wrapper': addBorder
        }),
        style: addBorder ? getStyles(size) : null
      }, useBlockie ? this.renderBlockie() : this.renderJazzicon());
    }

    return /*#__PURE__*/_react.default.createElement("div", {
      style: getStyles(diameter),
      className: "identicon__image-border"
    });
  }

}

exports.default = Identicon;
(0, _defineProperty2.default)(Identicon, "propTypes", {
  /**
   * Adds blue border around the Identicon used for selected account.
   * Increases the width and height of the Identicon by 8px
   */
  addBorder: _propTypes.default.bool,

  /**
   * Address used for generating random image
   */
  address: _propTypes.default.string,

  /**
   * Add custom css class
   */
  className: _propTypes.default.string,

  /**
   * Sets the width and height of the inner img element
   * If addBorder is true will increase components height and width by 8px
   */
  diameter: _propTypes.default.number,

  /**
   * Used as the image source of the Identicon
   */
  image: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),

  /**
   * Use the blockie type random image generator
   */
  useBlockie: _propTypes.default.bool,

  /**
   * The alt text of the image
   */
  alt: _propTypes.default.string,

  /**
   * Check if show image border
   */
  imageBorder: _propTypes.default.bool,

  /**
   * Check if use token detection
   */
  useTokenDetection: _propTypes.default.bool,

  /**
   * Add list of token in object
   */
  tokenList: _propTypes.default.object,

  /**
   * User preferred IPFS gateway
   */
  ipfsGateway: _propTypes.default.string
});
(0, _defineProperty2.default)(Identicon, "defaultProps", {
  addBorder: false,
  address: undefined,
  className: undefined,
  diameter: 46,
  image: undefined,
  useBlockie: false,
  alt: '',
  tokenList: {}
});


      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\identicon.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-tippy\\dist\\react-tippy.js", {"popper.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-tippy\\node_modules\\popper.js\\dist\\umd\\popper.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-tippy\dist\react-tippy.js
      return function (require, module, exports) {
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("popper.js"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define("reactTippy", ["react", "popper.js", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["reactTippy"] = factory(require("react"), require("popper.js"), require("react-dom"));
	else
		root["reactTippy"] = factory(root["React"], root["Popper"], root["ReactDOM"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_38__, __WEBPACK_EXTERNAL_MODULE_39__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 15);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var Browser = exports.Browser = {};

if (typeof window !== 'undefined') {
  Browser.SUPPORTED = 'requestAnimationFrame' in window;
  Browser.SUPPORTS_TOUCH = 'ontouchstart' in window;
  Browser.touch = false;
  Browser.dynamicInputDetection = true;
  // Chrome device/touch emulation can make this dynamic
  Browser.iOS = function () {
    return (/iPhone|iPad|iPod/.test(navigator.userAgent) && !window.MSStream
    );
  };
}

/**
* The global storage array which holds all data reference objects
* from every instance
* This allows us to hide tooltips from all instances, finding the ref when
* clicking on the body, and for followCursor
*/
var Store = exports.Store = [];

/**
* Selector constants used for grabbing elements
*/
var Selectors = exports.Selectors = {
  POPPER: '.tippy-popper',
  TOOLTIP: '.tippy-tooltip',
  CONTENT: '.tippy-tooltip-content',
  CIRCLE: '[x-circle]',
  ARROW: '[x-arrow]',
  TOOLTIPPED_EL: '[data-tooltipped]',
  CONTROLLER: '[data-tippy-controller]'
};

/**
* The default settings applied to each instance
*/
var Defaults = exports.Defaults = {
  html: false,
  position: 'top',
  animation: 'shift',
  animateFill: true,
  arrow: false,
  arrowSize: 'regular',
  delay: 0,
  trigger: 'mouseenter focus',
  duration: 350,
  interactive: false,
  interactiveBorder: 2,
  theme: 'dark',
  size: 'regular',
  distance: 10,
  offset: 0,
  hideOnClick: true,
  multiple: false,
  followCursor: false,
  inertia: false,
  flipDuration: 350,
  sticky: false,
  stickyDuration: 200,
  appendTo: function appendTo() {
    return document.body;
  },
  zIndex: 9999,
  touchHold: false,
  performance: false,
  dynamicTitle: false,
  useContext: false,
  reactInstance: undefined,
  popperOptions: {},
  open: undefined,
  onRequestClose: function onRequestClose() {}
};

/**
* The keys of the defaults object for reducing down into a new object
* Used in `getIndividualSettings()`
*/
var DefaultsKeys = exports.DefaultsKeys = Browser.SUPPORTED && Object.keys(Defaults);

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = prefix;
/**
* Returns the supported prefixed property - only `webkit` is needed, `moz`, `ms` and `o` are obsolete
* @param {String} property
* @return {String} - browser supported prefixed property
*/
function prefix(property) {
  var prefixes = [false, 'webkit'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var _prefix = prefixes[i];
    var prefixedProp = _prefix ? '' + _prefix + upperProp : property;
    if (typeof window.document.body.style[prefixedProp] !== 'undefined') {
      return prefixedProp;
    }
  }

  return null;
}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = find;
/**
* Ponyfill for Array.prototype.find
* @param {Array} arr
* @param {Function} checkFn
* @return item in the array
*/
function find(arr, checkFn) {
  if (Array.prototype.find) {
    return arr.find(checkFn);
  }

  // use `filter` as fallback
  return arr.filter(checkFn)[0];
}

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getCorePlacement;
/**
* Returns the non-shifted placement (e.g., 'bottom-start' => 'bottom')
* @param {String} placement
* @return {String}
*/
function getCorePlacement(placement) {
  return placement.replace(/-.+/, '');
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = closest;

var _matches = __webpack_require__(8);

/**
* Ponyfill to get the closest parent element
* @param {Element} element - child of parent to be returned
* @param {String} parentSelector - selector to match the parent if found
* @return {Element}
*/
function closest(element, parentSelector) {
  var _closest = Element.prototype.closest || function (selector) {
    var el = this;
    while (el) {
      if (_matches.matches.call(el, selector)) {
        return el;
      }
      el = el.parentElement;
    }
  };

  return _closest.call(element, parentSelector);
}

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defer;
/**
* Waits until next repaint to execute a fn
* @param {Function} fn
*/
function defer(fn) {
  window.requestAnimationFrame(function () {
    setTimeout(fn, 0);
  });
}

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getInnerElements;

var _globals = __webpack_require__(0);

/**
* Returns inner elements of the popper element
* @param {Element} popper
* @return {Object}
*/
function getInnerElements(popper) {
  return {
    tooltip: popper.querySelector(_globals.Selectors.TOOLTIP),
    circle: popper.querySelector(_globals.Selectors.CIRCLE),
    content: popper.querySelector(_globals.Selectors.CONTENT)
  };
}

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isVisible;
/**
* Determines if a popper is currently visible
* @param {Element} popper
* @return {Boolean}
*/
function isVisible(popper) {
  return popper.style.visibility === 'visible';
}

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
function defaultMatchSelector(s) {
  var matches = (this.document || this.ownerDocument).querySelectorAll(s),
      i = matches.length;
  while (--i >= 0 && matches.item(i) !== this) {}
  return i > -1;
}

var matches = exports.matches = typeof window === 'undefined' ? defaultMatchSelector : Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || defaultMatchSelector;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(13);

var _react2 = _interopRequireDefault(_react);

var _tippy = __webpack_require__(30);

var _tippy2 = _interopRequireDefault(_tippy);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultProps = {
  html: null,
  position: 'top',
  animation: 'shift',
  animateFill: true,
  arrow: false,
  delay: 0,
  hideDelay: 0,
  trigger: 'mouseenter focus',
  duration: 375,
  hideDuration: 375,
  interactive: false,
  interactiveBorder: 2,
  theme: 'dark',
  offset: 0,
  hideOnClick: true,
  multiple: false,
  followCursor: false,
  inertia: false,
  popperOptions: {},
  onShow: function onShow() {},
  onShown: function onShown() {},
  onHide: function onHide() {},
  onHidden: function onHidden() {},
  disabled: false,
  arrowSize: 'regular',
  size: 'regular',
  className: '',
  style: {},
  distance: 10,
  onRequestClose: function onRequestClose() {},
  sticky: false,
  stickyDuration: 200,
  touchHold: false,
  unmountHTMLWhenHide: false
};

var propKeys = Object.keys(defaultProps);

var detectPropsChanged = function detectPropsChanged(props, prevProps) {
  var result = [];
  propKeys.forEach(function (key) {
    if (props[key] !== prevProps[key]) {
      result.push(key);
    }
  });
  return result;
};

var Tooltip = function (_Component) {
  _inherits(Tooltip, _Component);

  function Tooltip(props) {
    _classCallCheck(this, Tooltip);

    var _this = _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call(this, props));

    _this.initTippy = _this._initTippy.bind(_this);
    _this.destroyTippy = _this._destroyTippy.bind(_this);
    _this.updateTippy = _this._updateTippy.bind(_this);
    _this.updateReactDom = _this._updateReactDom.bind(_this);
    _this.showTooltip = _this._showTooltip.bind(_this);
    _this.hideTooltip = _this._hideTooltip.bind(_this);
    _this.updateSettings = _this._updateSettings.bind(_this);
    return _this;
  }

  _createClass(Tooltip, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      this.initTippy();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      this.destroyTippy();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      // enable and disabled
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.props.disabled === false && prevProps.disabled === true) {
        this.updateSettings('disabled', false);
        this.destroyTippy();
        this.initTippy();
        return;
      }

      if (this.props.disabled === true && prevProps.disabled === false) {
        this.updateSettings('disabled', true);
        this.destroyTippy();
        return;
      }

      // open
      if (this.props.open === true && !prevProps.open) {
        this.updateSettings('open', true);
        setTimeout(function () {
          _this2.showTooltip();
        }, 0);
      }
      if (this.props.open === false && prevProps.open === true) {
        this.updateSettings('open', false);
        this.hideTooltip();
      }

      if (this.props.html !== prevProps.html) {
        this.updateReactDom();
      }

      // Update content
      if (this.props.title !== prevProps.title) {
        this.updateTippy();
      }

      // update otherProps
      var propChanges = detectPropsChanged(this.props, prevProps);
      propChanges.forEach(function (key) {
        _this2.updateSettings(key, _this2.props[key]);
      });
    }
  }, {
    key: '_showTooltip',
    value: function _showTooltip() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.tippy.show(popper, this.props.duration);
      }
    }
  }, {
    key: '_hideTooltip',
    value: function _hideTooltip() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.tippy.hide(popper, this.props.hideDuration);
      }
    }
  }, {
    key: '_updateSettings',
    value: function _updateSettings(name, value) {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.tippy.updateSettings(popper, name, value);
      }
    }
  }, {
    key: '_updateReactDom',
    value: function _updateReactDom() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        this.updateSettings('reactDOM', this.props.html);
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        var isVisible = popper.style.visibility === 'visible' || this.props.open;
        if (isVisible) {
          this.tippy.updateForReact(popper, this.props.html);
        }
      }
    }
  }, {
    key: '_updateTippy',
    value: function _updateTippy() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.tippy.update(popper);
      }
    }
  }, {
    key: '_initTippy',
    value: function _initTippy() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (!this.props.disabled) {
        this.tooltipDOM.setAttribute('title', this.props.title);
        this.tippy = (0, _tippy2.default)(this.tooltipDOM, {
          disabled: this.props.disabled,
          position: this.props.position,
          animation: this.props.animation,
          animateFill: this.props.animateFill,
          arrow: this.props.arrow,
          arrowSize: this.props.arrowSize,
          delay: this.props.delay,
          hideDelay: this.props.hideDelay,
          trigger: this.props.trigger,
          duration: this.props.duration,
          hideDuration: this.props.hideDuration,
          interactive: this.props.interactive,
          interactiveBorder: this.props.interactiveBorder,
          theme: this.props.theme,
          offset: this.props.offset,
          hideOnClick: this.props.hideOnClick,
          multiple: this.props.multiple,
          size: this.props.size,
          followCursor: this.props.followCursor,
          inertia: this.props.inertia,
          popperOptions: this.props.popperOptions,
          onShow: this.props.onShow,
          onShown: this.props.onShown,
          onHide: this.props.onHide,
          onHidden: this.props.onHidden,
          distance: this.props.distance,
          reactDOM: this.props.html,
          unmountHTMLWhenHide: this.props.unmountHTMLWhenHide,
          open: this.props.open,
          sticky: this.props.sticky,
          stickyDuration: this.props.stickyDuration,
          touchHold: this.props.touchHold,
          onRequestClose: this.props.onRequestClose,
          useContext: this.props.useContext,
          reactInstance: this.props.useContext ? this : undefined,
          performance: true,
          html: this.props.rawTemplate ? this.props.rawTemplate : undefined
        });
        if (this.props.open) {
          this.showTooltip();
        }
      } else {
        this.tippy = null;
      }
    }
  }, {
    key: '_destroyTippy',
    value: function _destroyTippy() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.updateSettings('open', false);
        this.tippy.hide(popper, 0);
        this.tippy.destroy(popper);
        this.tippy = null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        'div',
        {
          ref: function ref(tooltip) {
            _this3.tooltipDOM = tooltip;
          },
          title: this.props.title,
          className: this.props.className,
          tabIndex: this.props.tabIndex,
          style: _extends({
            display: 'inline'
          }, this.props.style)
        },
        this.props.children
      );
    }
  }]);

  return Tooltip;
}(_react.Component);

Tooltip.defaultProps = defaultProps;

exports.default = Tooltip;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = followCursorHandler;

var _globals = __webpack_require__(0);

var _getCorePlacement = __webpack_require__(3);

var _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);

var _find = __webpack_require__(2);

var _find2 = _interopRequireDefault(_find);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _closest = __webpack_require__(4);

var _closest2 = _interopRequireDefault(_closest);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Mousemove event listener callback method for follow cursor setting
* @param {MouseEvent} e
*/
function followCursorHandler(e) {
  var _this = this;

  var refData = (0, _find2.default)(_globals.Store, function (refData) {
    return refData.el === _this;
  });

  var popper = refData.popper,
      offset = refData.settings.offset;


  var position = (0, _getCorePlacement2.default)(popper.getAttribute('x-placement'));
  var halfPopperWidth = Math.round(popper.offsetWidth / 2);
  var halfPopperHeight = Math.round(popper.offsetHeight / 2);
  var viewportPadding = 5;
  var pageWidth = document.documentElement.offsetWidth || document.body.offsetWidth;

  var pageX = e.pageX,
      pageY = e.pageY;


  var x = void 0,
      y = void 0;

  switch (position) {
    case 'top':
      x = pageX - halfPopperWidth + offset;
      y = pageY - 2.25 * halfPopperHeight;
      break;
    case 'left':
      x = pageX - 2 * halfPopperWidth - 10;
      y = pageY - halfPopperHeight + offset;
      break;
    case 'right':
      x = pageX + halfPopperHeight;
      y = pageY - halfPopperHeight + offset;
      break;
    case 'bottom':
      x = pageX - halfPopperWidth + offset;
      y = pageY + halfPopperHeight / 1.5;
      break;
  }

  var isRightOverflowing = pageX + viewportPadding + halfPopperWidth + offset > pageWidth;
  var isLeftOverflowing = pageX - viewportPadding - halfPopperWidth + offset < 0;

  // Prevent left/right overflow
  if (position === 'top' || position === 'bottom') {
    if (isRightOverflowing) {
      x = pageWidth - viewportPadding - 2 * halfPopperWidth;
    }

    if (isLeftOverflowing) {
      x = viewportPadding;
    }
  }

  popper.style[(0, _prefix2.default)('transform')] = 'translate3d(' + x + 'px, ' + y + 'px, 0)';
}

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getOffsetDistanceInPx;

var _globals = __webpack_require__(0);

/**
* Returns the distance taking into account the default distance due to
* the transform: translate setting in CSS
* @param {Number} distance
* @return {String}
*/
function getOffsetDistanceInPx(distance) {
  return -(distance - _globals.Defaults.distance) + 'px';
}

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = removeTitle;
/**
* Removes the title from the tooltipped element, setting `data-original-title`
* appropriately
* @param {Element} el
*/
function removeTitle(el) {
  var title = el.getAttribute('title');

  // Only set `data-original-title` attr if there is a title
  if (title) {
    el.setAttribute('data-original-title', title);
  }

  el.removeAttribute('title');
}

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(13);

var _react2 = _interopRequireDefault(_react);

var _component = __webpack_require__(9);

var _component2 = _interopRequireDefault(_component);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var withTooltip = function withTooltip(Component) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return function (_ref) {
    var props = _objectWithoutProperties(_ref, []);

    return _react2.default.createElement(
      _component2.default,
      options,
      _react2.default.createElement(Component, props)
    );
  };
};

exports.default = withTooltip;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withTooltip = exports.Tooltip = undefined;

var _component = __webpack_require__(9);

var _component2 = _interopRequireDefault(_component);

var _hoc = __webpack_require__(14);

var _hoc2 = _interopRequireDefault(_hoc);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Tooltip = _component2.default;
exports.withTooltip = _hoc2.default;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = bindEventListeners;

var _globals = __webpack_require__(0);

var _hideAllPoppers = __webpack_require__(25);

var _hideAllPoppers2 = _interopRequireDefault(_hideAllPoppers);

var _closest = __webpack_require__(4);

var _closest2 = _interopRequireDefault(_closest);

var _find = __webpack_require__(2);

var _find2 = _interopRequireDefault(_find);

var _matches = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Adds the needed event listeners
*/
function bindEventListeners() {
  var touchHandler = function touchHandler() {
    _globals.Browser.touch = true;

    if (_globals.Browser.iOS()) {
      document.body.classList.add('tippy-touch');
    }

    if (_globals.Browser.dynamicInputDetection && window.performance) {
      document.addEventListener('mousemove', mousemoveHandler);
    }
  };

  var mousemoveHandler = function () {
    var time = void 0;

    return function () {
      var now = performance.now();

      // Chrome 60+ is 1 mousemove per rAF, use 20ms time difference
      if (now - time < 20) {
        _globals.Browser.touch = false;
        document.removeEventListener('mousemove', mousemoveHandler);
        if (!_globals.Browser.iOS()) {
          document.body.classList.remove('tippy-touch');
        }
      }

      time = now;
    };
  }();

  var clickHandler = function clickHandler(event) {
    // Simulated events dispatched on the document
    if (!(event.target instanceof Element)) {
      return (0, _hideAllPoppers2.default)();
    }

    var el = (0, _closest2.default)(event.target, _globals.Selectors.TOOLTIPPED_EL);
    var popper = (0, _closest2.default)(event.target, _globals.Selectors.POPPER);

    if (popper) {
      var ref = (0, _find2.default)(_globals.Store, function (ref) {
        return ref.popper === popper;
      });
      var interactive = ref.settings.interactive;

      if (interactive) return;
    }

    if (el) {
      var _ref = (0, _find2.default)(_globals.Store, function (ref) {
        return ref.el === el;
      });
      var _ref$settings = _ref.settings,
          hideOnClick = _ref$settings.hideOnClick,
          multiple = _ref$settings.multiple,
          trigger = _ref$settings.trigger;

      // Hide all poppers except the one belonging to the element that was clicked IF
      // `multiple` is false AND they are a touch user, OR
      // `multiple` is false AND it's triggered by a click

      if (!multiple && _globals.Browser.touch || !multiple && trigger.indexOf('click') !== -1) {
        return (0, _hideAllPoppers2.default)(_ref);
      }

      // If hideOnClick is not strictly true or triggered by a click don't hide poppers
      if (hideOnClick !== true || trigger.indexOf('click') !== -1) return;
    }

    // Don't trigger a hide for tippy controllers, and don't needlessly run loop
    if ((0, _closest2.default)(event.target, _globals.Selectors.CONTROLLER) || !document.querySelector(_globals.Selectors.POPPER)) return;

    (0, _hideAllPoppers2.default)();
  };

  var blurHandler = function blurHandler(event) {
    var _document = document,
        el = _document.activeElement;

    if (el && el.blur && _matches.matches.call(el, _globals.Selectors.TOOLTIPPED_EL)) {
      el.blur();
    }
  };

  // Hook events
  document.addEventListener('click', clickHandler);
  document.addEventListener('touchstart', touchHandler);
  window.addEventListener('blur', blurHandler);

  if (!_globals.Browser.SUPPORTS_TOUCH && (navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)) {
    document.addEventListener('pointerdown', touchHandler);
  }
}

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createPopperElement;

var _getCorePlacement = __webpack_require__(3);

var _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);

var _getOffsetDistanceInPx = __webpack_require__(11);

var _getOffsetDistanceInPx2 = _interopRequireDefault(_getOffsetDistanceInPx);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Creates a popper element then returns it
* @param {Number} id - the popper id
* @param {String} title - the tooltip's `title` attribute
* @param {Object} settings - individual settings
* @return {Element} - the popper element
*/
function createPopperElement(id, title, settings) {
  var position = settings.position,
      distance = settings.distance,
      arrow = settings.arrow,
      animateFill = settings.animateFill,
      inertia = settings.inertia,
      animation = settings.animation,
      arrowSize = settings.arrowSize,
      size = settings.size,
      theme = settings.theme,
      html = settings.html,
      zIndex = settings.zIndex,
      interactive = settings.interactive;


  var popper = document.createElement('div');
  popper.setAttribute('class', 'tippy-popper');
  popper.setAttribute('role', 'tooltip');
  popper.setAttribute('aria-hidden', 'true');
  popper.setAttribute('id', 'tippy-tooltip-' + id);
  popper.style.zIndex = zIndex;

  var tooltip = document.createElement('div');
  tooltip.setAttribute('class', 'tippy-tooltip tippy-tooltip--' + size + ' leave');
  tooltip.setAttribute('data-animation', animation);

  theme.split(' ').forEach(function (t) {
    tooltip.classList.add(t + '-theme');
  });

  if (arrow) {
    // Add an arrow
    var _arrow = document.createElement('div');
    _arrow.setAttribute('class', 'arrow-' + arrowSize);
    _arrow.setAttribute('x-arrow', '');
    tooltip.appendChild(_arrow);
  }

  if (animateFill) {
    // Create animateFill circle element for animation
    tooltip.setAttribute('data-animatefill', '');
    var circle = document.createElement('div');
    circle.setAttribute('class', 'leave');
    circle.setAttribute('x-circle', '');
    tooltip.appendChild(circle);
  }

  if (inertia) {
    // Change transition timing function cubic bezier
    tooltip.setAttribute('data-inertia', '');
  }

  if (interactive) {
    tooltip.setAttribute('data-interactive', '');
  }

  // Tooltip content (text or HTML)
  var content = document.createElement('div');
  content.setAttribute('class', 'tippy-tooltip-content');

  if (html) {
    var templateId = void 0;

    if (html instanceof Element) {
      content.appendChild(html);
      templateId = '#' + html.id || 'tippy-html-template';
    } else {
      content.innerHTML = document.getElementById(html.replace('#', '')).innerHTML;
      templateId = html;
    }

    popper.classList.add('html-template');
    interactive && popper.setAttribute('tabindex', '-1');
    tooltip.setAttribute('data-template-id', templateId);
  } else {
    content.innerHTML = title;
  }

  // Init distance. Further updates are made in the popper instance's `onUpdate()` method
  tooltip.style[(0, _getCorePlacement2.default)(position)] = (0, _getOffsetDistanceInPx2.default)(distance);

  tooltip.appendChild(content);
  popper.appendChild(tooltip);

  return popper;
}

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = createPopperInstance;

var _popper = __webpack_require__(38);

var _popper2 = _interopRequireDefault(_popper);

var _defer = __webpack_require__(5);

var _defer2 = _interopRequireDefault(_defer);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _getCorePlacement = __webpack_require__(3);

var _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);

var _getInnerElements2 = __webpack_require__(6);

var _getInnerElements3 = _interopRequireDefault(_getInnerElements2);

var _getOffsetDistanceInPx = __webpack_require__(11);

var _getOffsetDistanceInPx2 = _interopRequireDefault(_getOffsetDistanceInPx);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Creates a new popper instance
* @param {Object} data
* @return {Object} - the popper instance
*/
function createPopperInstance(data) {
  var el = data.el,
      popper = data.popper,
      _data$settings = data.settings,
      position = _data$settings.position,
      popperOptions = _data$settings.popperOptions,
      offset = _data$settings.offset,
      distance = _data$settings.distance,
      flipDuration = _data$settings.flipDuration;

  var _getInnerElements = (0, _getInnerElements3.default)(popper),
      tooltip = _getInnerElements.tooltip;

  var config = _extends({
    placement: position
  }, popperOptions || {}, {
    modifiers: _extends({}, popperOptions ? popperOptions.modifiers : {}, {
      flip: _extends({
        padding: distance + 5 /* 5px from viewport boundary */
      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.flip : {}),
      offset: _extends({
        offset: offset
      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.offset : {})
    }),
    onUpdate: function onUpdate() {
      var styles = tooltip.style;
      styles.top = '';
      styles.bottom = '';
      styles.left = '';
      styles.right = '';
      styles[(0, _getCorePlacement2.default)(popper.getAttribute('x-placement'))] = (0, _getOffsetDistanceInPx2.default)(distance);
    }
  });

  // Update the popper's position whenever its content changes
  // Not supported in IE10 unless polyfilled
  if (window.MutationObserver) {
    var styles = popper.style;

    var observer = new MutationObserver(function () {
      styles[(0, _prefix2.default)('transitionDuration')] = '0ms';
      data.popperInstance.update();
      (0, _defer2.default)(function () {
        styles[(0, _prefix2.default)('transitionDuration')] = flipDuration + 'ms';
      });
    });

    observer.observe(popper, {
      childList: true,
      subtree: true,
      characterData: true
    });

    data._mutationObserver = observer;
  }

  return new _popper2.default(el, popper, config);
}

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createTooltips;

var _getIndividualSettings = __webpack_require__(24);

var _getIndividualSettings2 = _interopRequireDefault(_getIndividualSettings);

var _createPopperElement = __webpack_require__(17);

var _createPopperElement2 = _interopRequireDefault(_createPopperElement);

var _createTrigger = __webpack_require__(20);

var _createTrigger2 = _interopRequireDefault(_createTrigger);

var _getEventListenerHandlers = __webpack_require__(23);

var _getEventListenerHandlers2 = _interopRequireDefault(_getEventListenerHandlers);

var _evaluateSettings = __webpack_require__(21);

var _evaluateSettings2 = _interopRequireDefault(_evaluateSettings);

var _removeTitle = __webpack_require__(12);

var _removeTitle2 = _interopRequireDefault(_removeTitle);

var _globals = __webpack_require__(0);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var idCounter = 1;

/**
* Creates tooltips for all el elements that match the instance's selector
* @param {Element[]} els
* @return {Object[]} Array of ref data objects
*/
function createTooltips(els) {
  var _this = this;

  return els.reduce(function (a, el) {
    var id = idCounter;

    var settings = (0, _evaluateSettings2.default)(_this.settings.performance ? _this.settings : (0, _getIndividualSettings2.default)(el, _this.settings));

    var html = settings.html,
        trigger = settings.trigger,
        touchHold = settings.touchHold;


    var title = el.getAttribute('title');
    if (!title && !html) return a;

    el.setAttribute('data-tooltipped', '');
    el.setAttribute('aria-describedby', 'tippy-tooltip-' + id);
    (0, _removeTitle2.default)(el);

    var popper = (0, _createPopperElement2.default)(id, title, settings);
    var handlers = _getEventListenerHandlers2.default.call(_this, el, popper, settings);

    var listeners = [];

    trigger.trim().split(' ').forEach(function (event) {
      return listeners = listeners.concat((0, _createTrigger2.default)(event, el, handlers, touchHold));
    });

    a.push({
      id: id,
      el: el,
      popper: popper,
      settings: settings,
      listeners: listeners,
      tippyInstance: _this
    });

    idCounter++;

    return a;
  }, []);
}

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createTrigger;

var _globals = __webpack_require__(0);

/**
* Creates a trigger
* @param {Object} event - the custom event specified in the `trigger` setting
* @param {Element} el - tooltipped element
* @param {Object} handlers - the handlers for each listener
* @param {Boolean} touchHold
* @return {Array} - array of listener objects
*/
function createTrigger(event, el, handlers, touchHold) {
  var listeners = [];

  if (event === 'manual') return listeners;

  // Enter
  el.addEventListener(event, handlers.handleTrigger);
  listeners.push({
    event: event,
    handler: handlers.handleTrigger
  });

  // Leave
  if (event === 'mouseenter') {
    if (_globals.Browser.SUPPORTS_TOUCH && touchHold) {
      el.addEventListener('touchstart', handlers.handleTrigger);
      listeners.push({
        event: 'touchstart',
        handler: handlers.handleTrigger
      });
      el.addEventListener('touchend', handlers.handleMouseleave);
      listeners.push({
        event: 'touchend',
        handler: handlers.handleMouseleave
      });
    }

    el.addEventListener('mouseleave', handlers.handleMouseleave);
    listeners.push({
      event: 'mouseleave',
      handler: handlers.handleMouseleave
    });
  }

  if (event === 'focus') {
    el.addEventListener('blur', handlers.handleBlur);
    listeners.push({
      event: 'blur',
      handler: handlers.handleBlur
    });
  }

  return listeners;
}

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = evaluateSettings;
/**
* Evaluates/modifies the settings object for appropriate behavior
* @param {Object} settings
* @return {Object} modified/evaluated settings
*/
function evaluateSettings(settings) {
  // animateFill is disabled if an arrow is true
  if (settings.arrow) {
    settings.animateFill = false;
  }

  // reassign appendTo into the result of evaluating appendTo
  // if it's set as a function instead of Element
  if (settings.appendTo && typeof settings.appendTo === 'function') {
    settings.appendTo = settings.appendTo();
  }

  return settings;
}

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getArrayOfElements;
/**
* Returns an array of elements based on the selector input
* @param {String|Element|Element[]} selector
* @return {Element[]}
*/
function getArrayOfElements(selector) {
  if (selector instanceof Element) {
    return [selector];
  }

  if (Array.isArray(selector)) {
    return selector;
  }

  return [].slice.call(document.querySelectorAll(selector));
}

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getEventListenerHandlers;

var _globals = __webpack_require__(0);

var _isVisible = __webpack_require__(7);

var _isVisible2 = _interopRequireDefault(_isVisible);

var _closest = __webpack_require__(4);

var _closest2 = _interopRequireDefault(_closest);

var _cursorIsOutsideInteractiveBorder = __webpack_require__(32);

var _cursorIsOutsideInteractiveBorder2 = _interopRequireDefault(_cursorIsOutsideInteractiveBorder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Returns relevant listener callbacks for each ref
* @param {Element} el
* @param {Element} popper
* @param {Object} settings
* @return {Object} - relevant listener handlers
*/
function getEventListenerHandlers(el, popper, settings) {
  var _this = this;

  var position = settings.position,
      delay = settings.delay,
      duration = settings.duration,
      interactive = settings.interactive,
      interactiveBorder = settings.interactiveBorder,
      distance = settings.distance,
      hideOnClick = settings.hideOnClick,
      trigger = settings.trigger,
      touchHold = settings.touchHold,
      touchWait = settings.touchWait;


  var showDelay = void 0,
      hideDelay = void 0;

  var clearTimeouts = function clearTimeouts() {
    clearTimeout(showDelay);
    clearTimeout(hideDelay);
  };

  var _show = function _show() {
    clearTimeouts();

    // Not hidden. For clicking when it also has a `focus` event listener
    if ((0, _isVisible2.default)(popper)) return;

    var _delay = Array.isArray(delay) ? delay[0] : delay;

    if (delay) {
      showDelay = setTimeout(function () {
        return _this.show(popper);
      }, _delay);
    } else {
      _this.show(popper);
    }
  };

  var show = function show(event) {
    return _this.callbacks.wait ? _this.callbacks.wait.call(popper, _show, event) : _show();
  };

  var hide = function hide() {
    clearTimeouts();

    var _delay = Array.isArray(delay) ? delay[1] : delay;

    if (delay) {
      hideDelay = setTimeout(function () {
        return _this.hide(popper);
      }, _delay);
    } else {
      _this.hide(popper);
    }
  };

  var handleTrigger = function handleTrigger(event) {
    var mouseenterTouch = event.type === 'mouseenter' && _globals.Browser.SUPPORTS_TOUCH && _globals.Browser.touch;

    if (mouseenterTouch && touchHold) return;

    // Toggle show/hide when clicking click-triggered tooltips
    var isClick = event.type === 'click';
    var isNotPersistent = hideOnClick !== 'persistent';

    isClick && (0, _isVisible2.default)(popper) && isNotPersistent ? hide() : show(event);

    if (mouseenterTouch && _globals.Browser.iOS() && el.click) {
      el.click();
    }
  };

  var handleMouseleave = function handleMouseleave(event) {

    // Don't fire 'mouseleave', use the 'touchend'
    if (event.type === 'mouseleave' && _globals.Browser.SUPPORTS_TOUCH && _globals.Browser.touch && touchHold) {
      return;
    }

    if (interactive) {
      // Temporarily handle mousemove to check if the mouse left somewhere
      // other than its popper
      var handleMousemove = function handleMousemove(event) {

        var triggerHide = function triggerHide() {
          document.body.removeEventListener('mouseleave', hide);
          document.removeEventListener('mousemove', handleMousemove);
          hide();
        };

        var closestTooltippedEl = (0, _closest2.default)(event.target, _globals.Selectors.TOOLTIPPED_EL);

        var isOverPopper = (0, _closest2.default)(event.target, _globals.Selectors.POPPER) === popper;
        var isOverEl = closestTooltippedEl === el;
        var isClickTriggered = trigger.indexOf('click') !== -1;
        var isOverOtherTooltippedEl = closestTooltippedEl && closestTooltippedEl !== el;

        if (isOverOtherTooltippedEl) {
          return triggerHide();
        }

        if (isOverPopper || isOverEl || isClickTriggered) return;

        if ((0, _cursorIsOutsideInteractiveBorder2.default)(event, popper, settings)) {
          triggerHide();
        }
      };

      document.body.addEventListener('mouseleave', hide);
      document.addEventListener('mousemove', handleMousemove);

      return;
    }

    // If it's not interactive, just hide it
    hide();
  };

  var handleBlur = function handleBlur(event) {
    // Ignore blur on touch devices, if there is no `relatedTarget`, hide
    // If the related target is a popper, ignore
    if (!event.relatedTarget || _globals.Browser.touch) return;
    if ((0, _closest2.default)(event.relatedTarget, _globals.Selectors.POPPER)) return;

    hide();
  };

  return {
    handleTrigger: handleTrigger,
    handleMouseleave: handleMouseleave,
    handleBlur: handleBlur
  };
}

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getIndividualSettings;

var _globals = __webpack_require__(0);

/**
* Returns an object of settings to override global settings
* @param {Element} el - the tooltipped element
* @param {Object} instanceSettings
* @return {Object} - individual settings
*/
function getIndividualSettings(el, instanceSettings) {
  var settings = _globals.DefaultsKeys.reduce(function (acc, key) {
    var val = el.getAttribute('data-' + key.toLowerCase()) || instanceSettings[key];

    // Convert strings to booleans
    if (val === 'false') val = false;
    if (val === 'true') val = true;

    // Convert number strings to true numbers
    if (isFinite(val) && !isNaN(parseFloat(val))) {
      val = parseFloat(val);
    }

    // Convert array strings to actual arrays
    if (typeof val === 'string' && val.trim().charAt(0) === '[') {
      val = JSON.parse(val);
    }

    acc[key] = val;

    return acc;
  }, {});

  return Object.assign({}, instanceSettings, settings);
}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hideAllPoppers;

var _globals = __webpack_require__(0);

/**
* Hides all poppers
* @param {Object} exclude - refData to exclude if needed
*/
function hideAllPoppers(exclude) {
  _globals.Store.forEach(function (refData) {
    var popper = refData.popper,
        tippyInstance = refData.tippyInstance,
        _refData$settings = refData.settings,
        appendTo = _refData$settings.appendTo,
        hideOnClick = _refData$settings.hideOnClick,
        trigger = _refData$settings.trigger;

    // Don't hide already hidden ones

    if (!appendTo.contains(popper)) return;

    // hideOnClick can have the truthy value of 'persistent', so strict check is needed
    var isHideOnClick = hideOnClick === true || trigger.indexOf('focus') !== -1;
    var isNotCurrentRef = !exclude || popper !== exclude.popper;

    if (isHideOnClick && isNotCurrentRef) {
      refData.settings.onRequestClose();
      tippyInstance.hide(popper);
    }
  });
}

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = init;

var _bindEventListeners = __webpack_require__(16);

var _bindEventListeners2 = _interopRequireDefault(_bindEventListeners);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* To run a single time, once DOM is presumed to be ready
* @return {Boolean} whether the function has run or not
*/
function init() {
  if (init.done) return false;
  init.done = true;

  (0, _bindEventListeners2.default)();

  return true;
}

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = makeSticky;

var _defer = __webpack_require__(5);

var _defer2 = _interopRequireDefault(_defer);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _isVisible = __webpack_require__(7);

var _isVisible2 = _interopRequireDefault(_isVisible);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Updates a popper's position on each animation frame to make it stick to a moving element
* @param {Object} refData
*/
function makeSticky(refData) {
  var popper = refData.popper,
      popperInstance = refData.popperInstance,
      stickyDuration = refData.settings.stickyDuration;


  var applyTransitionDuration = function applyTransitionDuration() {
    return popper.style[(0, _prefix2.default)('transitionDuration')] = stickyDuration + 'ms';
  };

  var removeTransitionDuration = function removeTransitionDuration() {
    return popper.style[(0, _prefix2.default)('transitionDuration')] = '';
  };

  var updatePosition = function updatePosition() {
    popperInstance && popperInstance.scheduleUpdate();

    applyTransitionDuration();

    (0, _isVisible2.default)(popper) ? window.requestAnimationFrame(updatePosition) : removeTransitionDuration();
  };

  // Wait until Popper's position has been updated initially
  (0, _defer2.default)(updatePosition);
}

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mountPopper;

var _globals = __webpack_require__(0);

var _followCursorHandler = __webpack_require__(10);

var _followCursorHandler2 = _interopRequireDefault(_followCursorHandler);

var _createPopperInstance = __webpack_require__(18);

var _createPopperInstance2 = _interopRequireDefault(_createPopperInstance);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Appends the popper and creates a popper instance if one does not exist
* Also updates its position if need be and enables event listeners
* @param {Object} data -  the element/popper reference data
*/
function mountPopper(data) {
  var el = data.el,
      popper = data.popper,
      _data$settings = data.settings,
      appendTo = _data$settings.appendTo,
      followCursor = _data$settings.followCursor;

  // Already on the DOM

  if (appendTo.contains(popper)) return;

  appendTo.appendChild(popper);

  if (!data.popperInstance) {
    data.popperInstance = (0, _createPopperInstance2.default)(data);
  } else {
    data.popperInstance.update();
    if (!followCursor || _globals.Browser.touch) {
      data.popperInstance.enableEventListeners();
    }
  }

  // Since touch is determined dynamically, followCursor is set on mount
  if (followCursor && !_globals.Browser.touch) {
    el.addEventListener('mousemove', _followCursorHandler2.default);
    data.popperInstance.disableEventListeners();
  }
}

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onTransitionEnd;

var _globals = __webpack_require__(0);

var _getInnerElements2 = __webpack_require__(6);

var _getInnerElements3 = _interopRequireDefault(_getInnerElements2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Prepares the callback functions for `show` and `hide` methods
* @param {Object} data
* @param {Number} duration
* @param {Function} callback - callback function to fire once transitions complete
*/
function onTransitionEnd(data, duration, callback) {
  // Make callback synchronous if duration is 0
  if (!duration) {
    return callback();
  }

  var _getInnerElements = (0, _getInnerElements3.default)(data.popper),
      tooltip = _getInnerElements.tooltip;

  var transitionendFired = false;

  var listenerCallback = function listenerCallback(e) {
    if (e.target === tooltip && !transitionendFired) {
      transitionendFired = true;
      callback();
    }
  };

  // Fire callback upon transition completion
  tooltip.addEventListener('webkitTransitionEnd', listenerCallback);
  tooltip.addEventListener('transitionend', listenerCallback);

  // Fallback: transitionend listener sometimes may not fire
  clearTimeout(data._transitionendTimeout);
  data._transitionendTimeout = setTimeout(function () {
    if (!transitionendFired) {
      callback();
    }
  }, duration);
}

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

/* Utility functions */


/* Core library functions */


var _globals = __webpack_require__(0);

var _reactDom = __webpack_require__(39);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _init = __webpack_require__(26);

var _init2 = _interopRequireDefault(_init);

var _defer = __webpack_require__(5);

var _defer2 = _interopRequireDefault(_defer);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _find = __webpack_require__(2);

var _find2 = _interopRequireDefault(_find);

var _findIndex = __webpack_require__(34);

var _findIndex2 = _interopRequireDefault(_findIndex);

var _removeTitle = __webpack_require__(12);

var _removeTitle2 = _interopRequireDefault(_removeTitle);

var _elementIsInViewport = __webpack_require__(33);

var _elementIsInViewport2 = _interopRequireDefault(_elementIsInViewport);

var _triggerReflow = __webpack_require__(37);

var _triggerReflow2 = _interopRequireDefault(_triggerReflow);

var _modifyClassList = __webpack_require__(35);

var _modifyClassList2 = _interopRequireDefault(_modifyClassList);

var _getInnerElements4 = __webpack_require__(6);

var _getInnerElements5 = _interopRequireDefault(_getInnerElements4);

var _applyTransitionDuration = __webpack_require__(31);

var _applyTransitionDuration2 = _interopRequireDefault(_applyTransitionDuration);

var _isVisible = __webpack_require__(7);

var _isVisible2 = _interopRequireDefault(_isVisible);

var _noop = __webpack_require__(36);

var _noop2 = _interopRequireDefault(_noop);

var _followCursorHandler = __webpack_require__(10);

var _followCursorHandler2 = _interopRequireDefault(_followCursorHandler);

var _getArrayOfElements = __webpack_require__(22);

var _getArrayOfElements2 = _interopRequireDefault(_getArrayOfElements);

var _onTransitionEnd = __webpack_require__(29);

var _onTransitionEnd2 = _interopRequireDefault(_onTransitionEnd);

var _mountPopper = __webpack_require__(28);

var _mountPopper2 = _interopRequireDefault(_mountPopper);

var _makeSticky = __webpack_require__(27);

var _makeSticky2 = _interopRequireDefault(_makeSticky);

var _createTooltips = __webpack_require__(19);

var _createTooltips2 = _interopRequireDefault(_createTooltips);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* @param {String|Element|Element[]} selector
* @param {Object} settings (optional) - the object of settings to be applied to the instance
*/
var Tippy = function () {
  function Tippy(selector) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Tippy);

    // Use default browser tooltip on unsupported browsers
    if (!_globals.Browser.SUPPORTED) return;

    (0, _init2.default)();

    this.state = {
      destroyed: false
    };

    this.selector = selector;

    this.settings = _extends({}, _globals.Defaults, settings);

    if (settings.show || settings.shown || settings.hide || settings.hidden) {
      console.warn('Callbacks without the `on` prefix are deprecated (with the exception of `wait`).' + ' Use onShow, onShown, onHide, and onHidden instead.');
    }

    this.callbacks = {
      wait: settings.wait,
      show: settings.onShow || settings.show || _noop2.default,
      shown: settings.onShown || settings.shown || _noop2.default,
      hide: settings.onHide || settings.hide || _noop2.default,
      hidden: settings.onHidden || settings.hidden || _noop2.default
    };

    this.store = _createTooltips2.default.call(this, (0, _getArrayOfElements2.default)(selector));
    _globals.Store.push.apply(_globals.Store, this.store);
  }

  /**
  * Returns the reference element's popper element
  * @param {Element} el
  * @return {Element}
  */


  _createClass(Tippy, [{
    key: 'getPopperElement',
    value: function getPopperElement(el) {
      try {
        return (0, _find2.default)(this.store, function (data) {
          return data.el === el;
        }).popper;
      } catch (e) {
        console.error('[getPopperElement]: Element passed as the argument does not exist in the instance');
      }
    }

    /**
    * Returns a popper's reference element
    * @param {Element} popper
    * @return {Element}
    */

  }, {
    key: 'getReferenceElement',
    value: function getReferenceElement(popper) {
      try {
        return (0, _find2.default)(this.store, function (data) {
          return data.popper === popper;
        }).el;
      } catch (e) {
        console.error('[getReferenceElement]: Popper passed as the argument does not exist in the instance');
      }
    }

    /**
    * Returns the reference data object from either the reference element or popper element
    * @param {Element} x (reference element or popper)
    * @return {Object}
    */

  }, {
    key: 'getReferenceData',
    value: function getReferenceData(x) {
      return (0, _find2.default)(this.store, function (data) {
        return data.el === x || data.popper === x;
      });
    }

    /**
    * Update settings
    * @param {DOMElement} - popper
    * @param {string} - name
    * @param {string} - value
    */

  }, {
    key: 'updateSettings',
    value: function updateSettings(popper, name, value) {
      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });
      var newSettings = _extends({}, data.settings, _defineProperty({}, name, value));
      data.settings = newSettings;
    }
  }, {
    key: 'updateForReact',


    /**
    * Update for React
    * @param {DOMElement} - popper
    * @param {ReactElement} - content
    */
    value: function updateForReact(popper, updatedContent) {
      var tooltipContent = popper.querySelector(_globals.Selectors.CONTENT);
      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });

      var _data$settings = data.settings,
          useContext = _data$settings.useContext,
          reactInstance = _data$settings.reactInstance;

      if (useContext) {
        _reactDom2.default.unstable_renderSubtreeIntoContainer(data.settings.reactInstance, updatedContent, tooltipContent);
      } else {
        _reactDom2.default.render(updatedContent, tooltipContent);
      }
    }
    /**
    * Shows a popper
    * @param {Element} popper
    * @param {Number} customDuration (optional)
    */

  }, {
    key: 'show',
    value: function show(popper, customDuration) {
      var _this = this;

      if (this.state.destroyed) return;

      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });

      var _getInnerElements = (0, _getInnerElements5.default)(popper),
          tooltip = _getInnerElements.tooltip,
          circle = _getInnerElements.circle,
          content = _getInnerElements.content;

      if (!document.body.contains(data.el)) {
        this.destroy(popper);
        return;
      }

      this.callbacks.show.call(popper);

      // Custom react
      if (data && data.settings && data.settings.open === false) {
        return;
      }

      if (data.settings.reactDOM) {
        this.updateForReact(popper, data.settings.reactDOM);
      }
      // end: Custom react

      var el = data.el,
          _data$settings2 = data.settings,
          appendTo = _data$settings2.appendTo,
          sticky = _data$settings2.sticky,
          interactive = _data$settings2.interactive,
          followCursor = _data$settings2.followCursor,
          flipDuration = _data$settings2.flipDuration,
          duration = _data$settings2.duration,
          dynamicTitle = _data$settings2.dynamicTitle;


      if (dynamicTitle) {
        var title = el.getAttribute('title');
        if (title) {
          content.innerHTML = title;
          (0, _removeTitle2.default)(el);
        }
      }

      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[0] : duration;

      // Prevent a transition when popper changes position
      (0, _applyTransitionDuration2.default)([popper, tooltip, circle], 0);

      (0, _mountPopper2.default)(data);

      popper.style.visibility = 'visible';
      popper.setAttribute('aria-hidden', 'false');

      // Wait for popper's position to update
      (0, _defer2.default)(function () {
        // Sometimes the arrow will not be in the correct position, force another update
        if (!followCursor || _globals.Browser.touch) {
          data.popperInstance.update();
          (0, _applyTransitionDuration2.default)([popper], flipDuration);
        }

        // Re-apply transition durations
        (0, _applyTransitionDuration2.default)([tooltip, circle], _duration);

        // Make content fade out a bit faster than the tooltip if `animateFill`
        if (circle) content.style.opacity = 1;

        // Interactive tooltips receive a class of 'active'
        interactive && el.classList.add('active');

        // Update popper's position on every animation frame
        sticky && (0, _makeSticky2.default)(data);

        // Repaint/reflow is required for CSS transition when appending
        (0, _triggerReflow2.default)(tooltip, circle);

        (0, _modifyClassList2.default)([tooltip, circle], function (list) {
          list.contains('tippy-notransition') && list.remove('tippy-notransition');
          list.remove('leave');
          list.add('enter');
        });

        // Wait for transitions to complete
        (0, _onTransitionEnd2.default)(data, _duration, function () {
          if (!(0, _isVisible2.default)(popper) || data._onShownFired) return;

          // Focus interactive tooltips only
          interactive && popper.focus();
          // Remove transitions from tooltip
          tooltip.classList.add('tippy-notransition');
          // Prevents shown() from firing more than once from early transition cancellations
          data._onShownFired = true;

          _this.callbacks.shown.call(popper);
        });
      });
    }

    /**
    * Hides a popper
    * @param {Element} popper
    * @param {Number} customDuration (optional)
    */

  }, {
    key: 'hide',
    value: function hide(popper, customDuration) {
      var _this2 = this;

      if (this.state.destroyed) return;

      this.callbacks.hide.call(popper);

      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });

      var _getInnerElements2 = (0, _getInnerElements5.default)(popper),
          tooltip = _getInnerElements2.tooltip,
          circle = _getInnerElements2.circle,
          content = _getInnerElements2.content;

      // custom react
      // Prevent hide if open


      if (data.settings.disabled === false && data.settings.open) {
        return;
      }

      var isUnmount = data && data.settings && data.settings.unmountHTMLWhenHide && data.settings.reactDOM;
      // end: custom react

      var el = data.el,
          _data$settings3 = data.settings,
          appendTo = _data$settings3.appendTo,
          sticky = _data$settings3.sticky,
          interactive = _data$settings3.interactive,
          followCursor = _data$settings3.followCursor,
          html = _data$settings3.html,
          trigger = _data$settings3.trigger,
          duration = _data$settings3.duration;


      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[1] : duration;

      data._onShownFired = false;
      interactive && el.classList.remove('active');

      popper.style.visibility = 'hidden';
      popper.setAttribute('aria-hidden', 'true');

      (0, _applyTransitionDuration2.default)([tooltip, circle, circle ? content : null], _duration);

      if (circle) content.style.opacity = 0;

      (0, _modifyClassList2.default)([tooltip, circle], function (list) {
        list.contains('tippy-tooltip') && list.remove('tippy-notransition');
        list.remove('enter');
        list.add('leave');
      });

      // Re-focus click-triggered html elements
      // and the tooltipped element IS in the viewport (otherwise it causes unsightly scrolling
      // if the tooltip is closed and the element isn't in the viewport anymore)
      if (html && trigger.indexOf('click') !== -1 && (0, _elementIsInViewport2.default)(el)) {
        el.focus();
      }

      // Wait for transitions to complete
      (0, _onTransitionEnd2.default)(data, _duration, function () {
        // `isVisible` is not completely reliable to determine if we shouldn't
        // run the hidden callback, we need to check the computed opacity style.
        // This prevents glitchy behavior of the transition when quickly showing
        // and hiding a tooltip.
        if ((0, _isVisible2.default)(popper) || !appendTo.contains(popper) || getComputedStyle(tooltip).opacity === '1') return;

        el.removeEventListener('mousemove', _followCursorHandler2.default);
        data.popperInstance.disableEventListeners();
        appendTo.removeChild(popper);

        _this2.callbacks.hidden.call(popper);

        // custom react
        if (isUnmount) {
          _reactDom2.default.unmountComponentAtNode(content);
        }
      });
    }

    /**
    * Updates a popper with new content
    * @param {Element} popper
    */

  }, {
    key: 'update',
    value: function update(popper) {
      if (this.state.destroyed) return;

      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });

      var _getInnerElements3 = (0, _getInnerElements5.default)(popper),
          content = _getInnerElements3.content;

      var el = data.el,
          html = data.settings.html;


      if (html instanceof Element) {
        console.warn('Aborted: update() should not be used if `html` is a DOM element');
        return;
      }

      content.innerHTML = html ? document.getElementById(html.replace('#', '')).innerHTML : el.getAttribute('title') || el.getAttribute('data-original-title');

      if (!html) (0, _removeTitle2.default)(el);
    }

    /**
    * Destroys a popper
    * @param {Element} popper
    * @param {Boolean} _isLast - private param used by destroyAll to optimize
    */

  }, {
    key: 'destroy',
    value: function destroy(popper, _isLast) {
      var _this3 = this;

      if (this.state.destroyed) return;

      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });

      var el = data.el,
          popperInstance = data.popperInstance,
          listeners = data.listeners,
          _mutationObserver = data._mutationObserver;

      // Ensure the popper is hidden

      if ((0, _isVisible2.default)(popper)) {
        this.hide(popper, 0);
      }

      // Remove Tippy-only event listeners from tooltipped element
      listeners.forEach(function (listener) {
        return el.removeEventListener(listener.event, listener.handler);
      });

      // Restore original title
      el.setAttribute('title', el.getAttribute('data-original-title'));

      el.removeAttribute('data-original-title');
      el.removeAttribute('data-tooltipped');
      el.removeAttribute('aria-describedby');

      popperInstance && popperInstance.destroy();
      _mutationObserver && _mutationObserver.disconnect();

      // Remove from store
      _globals.Store.splice((0, _findIndex2.default)(_globals.Store, function (data) {
        return data.popper === popper;
      }), 1);

      // Ensure filter is called only once
      if (_isLast === undefined || _isLast) {
        this.store = _globals.Store.filter(function (data) {
          return data.tippyInstance === _this3;
        });
      }
    }

    /**
    * Destroys all tooltips created by the instance
    */

  }, {
    key: 'destroyAll',
    value: function destroyAll() {
      var _this4 = this;

      if (this.state.destroyed) return;

      var storeLength = this.store.length;

      this.store.forEach(function (_ref, index) {
        var popper = _ref.popper;

        _this4.destroy(popper, index === storeLength - 1);
      });

      this.store = null;
      this.state.destroyed = true;
    }
  }]);

  return Tippy;
}();

function tippy(selector, settings) {
  return new Tippy(selector, settings);
}

tippy.Browser = _globals.Browser;
tippy.Defaults = _globals.Defaults;
tippy.disableDynamicInputDetection = function () {
  return _globals.Browser.dynamicInputDetection = false;
};
tippy.enableDynamicInputDetection = function () {
  return _globals.Browser.dynamicInputDetection = true;
};

exports.default = tippy;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = applyTransitionDuration;

var _globals = __webpack_require__(0);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _matches = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Applies the transition duration to each element
* @param {Element[]} els - Array of elements
* @param {Number} duration
*/
function applyTransitionDuration(els, duration) {
  els.forEach(function (el) {
    if (!el) return;

    var isContent = _matches.matches.call(el, _globals.Selectors.CONTENT);

    var _duration = isContent ? Math.round(duration / 1.3) : duration;

    el.style[(0, _prefix2.default)('transitionDuration')] = _duration + 'ms';
  });
}

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cursorIsOutsideInteractiveBorder;

var _getCorePlacement = __webpack_require__(3);

var _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Determines if the mouse's cursor is outside the interactive border
* @param {MouseEvent} event
* @param {Element} popper
* @param {Object} settings
* @return {Boolean}
*/
function cursorIsOutsideInteractiveBorder(event, popper, settings) {
  if (!popper.getAttribute('x-placement')) return true;

  var x = event.clientX,
      y = event.clientY;
  var interactiveBorder = settings.interactiveBorder,
      distance = settings.distance;


  var rect = popper.getBoundingClientRect();
  var corePosition = (0, _getCorePlacement2.default)(popper.getAttribute('x-placement'));
  var borderWithDistance = interactiveBorder + distance;

  var exceeds = {
    top: rect.top - y > interactiveBorder,
    bottom: y - rect.bottom > interactiveBorder,
    left: rect.left - x > interactiveBorder,
    right: x - rect.right > interactiveBorder
  };

  switch (corePosition) {
    case 'top':
      exceeds.top = rect.top - y > borderWithDistance;
      break;
    case 'bottom':
      exceeds.bottom = y - rect.bottom > borderWithDistance;
      break;
    case 'left':
      exceeds.left = rect.left - x > borderWithDistance;
      break;
    case 'right':
      exceeds.right = x - rect.right > borderWithDistance;
      break;
  }

  return exceeds.top || exceeds.bottom || exceeds.left || exceeds.right;
}

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = elementIsInViewport;
/**
* Determines if an element is visible in the viewport
* @param {Element} el
* @return {Boolean}
*/
function elementIsInViewport(el) {
  var rect = el.getBoundingClientRect();

  return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
}

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findIndex;

var _find = __webpack_require__(2);

var _find2 = _interopRequireDefault(_find);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Ponyfill for Array.prototype.findIndex
* @param {Array} arr
* @param {Function} checkFn
* @return index of the item in the array
*/
function findIndex(arr, checkFn) {
  if (Array.prototype.findIndex) {
    return arr.findIndex(checkFn);
  }

  // fallback
  return arr.indexOf((0, _find2.default)(arr, checkFn));
}

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = modifyClassList;
/**
* Modifies elements' class lists
* @param {Element[]} els - Array of elements
* @param {Function} callback
*/
function modifyClassList(els, callback) {
  els.forEach(function (el) {
    if (!el) return;
    callback(el.classList);
  });
}

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = noop;
function noop() {}

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = triggerReflow;

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Triggers a document repaint or reflow for CSS transition
* @param {Element} tooltip
* @param {Element} circle
*/
function triggerReflow(tooltip, circle) {
  // Safari needs the specific 'transform' property to be accessed
  circle ? window.getComputedStyle(circle)[(0, _prefix2.default)('transform')] : window.getComputedStyle(tooltip).opacity;
}

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_38__;

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_39__;

/***/ })
/******/ ]);
});
//# sourceMappingURL=react-tippy.js.map
      };
    };
  }
}, {package:"react-tippy",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-tippy\\dist\\react-tippy.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\node_modules\\human-standard-token-abi\\index.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@metamask\eth-token-tracker\node_modules\human-standard-token-abi\index.js
      return function (require, module, exports) {
module.exports = [
  {
    "constant": true,
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_spender",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "approve",
    "outputs": [
      {
        "name": "success",
        "type": "bool"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "totalSupply",
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_from",
        "type": "address"
      },
      {
        "name": "_to",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "transferFrom",
    "outputs": [
      {
        "name": "success",
        "type": "bool"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "decimals",
    "outputs": [
      {
        "name": "",
        "type": "uint8"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "version",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_owner",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "name": "balance",
        "type": "uint256"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [],
    "name": "symbol",
    "outputs": [
      {
        "name": "",
        "type": "string"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_to",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "transfer",
    "outputs": [
      {
        "name": "success",
        "type": "bool"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": false,
    "inputs": [
      {
        "name": "_spender",
        "type": "address"
      },
      {
        "name": "_value",
        "type": "uint256"
      },
      {
        "name": "_extraData",
        "type": "bytes"
      }
    ],
    "name": "approveAndCall",
    "outputs": [
      {
        "name": "success",
        "type": "bool"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "constant": true,
    "inputs": [
      {
        "name": "_owner",
        "type": "address"
      },
      {
        "name": "_spender",
        "type": "address"
      }
    ],
    "name": "allowance",
    "outputs": [
      {
        "name": "remaining",
        "type": "uint256"
      }
    ],
    "payable": false,
    "type": "function"
  },
  {
    "inputs": [
      {
        "name": "_initialAmount",
        "type": "uint256"
      },
      {
        "name": "_tokenName",
        "type": "string"
      },
      {
        "name": "_decimalUnits",
        "type": "uint8"
      },
      {
        "name": "_tokenSymbol",
        "type": "string"
      }
    ],
    "type": "constructor"
  },
  {
    "payable": false,
    "type": "fallback"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "_from",
        "type": "address"
      },
      {
        "indexed": true,
        "name": "_to",
        "type": "address"
      },
      {
        "indexed": false,
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "Transfer",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "name": "_owner",
        "type": "address"
      },
      {
        "indexed": true,
        "name": "_spender",
        "type": "address"
      },
      {
        "indexed": false,
        "name": "_value",
        "type": "uint256"
      }
    ],
    "name": "Approval",
    "type": "event"
  },
]

      };
    };
  }
}, {package:"human-standard-token-abi",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\node_modules\\human-standard-token-abi\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\node_modules\\eth-block-tracker\\src\\polling.js", {"./base":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\node_modules\\eth-block-tracker\\src\\base.js","pify":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\node_modules\\pify\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@metamask\eth-token-tracker\node_modules\eth-block-tracker\src\polling.js
      return function (require, module, exports) {
const pify = require('pify')
const BaseBlockTracker = require('./base')

const sec = 1000

class PollingBlockTracker extends BaseBlockTracker {

  constructor (opts = {}) {
    // parse + validate args
    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.')
    const pollingInterval = opts.pollingInterval || 20 * sec
    const retryTimeout = opts.retryTimeout || pollingInterval / 10
    const keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true
    const setSkipCacheFlag = opts.setSkipCacheFlag || false
    // BaseBlockTracker constructor
    super(Object.assign({
      blockResetDuration: pollingInterval,
    }, opts))
    // config
    this._provider = opts.provider
    this._pollingInterval = pollingInterval
    this._retryTimeout = retryTimeout
    this._keepEventLoopActive = keepEventLoopActive
    this._setSkipCacheFlag = setSkipCacheFlag
  }

  //
  // public
  //

  // trigger block polling
  async checkForLatestBlock () {
    await this._updateLatestBlock()
    return await this.getLatestBlock()
  }

  //
  // private
  //

  _start () {
    this._performSync().catch(err => this.emit('error', err))
  }

  async _performSync () {
    while (this._isRunning) {
      try {
        await this._updateLatestBlock()
        await timeout(this._pollingInterval, !this._keepEventLoopActive)
      } catch (err) {
        const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\n${err.stack}`)
        try {
          this.emit('error', newErr)
        } catch (emitErr) {
          console.error(newErr)
        }
        await timeout(this._retryTimeout, !this._keepEventLoopActive)
      }
    }
  }

  async _updateLatestBlock () {
    // fetch + set latest block
    const latestBlock = await this._fetchLatestBlock()
    this._newPotentialLatest(latestBlock)
  }

  async _fetchLatestBlock () {
    const req = { jsonrpc: "2.0", id: 1, method: 'eth_blockNumber', params: [] }
    if (this._setSkipCacheFlag) req.skipCache = true
    const res = await pify((cb) => this._provider.sendAsync(req, cb))()
    if (res.error) throw new Error(`PollingBlockTracker - encountered error fetching block:\n${res.error}`)
    return res.result
  }

}

module.exports = PollingBlockTracker

function timeout (duration, unref) {
  return new Promise(resolve => {
    const timoutRef = setTimeout(resolve, duration)
    // don't keep process open
    if (timoutRef.unref && unref) {
      timoutRef.unref()
    }
  })
}

      };
    };
  }
}, {package:"eth-block-tracker",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\node_modules\\eth-block-tracker\\src\\polling.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\deep-equal\\index.js", {"is-arguments":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\is-arguments\\index.js","is-date-object":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\is-date-object\\index.js","is-regex":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\is-regex\\index.js","object-is":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\object-is\\index.js","object-keys":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\object-keys\\index.js","regexp.prototype.flags":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\regexp.prototype.flags\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\deep-equal\index.js
      return function (require, module, exports) {
var objectKeys = require('object-keys');
var isArguments = require('is-arguments');
var is = require('object-is');
var isRegex = require('is-regex');
var flags = require('regexp.prototype.flags');
var isDate = require('is-date-object');

var getTime = Date.prototype.getTime;

function deepEqual(actual, expected, options) {
  var opts = options || {};

  // 7.1. All identical values are equivalent, as determined by ===.
  if (opts.strict ? is(actual, expected) : actual === expected) {
    return true;
  }

  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {
    return opts.strict ? is(actual, expected) : actual == expected;
  }

  /*
   * 7.4. For all other Object pairs, including Array objects, equivalence is
   * determined by having the same number of owned properties (as verified
   * with Object.prototype.hasOwnProperty.call), the same set of keys
   * (although not necessarily the same order), equivalent values for every
   * corresponding key, and an identical 'prototype' property. Note: this
   * accounts for both named and indexed properties on Arrays.
   */
  // eslint-disable-next-line no-use-before-define
  return objEquiv(actual, expected, opts);
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer(x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
    return false;
  }
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') {
    return false;
  }
  return true;
}

function objEquiv(a, b, opts) {
  /* eslint max-statements: [2, 50] */
  var i, key;
  if (typeof a !== typeof b) { return false; }
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) { return false; }

  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) { return false; }

  if (isArguments(a) !== isArguments(b)) { return false; }

  var aIsRegex = isRegex(a);
  var bIsRegex = isRegex(b);
  if (aIsRegex !== bIsRegex) { return false; }
  if (aIsRegex || bIsRegex) {
    return a.source === b.source && flags(a) === flags(b);
  }

  if (isDate(a) && isDate(b)) {
    return getTime.call(a) === getTime.call(b);
  }

  var aIsBuffer = isBuffer(a);
  var bIsBuffer = isBuffer(b);
  if (aIsBuffer !== bIsBuffer) { return false; }
  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here
    if (a.length !== b.length) { return false; }
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) { return false; }
    }
    return true;
  }

  if (typeof a !== typeof b) { return false; }

  try {
    var ka = objectKeys(a);
    var kb = objectKeys(b);
  } catch (e) { // happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates hasOwnProperty)
  if (ka.length !== kb.length) { return false; }

  // the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  // ~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i]) { return false; }
  }
  // equivalent values for every corresponding key, and ~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) { return false; }
  }

  return true;
}

module.exports = deepEqual;

      };
    };
  }
}, {package:"deep-equal",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\deep-equal\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\dist\\token.js", {"./util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\dist\\util.js","@babel/runtime/helpers/asyncToGenerator":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\asyncToGenerator.js","@babel/runtime/helpers/classCallCheck":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\classCallCheck.js","@babel/runtime/helpers/createClass":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\createClass.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@babel/runtime/helpers/toConsumableArray":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\toConsumableArray.js","@babel/runtime/regenerator":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\regenerator\\index.js","ethjs":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\node_modules\\ethjs\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@metamask\eth-token-tracker\dist\token.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var BN = require('ethjs').BN;

var util = require('./util');
/**
 * Checks whether the given input and base will produce an invalid bn instance.
 *
 * bn.js requires extra validation to safely use, so this function allows
 * us to typecheck the params we pass to it.
 *
 * @see {@link https://github.com/indutny/bn.js/issues/151}
 * @param {any} input - the bn.js input
 * @param {number} base - the bn.js base argument
 * @returns {boolean}
 */


function _isInvalidBnInput(input, base) {
  return typeof input === 'string' && (input.startsWith('0x') || Number.isNaN(parseInt(input, base)));
}

var Token =
/*#__PURE__*/
function () {
  function Token() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        address = _ref.address,
        symbol = _ref.symbol,
        balance = _ref.balance,
        decimals = _ref.decimals,
        contract = _ref.contract,
        owner = _ref.owner,
        throwOnBalanceError = _ref.throwOnBalanceError,
        balanceDecimals = _ref.balanceDecimals;

    (0, _classCallCheck2["default"])(this, Token);

    if (!contract) {
      throw new Error('Missing requried \'contract\' parameter');
    } else if (!owner) {
      throw new Error('Missing requried \'owner\' parameter');
    }

    this.isLoading = !address || !symbol || !balance || !decimals;
    this.address = address || '0x0';
    this.symbol = symbol;
    this.throwOnBalanceError = throwOnBalanceError;
    this.balanceDecimals = balanceDecimals;

    if (!balance) {
      balance = '0';
    } else if (_isInvalidBnInput(balance, 16)) {
      throw new Error('Invalid \'balance\' option provided; must be non-prefixed hex string if given as string');
    }

    if (decimals && _isInvalidBnInput(decimals, 10)) {
      throw new Error('Invalid \'decimals\' option provided; must be non-prefixed hex string if given as string');
    }

    this.balance = new BN(balance, 16);
    this.decimals = decimals ? new BN(decimals) : undefined;
    this.owner = owner;
    this.contract = contract;
  }

  (0, _createClass2["default"])(Token, [{
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee() {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Promise.all([this.symbol || this.updateSymbol(), this.updateBalance(), this.decimals || this.updateDecimals()]);

              case 2:
                this.isLoading = false;
                return _context.abrupt("return", this.serialize());

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function update() {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: "serialize",
    value: function serialize() {
      return {
        address: this.address,
        symbol: this.symbol,
        balance: this.balance.toString(10),
        decimals: this.decimals ? parseInt(this.decimals.toString()) : 0,
        string: this.stringify(),
        balanceError: this.balanceError ? this.balanceError : null
      };
    }
  }, {
    key: "stringify",
    value: function stringify() {
      return util.stringifyBalance(this.balance, this.decimals || new BN(0), this.balanceDecimals);
    }
  }, {
    key: "updateSymbol",
    value: function () {
      var _updateSymbol = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee2() {
        var symbol;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.updateValue('symbol');

              case 2:
                symbol = _context2.sent;
                this.symbol = symbol || 'TKN';
                return _context2.abrupt("return", this.symbol);

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function updateSymbol() {
        return _updateSymbol.apply(this, arguments);
      }

      return updateSymbol;
    }()
  }, {
    key: "updateBalance",
    value: function () {
      var _updateBalance = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee3() {
        var balance;
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.updateValue('balance');

              case 2:
                balance = _context3.sent;
                this.balance = balance;
                return _context3.abrupt("return", this.balance);

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function updateBalance() {
        return _updateBalance.apply(this, arguments);
      }

      return updateBalance;
    }()
  }, {
    key: "updateDecimals",
    value: function () {
      var _updateDecimals = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee4() {
        var decimals;
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!(this.decimals !== undefined)) {
                  _context4.next = 2;
                  break;
                }

                return _context4.abrupt("return", this.decimals);

              case 2:
                _context4.next = 4;
                return this.updateValue('decimals');

              case 4:
                decimals = _context4.sent;

                if (decimals) {
                  this.decimals = decimals;
                }

                return _context4.abrupt("return", this.decimals);

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function updateDecimals() {
        return _updateDecimals.apply(this, arguments);
      }

      return updateDecimals;
    }()
  }, {
    key: "updateValue",
    value: function () {
      var _updateValue = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee5(key) {
        var methodName, args, result, _this$contract, val;

        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                args = [];
                _context5.t0 = key;
                _context5.next = _context5.t0 === 'balance' ? 4 : 7;
                break;

              case 4:
                methodName = 'balanceOf';
                args = [this.owner];
                return _context5.abrupt("break", 8);

              case 7:
                methodName = key;

              case 8:
                _context5.prev = 8;
                _context5.next = 11;
                return (_this$contract = this.contract)[methodName].apply(_this$contract, (0, _toConsumableArray2["default"])(args));

              case 11:
                result = _context5.sent;

                if (key === 'balance') {
                  this.balanceError = null;
                }

                _context5.next = 22;
                break;

              case 15:
                _context5.prev = 15;
                _context5.t1 = _context5["catch"](8);
                console.warn("failed to load ".concat(key, " for token at ").concat(this.address));

                if (!(key === 'balance')) {
                  _context5.next = 22;
                  break;
                }

                this.balanceError = _context5.t1;

                if (!this.throwOnBalanceError) {
                  _context5.next = 22;
                  break;
                }

                throw _context5.t1;

              case 22:
                if (!result) {
                  _context5.next = 26;
                  break;
                }

                val = result[0];
                this[key] = val;
                return _context5.abrupt("return", val);

              case 26:
                return _context5.abrupt("return", this[key]);

              case 27:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this, [[8, 15]]);
      }));

      function updateValue(_x) {
        return _updateValue.apply(this, arguments);
      }

      return updateValue;
    }()
  }]);
  return Token;
}();

module.exports = Token;
      };
    };
  }
}, {package:"@metamask\\eth-token-tracker",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\eth-token-tracker\\dist\\token.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\currency-display\\index.js", {"./currency-display.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\currency-display\\currency-display.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\currency-display\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _currencyDisplay.default;
  }
});

var _currencyDisplay = _interopRequireDefault(require("./currency-display.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\currency-display\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\connected-accounts-list\\index.js", {"./connected-accounts-list.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\connected-accounts-list\\connected-accounts-list.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\connected-accounts-list\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _connectedAccountsList.default;
  }
});

var _connectedAccountsList = _interopRequireDefault(require("./connected-accounts-list.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\connected-accounts-list\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\qr-scanner\\qr-scanner.component.js", {"../../../../../app/scripts/lib/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\scripts\\lib\\util.js","../../../../../shared/constants/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\app.js","../../../../../shared/constants/time":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\time.js","../../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../../../helpers/utils/webcam-utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\webcam-utils.js","../../../ui/page-container/page-container-footer/page-container-footer.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-footer\\page-container-footer.component.js","../../../ui/spinner":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\spinner\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@zxing/library":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@zxing\\library\\umd\\index.min.js","loglevel":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\loglevel\\lib\\loglevel.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\qr-scanner\qr-scanner.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _loglevel = _interopRequireDefault(require("loglevel"));

var _library = require("@zxing/library");

var _util = require("../../../../../app/scripts/lib/util");

var _app = require("../../../../../shared/constants/app");

var _time = require("../../../../../shared/constants/time");

var _spinner = _interopRequireDefault(require("../../../ui/spinner"));

var _webcamUtils = _interopRequireDefault(require("../../../../helpers/utils/webcam-utils"));

var _util2 = require("../../../../helpers/utils/util");

var _pageContainerFooter = _interopRequireDefault(require("../../../ui/page-container/page-container-footer/page-container-footer.component"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const READY_STATE = {
  ACCESSING_CAMERA: 'ACCESSING_CAMERA',
  NEED_TO_ALLOW_ACCESS: 'NEED_TO_ALLOW_ACCESS',
  READY: 'READY'
};

class QrScanner extends _react.Component {
  constructor(props) {
    super(props);
    (0, _defineProperty2.default)(this, "checkEnvironment", async () => {
      try {
        const {
          environmentReady
        } = await _webcamUtils.default.checkStatus();

        if (!environmentReady && (0, _util.getEnvironmentType)() !== _app.ENVIRONMENT_TYPE_FULLSCREEN) {
          const currentUrl = (0, _util2.getURL)(window.location.href);
          const currentHash = currentUrl === null || currentUrl === void 0 ? void 0 : currentUrl.hash;
          const currentRoute = currentHash ? currentHash.substring(1) : null;
          global.platform.openExtensionInBrowser(currentRoute);
        }
      } catch (error) {
        if (this.mounted) {
          this.setState({
            error
          });
        }
      } // initial attempt is required to trigger permission prompt


      this.initCamera();
    });
    (0, _defineProperty2.default)(this, "checkPermissions", async () => {
      try {
        const {
          permissions
        } = await _webcamUtils.default.checkStatus();

        if (permissions) {
          // Let the video stream load first...
          await new Promise(resolve => setTimeout(resolve, _time.SECOND * 2));

          if (!this.mounted) {
            return;
          }

          this.setState({
            ready: READY_STATE.READY
          });
        } else if (this.mounted) {
          // Keep checking for permissions
          this.permissionChecker = setTimeout(this.checkPermissions, _time.SECOND);
        }
      } catch (error) {
        if (this.mounted) {
          this.setState({
            error
          });
        }
      }
    });
    (0, _defineProperty2.default)(this, "initCamera", async () => {
      // The `decodeFromInputVideoDevice` call prompts the browser to show
      // the user the camera permission request.  We must then call it again
      // once we receive permission so that the video displays.
      // It's important to prevent this codeReader from being created twice;
      // Firefox otherwise starts 2 video streams, one of which cannot be stopped
      if (!this.codeReader) {
        this.codeReader = new _library.BrowserQRCodeReader();
      }

      try {
        await this.codeReader.getVideoInputDevices();
        this.checkPermissions();
        const content = await this.codeReader.decodeFromInputVideoDevice(undefined, 'video');
        const result = this.parseContent(content.text);

        if (!this.mounted) {
          return;
        } else if (result.type === 'unknown') {
          this.setState({
            error: new Error(this.context.t('unknownQrCode'))
          });
        } else {
          this.props.qrCodeDetected(result);
          this.stopAndClose();
        }
      } catch (error) {
        if (!this.mounted) {
          return;
        }

        if (error.name === 'NotAllowedError') {
          _loglevel.default.info(`Permission denied: '${error}'`);

          this.setState({
            ready: READY_STATE.NEED_TO_ALLOW_ACCESS
          });
        } else {
          this.setState({
            error
          });
        }
      }
    });
    (0, _defineProperty2.default)(this, "stopAndClose", () => {
      if (this.codeReader) {
        this.teardownCodeReader();
      }

      this.props.hideModal();
    });
    (0, _defineProperty2.default)(this, "tryAgain", () => {
      clearTimeout(this.permissionChecker);

      if (this.codeReader) {
        this.teardownCodeReader();
      }

      this.setState(this.getInitialState(), () => {
        this.checkEnvironment();
      });
    });
    this.state = this.getInitialState();
    this.codeReader = null;
    this.permissionChecker = null;
    this.mounted = false; // Clear pre-existing qr code data before scanning

    this.props.qrCodeDetected(null);
  }

  componentDidMount() {
    this.mounted = true;
    this.checkEnvironment();
  }

  componentDidUpdate(_, prevState) {
    const {
      ready
    } = this.state;

    if (prevState.ready !== ready) {
      if (ready === READY_STATE.READY) {
        this.initCamera();
      } else if (ready === READY_STATE.NEED_TO_ALLOW_ACCESS) {
        this.checkPermissions();
      }
    }
  }

  getInitialState() {
    return {
      ready: READY_STATE.ACCESSING_CAMERA,
      error: null
    };
  }

  componentWillUnmount() {
    this.mounted = false;
    clearTimeout(this.permissionChecker);
    this.teardownCodeReader();
  }

  teardownCodeReader() {
    if (this.codeReader) {
      this.codeReader.reset();
      this.codeReader.stop();
      this.codeReader = null;
    }
  }

  parseContent(content) {
    let type = 'unknown';
    let values = {}; // Here we could add more cases
    // To parse other type of links
    // For ex. EIP-681 (https://eips.ethereum.org/EIPS/eip-681)
    // Ethereum address links - fox ex. ethereum:0x.....1111

    if (content.split('ethereum:').length > 1) {
      type = 'address';
      values = {
        address: content.split('ethereum:')[1]
      }; // Regular ethereum addresses - fox ex. 0x.....1111
    } else if (content.substring(0, 2).toLowerCase() === '0x') {
      type = 'address';
      values = {
        address: content
      };
    }

    return {
      type,
      values
    };
  }

  renderError() {
    const {
      t
    } = this.context;
    const {
      error
    } = this.state;
    let title, msg;

    if (error.type === 'NO_WEBCAM_FOUND') {
      title = t('noWebcamFoundTitle');
      msg = t('noWebcamFound');
    } else if (error.message === t('unknownQrCode')) {
      msg = t('unknownQrCode');
    } else {
      title = t('unknownCameraErrorTitle');
      msg = t('unknownCameraError');
    }

    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__image"
    }, /*#__PURE__*/_react.default.createElement("img", {
      src: "images/webcam.svg",
      width: "70",
      height: "70",
      alt: ""
    })), title ? /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__title"
    }, title) : null, /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__error"
    }, msg), /*#__PURE__*/_react.default.createElement(_pageContainerFooter.default, {
      onCancel: this.stopAndClose,
      onSubmit: this.tryAgain,
      cancelText: t('cancel'),
      submitText: t('tryAgain')
    }));
  }

  renderVideo() {
    const {
      t
    } = this.context;
    const {
      ready
    } = this.state;
    let message;

    if (ready === READY_STATE.ACCESSING_CAMERA) {
      message = t('accessingYourCamera');
    } else if (ready === READY_STATE.READY) {
      message = t('scanInstructions');
    } else if (ready === READY_STATE.NEED_TO_ALLOW_ACCESS) {
      message = t('youNeedToAllowCameraAccess');
    }

    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__title"
    }, `${t('scanQrCode')}`), /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__content"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__content__video-wrapper"
    }, /*#__PURE__*/_react.default.createElement("video", {
      id: "video",
      style: {
        display: ready === READY_STATE.READY ? 'block' : 'none'
      }
    }), ready === READY_STATE.READY ? null : /*#__PURE__*/_react.default.createElement(_spinner.default, {
      color: "#F7C06C"
    }))), /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__status"
    }, message));
  }

  render() {
    const {
      error
    } = this.state;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "qr-scanner__close",
      onClick: this.stopAndClose
    }), error ? this.renderError() : this.renderVideo());
  }

}

exports.default = QrScanner;
(0, _defineProperty2.default)(QrScanner, "propTypes", {
  hideModal: _propTypes.default.func.isRequired,
  qrCodeDetected: _propTypes.default.func.isRequired
});
(0, _defineProperty2.default)(QrScanner, "contextTypes", {
  t: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\qr-scanner\\qr-scanner.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\deposit-ether-modal\\deposit-ether-modal.component.js", {"../../../../../shared/constants/network":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\network.js","../../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\deposit-ether-modal\deposit-ether-modal.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _network = require("../../../../../shared/constants/network");

var _button = _interopRequireDefault(require("../../../ui/button"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class DepositEtherModal extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "goToAccountDetailsModal", () => {
      this.props.hideWarning();
      this.props.hideModal();
      this.props.showAccountDetailModal();
    });
  }

  renderRow({
    logo,
    title,
    text,
    buttonLabel,
    onButtonClick,
    hide,
    className,
    hideButton,
    hideTitle,
    onBackClick,
    showBackButton
  }) {
    if (hide) {
      return null;
    }

    return /*#__PURE__*/_react.default.createElement("div", {
      className: className || 'deposit-ether-modal__buy-row'
    }, onBackClick && showBackButton && /*#__PURE__*/_react.default.createElement("div", {
      className: "deposit-ether-modal__buy-row__back",
      onClick: onBackClick
    }, /*#__PURE__*/_react.default.createElement("i", {
      className: "fa fa-arrow-left cursor-pointer"
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "deposit-ether-modal__buy-row__logo-container"
    }, logo), /*#__PURE__*/_react.default.createElement("div", {
      className: "deposit-ether-modal__buy-row__description"
    }, !hideTitle && /*#__PURE__*/_react.default.createElement("div", {
      className: "deposit-ether-modal__buy-row__description__title"
    }, title), /*#__PURE__*/_react.default.createElement("div", {
      className: "deposit-ether-modal__buy-row__description__text"
    }, text)), !hideButton && /*#__PURE__*/_react.default.createElement("div", {
      className: "deposit-ether-modal__buy-row__button"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "secondary",
      className: "deposit-ether-modal__deposit-button",
      large: true,
      onClick: onButtonClick
    }, buttonLabel)));
  }

  render() {
    const {
      chainId,
      toWyre,
      toTransak,
      address,
      toFaucet,
      isTestnet,
      isMainnet,
      isBuyableTransakChain
    } = this.props;
    const {
      t
    } = this.context;
    const networkName = _network.NETWORK_TO_NAME_MAP[chainId];
    const symbol = _network.BUYABLE_CHAINS_MAP[chainId].nativeCurrency;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container page-container--full-width page-container--full-height"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container__header"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container__title"
    }, t('depositCrypto', [symbol])), /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container__subtitle"
    }, t('needCryptoInWallet', [symbol])), /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container__header-close",
      onClick: () => {
        this.props.hideWarning();
        this.props.hideModal();
      }
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container__content"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "deposit-ether-modal__buy-rows"
    }, this.renderRow({
      logo: /*#__PURE__*/_react.default.createElement("div", {
        className: "deposit-ether-modal__logo",
        style: {
          backgroundImage: "url('./images/wyre.svg')",
          height: '40px'
        }
      }),
      title: t('buyWithWyre'),
      text: t('buyWithWyreDescription'),
      buttonLabel: t('continueToWyre'),
      onButtonClick: () => {
        this.context.metricsEvent({
          eventOpts: {
            category: 'Accounts',
            action: 'Deposit Ether',
            name: 'Click buy Ether via Wyre'
          }
        });
        toWyre(address);
      },
      hide: !isMainnet
    }), this.renderRow({
      logo: /*#__PURE__*/_react.default.createElement("div", {
        className: "deposit-ether-modal__logo",
        style: {
          backgroundImage: "url('./images/transak.svg')",
          height: '60px'
        }
      }),
      title: t('buyCryptoWithTransak', [symbol]),
      text: t('buyCryptoWithTransakDescription', [symbol]),
      buttonLabel: t('continueToTransak'),
      onButtonClick: () => {
        this.context.metricsEvent({
          eventOpts: {
            category: 'Accounts',
            action: 'Deposit Ether',
            name: 'Click buy Ether via Transak'
          }
        });
        toTransak(address, chainId);
      },
      hide: !isBuyableTransakChain
    }), this.renderRow({
      logo: /*#__PURE__*/_react.default.createElement("img", {
        alt: "",
        className: "deposit-ether-modal__logo",
        src: "./images/deposit-eth.svg",
        style: {
          height: '75px',
          width: '75px'
        }
      }),
      title: t('directDepositCrypto', [symbol]),
      text: t('directDepositCryptoExplainer', [symbol]),
      buttonLabel: t('viewAccount'),
      onButtonClick: () => this.goToAccountDetailsModal()
    }), networkName && this.renderRow({
      logo: /*#__PURE__*/_react.default.createElement("i", {
        className: "fa fa-tint fa-2x"
      }),
      title: t('testFaucet'),
      text: t('getEtherFromFaucet', [networkName]),
      buttonLabel: t('getEther'),
      onButtonClick: () => toFaucet(chainId),
      hide: !isTestnet
    }))));
  }

}

exports.default = DepositEtherModal;
(0, _defineProperty2.default)(DepositEtherModal, "contextTypes", {
  t: _propTypes.default.func,
  metricsEvent: _propTypes.default.func.isRequired
});
(0, _defineProperty2.default)(DepositEtherModal, "propTypes", {
  chainId: _propTypes.default.string.isRequired,
  isTestnet: _propTypes.default.bool.isRequired,
  isMainnet: _propTypes.default.bool.isRequired,
  isBuyableTransakChain: _propTypes.default.bool.isRequired,
  toWyre: _propTypes.default.func.isRequired,
  toTransak: _propTypes.default.func.isRequired,
  address: _propTypes.default.string.isRequired,
  toFaucet: _propTypes.default.func.isRequired,
  hideWarning: _propTypes.default.func.isRequired,
  hideModal: _propTypes.default.func.isRequired,
  showAccountDetailModal: _propTypes.default.func.isRequired
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\deposit-ether-modal\\deposit-ether-modal.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\confirm-remove-account\\confirm-remove-account.component.js", {"../../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../../ui/identicon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\index.js","../../modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@metamask/etherscan-link":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\etherscan-link\\dist\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\confirm-remove-account\confirm-remove-account.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _etherscanLink = require("@metamask/etherscan-link");

var _modal = _interopRequireDefault(require("../../modal"));

var _util = require("../../../../helpers/utils/util");

var _identicon = _interopRequireDefault(require("../../../ui/identicon"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class ConfirmRemoveAccount extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "handleRemove", () => {
      this.props.removeAccount(this.props.identity.address).then(() => this.props.hideModal());
    });
    (0, _defineProperty2.default)(this, "handleCancel", () => {
      this.props.hideModal();
    });
  }

  renderSelectedAccount() {
    const {
      t
    } = this.context;
    const {
      identity,
      rpcPrefs,
      chainId
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "confirm-remove-account__account"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "confirm-remove-account__account__identicon"
    }, /*#__PURE__*/_react.default.createElement(_identicon.default, {
      address: identity.address,
      diameter: 32
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "confirm-remove-account__account__name"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "confirm-remove-account__account__label"
    }, t('name')), /*#__PURE__*/_react.default.createElement("span", {
      className: "account_value"
    }, identity.name)), /*#__PURE__*/_react.default.createElement("div", {
      className: "confirm-remove-account__account__address"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "confirm-remove-account__account__label"
    }, t('publicAddress')), /*#__PURE__*/_react.default.createElement("span", {
      className: "account_value"
    }, (0, _util.addressSummary)(identity.address, 4, 4))), /*#__PURE__*/_react.default.createElement("div", {
      className: "confirm-remove-account__account__link"
    }, /*#__PURE__*/_react.default.createElement("a", {
      className: "",
      onClick: () => {
        const accountLink = (0, _etherscanLink.getAccountLink)(identity.address, chainId, rpcPrefs);
        this.context.trackEvent({
          category: 'Accounts',
          event: 'Clicked Block Explorer Link',
          properties: {
            link_type: 'Account Tracker',
            action: 'Remove Account',
            block_explorer_domain: (0, _util.getURLHostName)(accountLink)
          }
        });
        global.platform.openTab({
          url: accountLink
        });
      },
      target: "_blank",
      rel: "noopener noreferrer",
      title: t('etherscanView')
    }, /*#__PURE__*/_react.default.createElement("img", {
      src: "images/popout.svg",
      alt: t('etherscanView')
    }))));
  }

  render() {
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement(_modal.default, {
      headerText: `${t('removeAccount')}?`,
      onClose: this.handleCancel,
      onSubmit: this.handleRemove,
      onCancel: this.handleCancel,
      submitText: t('remove'),
      cancelText: t('nevermind')
    }, /*#__PURE__*/_react.default.createElement("div", null, this.renderSelectedAccount(), /*#__PURE__*/_react.default.createElement("div", {
      className: "confirm-remove-account__description"
    }, t('removeAccountDescription'), /*#__PURE__*/_react.default.createElement("a", {
      className: "confirm-remove-account__link",
      rel: "noopener noreferrer",
      target: "_blank",
      href: "https://metamask.zendesk.com/hc/en-us/articles/360015289932"
    }, t('learnMore')))));
  }

}

exports.default = ConfirmRemoveAccount;
(0, _defineProperty2.default)(ConfirmRemoveAccount, "propTypes", {
  hideModal: _propTypes.default.func.isRequired,
  removeAccount: _propTypes.default.func.isRequired,
  identity: _propTypes.default.object.isRequired,
  chainId: _propTypes.default.string.isRequired,
  rpcPrefs: _propTypes.default.object.isRequired
});
(0, _defineProperty2.default)(ConfirmRemoveAccount, "contextTypes", {
  t: _propTypes.default.func,
  trackEvent: _propTypes.default.func
});


      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\confirm-remove-account\\confirm-remove-account.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\edit-approval-permission\\edit-approval-permission.component.js", {"../../../../helpers/utils/token-util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\token-util.js","../../../ui/identicon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\index.js","../../../ui/text-field":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\text-field\\index.js","../../modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","bignumber.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\bignumber.js\\bignumber.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","loglevel":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\loglevel\\lib\\loglevel.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\edit-approval-permission\edit-approval-permission.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _loglevel = _interopRequireDefault(require("loglevel"));

var _classnames = _interopRequireDefault(require("classnames"));

var _bignumber = _interopRequireDefault(require("bignumber.js"));

var _modal = _interopRequireDefault(require("../../modal"));

var _identicon = _interopRequireDefault(require("../../../ui/identicon"));

var _textField = _interopRequireDefault(require("../../../ui/text-field"));

var _tokenUtil = require("../../../../helpers/utils/token-util");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const MAX_UNSIGNED_256_INT = new _bignumber.default(2).pow(256).minus(1).toString(10);

class EditApprovalPermission extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      // This is used as a TextField value, which should be a string.
      customSpendLimit: this.props.customTokenAmount || '',
      selectedOptionIsUnlimited: !this.props.customTokenAmount
    });
  }

  renderModalContent(error) {
    const {
      t
    } = this.context;
    const {
      hideModal,
      selectedIdentity,
      tokenAmount,
      tokenSymbol,
      tokenBalance,
      customTokenAmount,
      origin
    } = this.props;
    const {
      name,
      address
    } = selectedIdentity || {};
    const {
      selectedOptionIsUnlimited
    } = this.state;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__header"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__title"
    }, t('editPermission')), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__header__close",
      onClick: () => hideModal()
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__account-info"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__account-info__account"
    }, /*#__PURE__*/_react.default.createElement(_identicon.default, {
      address: address,
      diameter: 32
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__name-and-balance-container"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__account-info__name"
    }, name), /*#__PURE__*/_react.default.createElement("div", null, t('balance')))), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__account-info__balance"
    }, `${Number(tokenBalance).toPrecision(9)} ${tokenSymbol}`)), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__title"
    }, t('spendLimitPermission')), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__description"
    }, t('allowWithdrawAndSpend', [origin])), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__option"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__radio-button",
      onClick: () => this.setState({
        selectedOptionIsUnlimited: true
      })
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)({
        'edit-approval-permission__edit-section__radio-button-outline': !selectedOptionIsUnlimited,
        'edit-approval-permission__edit-section__radio-button-outline--selected': selectedOptionIsUnlimited
      })
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__radio-button-fill"
    }), selectedOptionIsUnlimited && /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__radio-button-dot"
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__option-text"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)({
        'edit-approval-permission__edit-section__option-label': !selectedOptionIsUnlimited,
        'edit-approval-permission__edit-section__option-label--selected': selectedOptionIsUnlimited
      })
    }, new _bignumber.default(tokenAmount).equals(new _bignumber.default(MAX_UNSIGNED_256_INT)) ? t('unlimited') : t('proposedApprovalLimit')), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__option-description"
    }, t('spendLimitRequestedBy', [origin])), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__option-value"
    }, `${Number(tokenAmount)} ${tokenSymbol}`))), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__option"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__radio-button",
      onClick: () => this.setState({
        selectedOptionIsUnlimited: false
      })
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)({
        'edit-approval-permission__edit-section__radio-button-outline': selectedOptionIsUnlimited,
        'edit-approval-permission__edit-section__radio-button-outline--selected': !selectedOptionIsUnlimited
      })
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__radio-button-fill"
    }), !selectedOptionIsUnlimited && /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__radio-button-dot"
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__option-text"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)({
        'edit-approval-permission__edit-section__option-label': selectedOptionIsUnlimited,
        'edit-approval-permission__edit-section__option-label--selected': !selectedOptionIsUnlimited
      })
    }, t('customSpendLimit')), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__option-description"
    }, t('enterMaxSpendLimit')), /*#__PURE__*/_react.default.createElement("div", {
      className: "edit-approval-permission__edit-section__option-input"
    }, /*#__PURE__*/_react.default.createElement(_textField.default, {
      type: "number",
      placeholder: `${Number(customTokenAmount || tokenAmount)} ${tokenSymbol}`,
      onChange: event => {
        this.setState({
          customSpendLimit: event.target.value
        });

        if (selectedOptionIsUnlimited) {
          this.setState({
            selectedOptionIsUnlimited: false
          });
        }
      },
      fullWidth: true,
      margin: "dense",
      value: this.state.customSpendLimit,
      error: error
    }))))));
  }

  validateSpendLimit() {
    const {
      t
    } = this.context;
    const {
      decimals,
      requiredMinimum
    } = this.props;
    const {
      selectedOptionIsUnlimited,
      customSpendLimit
    } = this.state;

    if (selectedOptionIsUnlimited || !customSpendLimit) {
      return undefined;
    }

    let customSpendLimitNumber;

    try {
      customSpendLimitNumber = new _bignumber.default(customSpendLimit);
    } catch (error) {
      _loglevel.default.debug(`Error converting '${customSpendLimit}' to BigNumber:`, error);

      return t('spendLimitInvalid');
    }

    if (customSpendLimitNumber.isNegative()) {
      return t('spendLimitInvalid');
    }

    const maxTokenAmount = (0, _tokenUtil.calcTokenAmount)(MAX_UNSIGNED_256_INT, decimals);

    if (customSpendLimitNumber.greaterThan(maxTokenAmount)) {
      return t('spendLimitTooLarge');
    }

    if (requiredMinimum !== undefined && customSpendLimitNumber.lessThan(requiredMinimum)) {
      return t('spendLimitInsufficient');
    }

    return undefined;
  }

  render() {
    const {
      t
    } = this.context;
    const {
      setCustomAmount,
      hideModal,
      customTokenAmount
    } = this.props;
    const {
      selectedOptionIsUnlimited,
      customSpendLimit
    } = this.state;
    const error = this.validateSpendLimit();
    const disabled = Boolean(customSpendLimit === customTokenAmount && !selectedOptionIsUnlimited || error);
    return /*#__PURE__*/_react.default.createElement(_modal.default, {
      onSubmit: () => {
        setCustomAmount(selectedOptionIsUnlimited ? '' : customSpendLimit);
        hideModal();
      },
      submitText: t('save'),
      contentClass: "edit-approval-permission-modal-content",
      containerClass: "edit-approval-permission-modal-container",
      submitDisabled: disabled
    }, this.renderModalContent(error));
  }

}

exports.default = EditApprovalPermission;
(0, _defineProperty2.default)(EditApprovalPermission, "propTypes", {
  decimals: _propTypes.default.number,
  hideModal: _propTypes.default.func.isRequired,
  selectedIdentity: _propTypes.default.object,
  tokenAmount: _propTypes.default.string,
  customTokenAmount: _propTypes.default.string,
  tokenSymbol: _propTypes.default.string,
  tokenBalance: _propTypes.default.string,
  setCustomAmount: _propTypes.default.func,
  origin: _propTypes.default.string.isRequired,
  requiredMinimum: _propTypes.default.instanceOf(_bignumber.default)
});
(0, _defineProperty2.default)(EditApprovalPermission, "contextTypes", {
  t: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\edit-approval-permission\\edit-approval-permission.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\transaction-confirmed\\transaction-confirmed.component.js", {"../../modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\transaction-confirmed\transaction-confirmed.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _modal = _interopRequireDefault(require("../../modal"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class TransactionConfirmed extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "handleSubmit", () => {
      const {
        hideModal,
        onSubmit
      } = this.props;
      hideModal();

      if (onSubmit && typeof onSubmit === 'function') {
        onSubmit();
      }
    });
  }

  render() {
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement(_modal.default, {
      onSubmit: this.handleSubmit,
      submitText: t('ok')
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "transaction-confirmed__content"
    }, /*#__PURE__*/_react.default.createElement("img", {
      src: "images/check-icon.svg",
      alt: ""
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "transaction-confirmed__title"
    }, `${t('confirmed')}!`), /*#__PURE__*/_react.default.createElement("div", {
      className: "transaction-confirmed__description"
    }, t('initialTransactionConfirmed'))));
  }

}

exports.default = TransactionConfirmed;
(0, _defineProperty2.default)(TransactionConfirmed, "contextTypes", {
  t: _propTypes.default.func
});
(0, _defineProperty2.default)(TransactionConfirmed, "propTypes", {
  onSubmit: _propTypes.default.func,
  hideModal: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\transaction-confirmed\\transaction-confirmed.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\metametrics-opt-in-modal\\metametrics-opt-in-modal.component.js", {"../../../ui/metafox-logo":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\metafox-logo\\index.js","../../../ui/page-container/page-container-footer":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-footer\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\metametrics-opt-in-modal\metametrics-opt-in-modal.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _metafoxLogo = _interopRequireDefault(require("../../../ui/metafox-logo"));

var _pageContainerFooter = _interopRequireDefault(require("../../../ui/page-container/page-container-footer"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class MetaMetricsOptInModal extends _react.Component {
  render() {
    const {
      metricsEvent,
      t
    } = this.context;
    const {
      setParticipateInMetaMetrics,
      hideModal
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in metametrics-opt-in-modal"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__main"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__content"
    }, /*#__PURE__*/_react.default.createElement(_metafoxLogo.default, null), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__body-graphic"
    }, /*#__PURE__*/_react.default.createElement("img", {
      src: "images/metrics-chart.svg",
      alt: ""
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__title"
    }, t('metametricsHelpImproveMetaMask')), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__body"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__description"
    }, t('metametricsOptInDescription')), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__description"
    }, t('metametricsCommitmentsIntro')), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__committments"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row"
    }, /*#__PURE__*/_react.default.createElement("i", {
      className: "fa fa-check"
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row-description"
    }, t('metametricsCommitmentsAllowOptOut'))), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row"
    }, /*#__PURE__*/_react.default.createElement("i", {
      className: "fa fa-check"
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row-description"
    }, t('metametricsCommitmentsSendAnonymizedEvents'))), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row metametrics-opt-in__break-row"
    }, /*#__PURE__*/_react.default.createElement("i", {
      className: "fa fa-times"
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row-description"
    }, t('metametricsCommitmentsNeverCollectKeysEtc', [/*#__PURE__*/_react.default.createElement("span", {
      className: "metametrics-opt-in__bold",
      key: "neverCollectKeys"
    }, t('metametricsCommitmentsBoldNever'))]))), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row"
    }, /*#__PURE__*/_react.default.createElement("i", {
      className: "fa fa-times"
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row-description"
    }, t('metametricsCommitmentsNeverCollectIP', [/*#__PURE__*/_react.default.createElement("span", {
      className: "metametrics-opt-in__bold",
      key: "neverCollectIP"
    }, t('metametricsCommitmentsBoldNever'))]))), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row"
    }, /*#__PURE__*/_react.default.createElement("i", {
      className: "fa fa-times"
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__row-description"
    }, t('metametricsCommitmentsNeverSellDataForProfit', [/*#__PURE__*/_react.default.createElement("span", {
      className: "metametrics-opt-in__bold",
      key: "neverSellData"
    }, t('metametricsCommitmentsBoldNever'))]))))), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__bottom-text"
    }, t('gdprMessage', [/*#__PURE__*/_react.default.createElement("a", {
      key: "metametrics-bottom-text-wrapper",
      href: "https://metamask.io/privacy.html",
      target: "_blank",
      rel: "noopener noreferrer"
    }, t('gdprMessagePrivacyPolicy'))]))), /*#__PURE__*/_react.default.createElement("div", {
      className: "metametrics-opt-in__footer"
    }, /*#__PURE__*/_react.default.createElement(_pageContainerFooter.default, {
      onCancel: () => {
        setParticipateInMetaMetrics(false).then(() => {
          metricsEvent({
            eventOpts: {
              category: 'Onboarding',
              action: 'Metrics Option',
              name: 'Metrics Opt Out'
            },
            isOptIn: true
          }, {
            excludeMetaMetricsId: true
          });
          hideModal();
        });
      },
      cancelText: t('noThanks'),
      hideCancel: false,
      onSubmit: () => {
        setParticipateInMetaMetrics(true).then(() => {
          metricsEvent({
            eventOpts: {
              category: 'Onboarding',
              action: 'Metrics Option',
              name: 'Metrics Opt In'
            },
            isOptIn: true
          });
          hideModal();
        });
      },
      submitText: t('affirmAgree'),
      disabled: false
    }))));
  }

}

exports.default = MetaMetricsOptInModal;
(0, _defineProperty2.default)(MetaMetricsOptInModal, "propTypes", {
  setParticipateInMetaMetrics: _propTypes.default.func,
  hideModal: _propTypes.default.func
});
(0, _defineProperty2.default)(MetaMetricsOptInModal, "contextTypes", {
  metricsEvent: _propTypes.default.func,
  t: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\metametrics-opt-in-modal\\metametrics-opt-in-modal.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\confirm-reset-account\\confirm-reset-account.component.js", {"../../modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\confirm-reset-account\confirm-reset-account.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _modal = _interopRequireWildcard(require("../../modal"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class ConfirmResetAccount extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "handleReset", () => {
      this.props.resetAccount().then(() => this.props.hideModal());
    });
  }

  render() {
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement(_modal.default, {
      onSubmit: this.handleReset,
      onCancel: () => this.props.hideModal(),
      submitText: t('reset'),
      cancelText: t('nevermind'),
      submitType: "danger-primary"
    }, /*#__PURE__*/_react.default.createElement(_modal.ModalContent, {
      title: `${t('resetAccount')}?`,
      description: t('resetAccountDescription')
    }));
  }

}

exports.default = ConfirmResetAccount;
(0, _defineProperty2.default)(ConfirmResetAccount, "propTypes", {
  hideModal: _propTypes.default.func.isRequired,
  resetAccount: _propTypes.default.func.isRequired
});
(0, _defineProperty2.default)(ConfirmResetAccount, "contextTypes", {
  t: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\confirm-reset-account\\confirm-reset-account.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\confirm-delete-network\\confirm-delete-network.component.js", {"../../modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\confirm-delete-network\confirm-delete-network.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _modal = _interopRequireWildcard(require("../../modal"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class ConfirmDeleteNetwork extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "handleDelete", () => {
      this.props.delRpcTarget(this.props.target).then(() => {
        this.props.onConfirm();
        this.props.hideModal();
      });
    });
  }

  render() {
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement(_modal.default, {
      onSubmit: this.handleDelete,
      onCancel: () => this.props.hideModal(),
      submitText: t('delete'),
      cancelText: t('cancel'),
      submitType: "danger-primary"
    }, /*#__PURE__*/_react.default.createElement(_modal.ModalContent, {
      title: t('deleteNetwork'),
      description: t('deleteNetworkDescription')
    }));
  }

}

exports.default = ConfirmDeleteNetwork;
(0, _defineProperty2.default)(ConfirmDeleteNetwork, "propTypes", {
  hideModal: _propTypes.default.func.isRequired,
  delRpcTarget: _propTypes.default.func.isRequired,
  onConfirm: _propTypes.default.func.isRequired,
  target: _propTypes.default.string.isRequired
});
(0, _defineProperty2.default)(ConfirmDeleteNetwork, "contextTypes", {
  t: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\confirm-delete-network\\confirm-delete-network.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\reject-transactions\\reject-transactions.component.js", {"../../modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\reject-transactions\reject-transactions.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _modal = _interopRequireDefault(require("../../modal"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class RejectTransactionsModal extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "onSubmit", async () => {
      const {
        onSubmit,
        hideModal
      } = this.props;
      await onSubmit();
      hideModal();
    });
  }

  render() {
    const {
      t
    } = this.context;
    const {
      hideModal,
      unapprovedTxCount
    } = this.props;
    return /*#__PURE__*/_react.default.createElement(_modal.default, {
      headerText: t('rejectTxsN', [unapprovedTxCount]),
      onClose: hideModal,
      onSubmit: this.onSubmit,
      onCancel: hideModal,
      submitText: t('rejectAll'),
      cancelText: t('cancel')
    }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("div", {
      className: "reject-transactions__description"
    }, t('rejectTxsDescription', [unapprovedTxCount]))));
  }

}

exports.default = RejectTransactionsModal;
(0, _defineProperty2.default)(RejectTransactionsModal, "contextTypes", {
  t: _propTypes.default.func.isRequired
});
(0, _defineProperty2.default)(RejectTransactionsModal, "propTypes", {
  onSubmit: _propTypes.default.func.isRequired,
  hideModal: _propTypes.default.func.isRequired,
  unapprovedTxCount: _propTypes.default.number.isRequired
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\reject-transactions\\reject-transactions.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\add-to-addressbook-modal\\add-to-addressbook-modal.component.js", {"../../../ui/button/button.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\button.component.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\add-to-addressbook-modal\add-to-addressbook-modal.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _button = _interopRequireDefault(require("../../../ui/button/button.component"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class AddToAddressBookModal extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      alias: ''
    });
    (0, _defineProperty2.default)(this, "onSave", async () => {
      const {
        recipient,
        addToAddressBook,
        hideModal
      } = this.props;
      await addToAddressBook(recipient, this.state.alias);
      hideModal();
    });
    (0, _defineProperty2.default)(this, "onChange", e => {
      this.setState({
        alias: e.target.value
      });
    });
    (0, _defineProperty2.default)(this, "onKeyPress", async e => {
      if (e.key === 'Enter' && this.state.alias) {
        this.onSave();
      }
    });
  }

  render() {
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "add-to-address-book-modal"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "add-to-address-book-modal__content"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "add-to-address-book-modal__content__header"
    }, t('addToAddressBook')), /*#__PURE__*/_react.default.createElement("div", {
      className: "add-to-address-book-modal__input-label"
    }, t('enterAnAlias')), /*#__PURE__*/_react.default.createElement("input", {
      type: "text",
      className: "add-to-address-book-modal__input",
      placeholder: t('addToAddressBookModalPlaceholder'),
      onChange: this.onChange,
      onKeyPress: this.onKeyPress,
      value: this.state.alias,
      autoFocus: true
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "add-to-address-book-modal__footer"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "secondary",
      onClick: this.props.hideModal
    }, t('cancel')), /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "primary",
      onClick: this.onSave,
      disabled: !this.state.alias
    }, t('save'))));
  }

}

exports.default = AddToAddressBookModal;
(0, _defineProperty2.default)(AddToAddressBookModal, "contextTypes", {
  t: _propTypes.default.func
});
(0, _defineProperty2.default)(AddToAddressBookModal, "propTypes", {
  hideModal: _propTypes.default.func.isRequired,
  addToAddressBook: _propTypes.default.func.isRequired,
  recipient: _propTypes.default.string.isRequired
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\add-to-addressbook-modal\\add-to-addressbook-modal.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\new-account-modal\\new-account-modal.component.js", {"../../../ui/button/button.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\button.component.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\new-account-modal\new-account-modal.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _button = _interopRequireDefault(require("../../../ui/button/button.component"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class NewAccountModal extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      alias: this.context.t('newAccountNumberName', [this.props.newAccountNumber])
    });
    (0, _defineProperty2.default)(this, "onChange", e => {
      this.setState({
        alias: e.target.value
      });
    });
    (0, _defineProperty2.default)(this, "onSubmit", () => {
      this.props.onSave(this.state.alias).then(this.props.hideModal);
    });
    (0, _defineProperty2.default)(this, "onKeyPress", e => {
      if (e.key === 'Enter' && this.state.alias) {
        this.onSubmit();
      }
    });
  }

  render() {
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "new-account-modal"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "new-account-modal__content"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "new-account-modal__content__header"
    }, t('newAccount'), /*#__PURE__*/_react.default.createElement("button", {
      className: "fas fa-times new-account-modal__content__header-close",
      title: t('close'),
      onClick: this.props.hideModal
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "new-account-modal__input-label"
    }, t('accountName')), /*#__PURE__*/_react.default.createElement("input", {
      type: "text",
      className: "new-account-modal__input",
      onChange: this.onChange,
      onKeyPress: this.onKeyPress,
      value: this.state.alias,
      autoFocus: true
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "new-account-modal__footer"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "secondary",
      onClick: this.props.hideModal
    }, t('cancel')), /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "primary",
      onClick: this.onSubmit,
      disabled: !this.state.alias
    }, t('save'))));
  }

}

exports.default = NewAccountModal;
(0, _defineProperty2.default)(NewAccountModal, "contextTypes", {
  t: _propTypes.default.func
});
(0, _defineProperty2.default)(NewAccountModal, "propTypes", {
  hideModal: _propTypes.default.func.isRequired,
  newAccountNumber: _propTypes.default.number.isRequired,
  onSave: _propTypes.default.func.isRequired
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\new-account-modal\\new-account-modal.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\higher-order-components\\with-modal-props\\with-modal-props.js", {"../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\helpers\higher-order-components\with-modal-props\with-modal-props.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = withModalProps;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactRedux = require("react-redux");

var _actions = require("../../../store/actions");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const mapStateToProps = state => {
  const {
    appState
  } = state;
  const {
    props: modalProps
  } = appState.modal.modalState;
  return _objectSpread({}, modalProps);
};

const mapDispatchToProps = dispatch => {
  return {
    hideModal: () => dispatch((0, _actions.hideModal)())
  };
};

function withModalProps(Component) {
  return (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Component);
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\higher-order-components\\with-modal-props\\with-modal-props.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\modal.component.js", {"../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modal\modal.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _button = _interopRequireDefault(require("../../ui/button"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class Modal extends _react.PureComponent {
  render() {
    const {
      children,
      headerText,
      onClose,
      onSubmit,
      submitType,
      submitText,
      submitDisabled,
      onCancel,
      cancelType,
      cancelText,
      contentClass,
      containerClass,
      hideFooter
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('modal-container', containerClass)
    }, headerText && /*#__PURE__*/_react.default.createElement("div", {
      className: "modal-container__header"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "modal-container__header-text"
    }, headerText), /*#__PURE__*/_react.default.createElement("div", {
      className: "modal-container__header-close",
      onClick: onClose
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('modal-container__content', contentClass)
    }, children), hideFooter ? null : /*#__PURE__*/_react.default.createElement("div", {
      className: "modal-container__footer"
    }, onCancel && /*#__PURE__*/_react.default.createElement(_button.default, {
      type: cancelType,
      onClick: onCancel,
      className: "modal-container__footer-button"
    }, cancelText), /*#__PURE__*/_react.default.createElement(_button.default, {
      type: submitType,
      onClick: onSubmit,
      disabled: submitDisabled,
      className: "modal-container__footer-button"
    }, submitText)));
  }

}

exports.default = Modal;
(0, _defineProperty2.default)(Modal, "propTypes", {
  children: _propTypes.default.node,
  contentClass: _propTypes.default.string,
  containerClass: _propTypes.default.string,
  // Header text
  headerText: _propTypes.default.string,
  onClose: _propTypes.default.func,
  // Submit button (right button)
  onSubmit: _propTypes.default.func,
  submitType: _propTypes.default.string,
  submitText: _propTypes.default.string,
  submitDisabled: _propTypes.default.bool,
  hideFooter: _propTypes.default.bool,
  // Cancel button (left button)
  onCancel: _propTypes.default.func,
  cancelType: _propTypes.default.string,
  cancelText: _propTypes.default.string
});
(0, _defineProperty2.default)(Modal, "defaultProps", {
  submitType: 'primary',
  cancelType: 'secondary'
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\modal.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\modal-content\\index.js", {"./modal-content.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\modal-content\\modal-content.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modal\modal-content\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _modalContent.default;
  }
});

var _modalContent = _interopRequireDefault(require("./modal-content.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\modal-content\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\account-details-modal\\account-details-modal.component.js", {"../../../../helpers/utils/hardware":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\hardware.js","../../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../../ui/editable-label":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\editable-label\\index.js","../../../ui/qr-code":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\qr-code\\index.js","../account-modal-container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\account-modal-container\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@metamask/etherscan-link":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\etherscan-link\\dist\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\account-details-modal\account-details-modal.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _etherscanLink = require("@metamask/etherscan-link");

var _accountModalContainer = _interopRequireDefault(require("../account-modal-container"));

var _qrCode = _interopRequireDefault(require("../../../ui/qr-code"));

var _editableLabel = _interopRequireDefault(require("../../../ui/editable-label"));

var _button = _interopRequireDefault(require("../../../ui/button"));

var _util = require("../../../../helpers/utils/util");

var _hardware = require("../../../../helpers/utils/hardware");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class AccountDetailsModal extends _react.Component {
  render() {
    const {
      selectedIdentity,
      chainId,
      showExportPrivateKeyModal,
      setAccountLabel,
      keyrings,
      rpcPrefs,
      accounts
    } = this.props;
    const {
      name,
      address
    } = selectedIdentity;
    const keyring = keyrings.find(kr => {
      return kr.accounts.includes(address);
    });

    const getAccountsNames = (allAccounts, currentName) => {
      return Object.values(allAccounts).map(item => item.name).filter(itemName => itemName !== currentName);
    };

    let exportPrivateKeyFeatureEnabled = true; // This feature is disabled for hardware wallets

    if ((0, _hardware.isHardwareKeyring)(keyring === null || keyring === void 0 ? void 0 : keyring.type)) {
      exportPrivateKeyFeatureEnabled = false;
    }

    return /*#__PURE__*/_react.default.createElement(_accountModalContainer.default, {
      className: "account-details-modal"
    }, /*#__PURE__*/_react.default.createElement(_editableLabel.default, {
      className: "account-details-modal__name",
      defaultValue: name,
      onSubmit: label => setAccountLabel(address, label),
      accountsNames: getAccountsNames(accounts, name)
    }), /*#__PURE__*/_react.default.createElement(_qrCode.default, {
      Qr: {
        data: address
      }
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "account-details-modal__divider"
    }), /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "secondary",
      className: "account-details-modal__button",
      onClick: () => {
        const accountLink = (0, _etherscanLink.getAccountLink)(address, chainId, rpcPrefs);
        this.context.trackEvent({
          category: 'Navigation',
          event: 'Clicked Block Explorer Link',
          properties: {
            link_type: 'Account Tracker',
            action: 'Account Details Modal',
            block_explorer_domain: (0, _util.getURLHostName)(accountLink)
          }
        });
        global.platform.openTab({
          url: accountLink
        });
      }
    }, rpcPrefs.blockExplorerUrl ? this.context.t('blockExplorerView', [(0, _util.getURLHostName)(rpcPrefs.blockExplorerUrl)]) : this.context.t('etherscanViewOn')), exportPrivateKeyFeatureEnabled ? /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "secondary",
      className: "account-details-modal__button",
      onClick: () => showExportPrivateKeyModal()
    }, this.context.t('exportPrivateKey')) : null);
  }

}

exports.default = AccountDetailsModal;
(0, _defineProperty2.default)(AccountDetailsModal, "propTypes", {
  selectedIdentity: _propTypes.default.object,
  chainId: _propTypes.default.string,
  showExportPrivateKeyModal: _propTypes.default.func,
  setAccountLabel: _propTypes.default.func,
  keyrings: _propTypes.default.array,
  rpcPrefs: _propTypes.default.object,
  accounts: _propTypes.default.array
});
(0, _defineProperty2.default)(AccountDetailsModal, "contextTypes", {
  t: _propTypes.default.func,
  trackEvent: _propTypes.default.func
});


      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\account-details-modal\\account-details-modal.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\export-private-key-modal\\export-private-key-modal.component.js", {"../../../../../shared/modules/hexstring-utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\hexstring-utils.js","../../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../../ui/readonly-input":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\readonly-input\\index.js","../account-modal-container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\account-modal-container\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","copy-to-clipboard":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\copy-to-clipboard\\index.js","ethereumjs-util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\ethereumjs-util\\dist.browser\\index.js","loglevel":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\loglevel\\lib\\loglevel.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\export-private-key-modal\export-private-key-modal.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _loglevel = _interopRequireDefault(require("loglevel"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _ethereumjsUtil = require("ethereumjs-util");

var _copyToClipboard = _interopRequireDefault(require("copy-to-clipboard"));

var _readonlyInput = _interopRequireDefault(require("../../../ui/readonly-input"));

var _button = _interopRequireDefault(require("../../../ui/button"));

var _accountModalContainer = _interopRequireDefault(require("../account-modal-container"));

var _hexstringUtils = require("../../../../../shared/modules/hexstring-utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class ExportPrivateKeyModal extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      password: '',
      privateKey: null,
      showWarning: true
    });
    (0, _defineProperty2.default)(this, "exportAccountAndGetPrivateKey", (password, address) => {
      const {
        exportAccount
      } = this.props;
      exportAccount(password, address).then(privateKey => this.setState({
        privateKey,
        showWarning: false
      })).catch(e => _loglevel.default.error(e));
    });
  }

  componentWillUnmount() {
    this.props.clearAccountDetails();
    this.props.hideWarning();
  }

  renderPasswordLabel(privateKey) {
    return /*#__PURE__*/_react.default.createElement("span", {
      className: "export-private-key-modal__password-label"
    }, privateKey ? this.context.t('copyPrivateKey') : this.context.t('typePassword'));
  }

  renderPasswordInput(privateKey) {
    const plainKey = privateKey && (0, _ethereumjsUtil.stripHexPrefix)(privateKey);

    if (!privateKey) {
      return /*#__PURE__*/_react.default.createElement("input", {
        type: "password",
        className: "export-private-key-modal__password-input",
        onChange: event => this.setState({
          password: event.target.value
        })
      });
    }

    return /*#__PURE__*/_react.default.createElement(_readonlyInput.default, {
      wrapperClass: "export-private-key-modal__password-display-wrapper",
      inputClass: "export-private-key-modal__password-display-textarea",
      textarea: true,
      value: plainKey,
      onClick: () => (0, _copyToClipboard.default)(plainKey)
    });
  }

  renderButtons(privateKey, address, hideModal) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "export-private-key-modal__buttons"
    }, !privateKey && /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "secondary",
      large: true,
      className: "export-private-key-modal__button export-private-key-modal__button--cancel",
      onClick: () => hideModal()
    }, this.context.t('cancel')), privateKey ? /*#__PURE__*/_react.default.createElement(_button.default, {
      onClick: () => hideModal(),
      type: "primary",
      large: true,
      className: "export-private-key-modal__button"
    }, this.context.t('done')) : /*#__PURE__*/_react.default.createElement(_button.default, {
      onClick: () => this.exportAccountAndGetPrivateKey(this.state.password, address),
      type: "primary",
      large: true,
      className: "export-private-key-modal__button",
      disabled: !this.state.password
    }, this.context.t('confirm')));
  }

  render() {
    const {
      selectedIdentity,
      warning,
      showAccountDetailModal,
      hideModal,
      previousModalState
    } = this.props;
    const {
      name,
      address
    } = selectedIdentity;
    const {
      privateKey,
      showWarning
    } = this.state;
    return /*#__PURE__*/_react.default.createElement(_accountModalContainer.default, {
      className: "export-private-key-modal",
      selectedIdentity: selectedIdentity,
      showBackButton: previousModalState === 'ACCOUNT_DETAILS',
      backButtonAction: () => showAccountDetailModal()
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "export-private-key-modal__account-name"
    }, name), /*#__PURE__*/_react.default.createElement(_readonlyInput.default, {
      wrapperClass: "ellip-address-wrapper",
      value: (0, _hexstringUtils.toChecksumHexAddress)(address)
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "export-private-key-modal__divider"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "export-private-key-modal__body-title"
    }, this.context.t('showPrivateKeys')), /*#__PURE__*/_react.default.createElement("div", {
      className: "export-private-key-modal__password"
    }, this.renderPasswordLabel(privateKey), this.renderPasswordInput(privateKey), showWarning && warning ? /*#__PURE__*/_react.default.createElement("span", {
      className: "export-private-key-modal__password--error"
    }, warning) : null), /*#__PURE__*/_react.default.createElement("div", {
      className: "export-private-key-modal__password--warning"
    }, this.context.t('privateKeyWarning')), this.renderButtons(privateKey, address, hideModal));
  }

}

exports.default = ExportPrivateKeyModal;
(0, _defineProperty2.default)(ExportPrivateKeyModal, "contextTypes", {
  t: _propTypes.default.func
});
(0, _defineProperty2.default)(ExportPrivateKeyModal, "defaultProps", {
  warning: null,
  previousModalState: null
});
(0, _defineProperty2.default)(ExportPrivateKeyModal, "propTypes", {
  exportAccount: _propTypes.default.func.isRequired,
  selectedIdentity: _propTypes.default.object.isRequired,
  warning: _propTypes.default.node,
  showAccountDetailModal: _propTypes.default.func.isRequired,
  hideModal: _propTypes.default.func.isRequired,
  hideWarning: _propTypes.default.func.isRequired,
  clearAccountDetails: _propTypes.default.func.isRequired,
  previousModalState: _propTypes.default.string
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\export-private-key-modal\\export-private-key-modal.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\cancel-transaction\\cancel-transaction.component.js", {"../../../../../shared/constants/transaction":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\transaction.js","../../modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modal\\index.js","./cancel-transaction-gas-fee":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\cancel-transaction\\cancel-transaction-gas-fee\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\modals\cancel-transaction\cancel-transaction.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _modal = _interopRequireDefault(require("../../modal"));

var _transaction = require("../../../../../shared/constants/transaction");

var _cancelTransactionGasFee = _interopRequireDefault(require("./cancel-transaction-gas-fee"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class CancelTransaction extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      busy: false
    });
    (0, _defineProperty2.default)(this, "handleSubmit", async () => {
      const {
        createCancelTransaction,
        hideModal
      } = this.props;
      this.setState({
        busy: true
      });
      await createCancelTransaction();
      this.setState({
        busy: false
      }, () => hideModal());
    });
    (0, _defineProperty2.default)(this, "handleCancel", () => {
      this.props.hideModal();
    });
  }

  componentDidUpdate() {
    const {
      transactionStatus,
      showTransactionConfirmedModal
    } = this.props;

    if (transactionStatus !== _transaction.TRANSACTION_STATUSES.SUBMITTED) {
      showTransactionConfirmedModal();
    }
  }

  render() {
    const {
      t
    } = this.context;
    const {
      newGasFee
    } = this.props;
    const {
      busy
    } = this.state;
    return /*#__PURE__*/_react.default.createElement(_modal.default, {
      headerText: t('attemptToCancel'),
      onClose: this.handleCancel,
      onSubmit: this.handleSubmit,
      onCancel: this.handleCancel,
      submitText: t('yesLetsTry'),
      cancelText: t('nevermind'),
      submitDisabled: busy
    }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("div", {
      className: "cancel-transaction__title"
    }, t('cancellationGasFee')), /*#__PURE__*/_react.default.createElement("div", {
      className: "cancel-transaction__cancel-transaction-gas-fee-container"
    }, /*#__PURE__*/_react.default.createElement(_cancelTransactionGasFee.default, {
      value: newGasFee
    })), /*#__PURE__*/_react.default.createElement("div", {
      className: "cancel-transaction__description"
    }, t('attemptToCancelDescription'))));
  }

}

exports.default = CancelTransaction;
(0, _defineProperty2.default)(CancelTransaction, "contextTypes", {
  t: _propTypes.default.func
});
(0, _defineProperty2.default)(CancelTransaction, "propTypes", {
  createCancelTransaction: _propTypes.default.func,
  hideModal: _propTypes.default.func,
  showTransactionConfirmedModal: _propTypes.default.func,
  transactionStatus: _propTypes.default.string,
  newGasFee: _propTypes.default.string
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\cancel-transaction\\cancel-transaction.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\gas-customization\\gas-modal-page-container\\gas-modal-page-container.component.js", {"../../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","../../../ui/page-container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\index.js","../../../ui/tabs":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tabs\\index.js","./advanced-tab-content":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\gas-customization\\gas-modal-page-container\\advanced-tab-content\\index.js","./basic-tab-content":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\gas-customization\\gas-modal-page-container\\basic-tab-content\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\gas-customization\gas-modal-page-container\gas-modal-page-container.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _pageContainer = _interopRequireDefault(require("../../../ui/page-container"));

var _tabs = require("../../../ui/tabs");

var _actions = require("../../../../store/actions");

var _advancedTabContent = _interopRequireDefault(require("./advanced-tab-content"));

var _basicTabContent = _interopRequireDefault(require("./basic-tab-content"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class GasModalPageContainer extends _react.Component {
  constructor(props) {
    super(props);
    (0, _defineProperty2.default)(this, "_beforeUnload", () => {
      this._isMounted = false;

      if (this.state.pollingToken) {
        (0, _actions.disconnectGasFeeEstimatePoller)(this.state.pollingToken);
        (0, _actions.removePollingTokenFromAppState)(this.state.pollingToken);
      }
    });
    this.state = {
      pollingToken: undefined
    };
  }

  componentDidMount() {
    this._isMounted = true;
    (0, _actions.getGasFeeEstimatesAndStartPolling)().then(pollingToken => {
      if (this._isMounted) {
        (0, _actions.addPollingTokenToAppState)(pollingToken);
        this.setState({
          pollingToken
        });
      } else {
        (0, _actions.disconnectGasFeeEstimatePoller)(pollingToken);
        (0, _actions.removePollingTokenFromAppState)(pollingToken);
      }
    });
    window.addEventListener('beforeunload', this._beforeUnload);
  }

  componentWillUnmount() {
    this._beforeUnload();

    window.removeEventListener('beforeunload', this._beforeUnload);
  }

  renderBasicTabContent(gasPriceButtonGroupProps) {
    return /*#__PURE__*/_react.default.createElement(_basicTabContent.default, {
      gasPriceButtonGroupProps: gasPriceButtonGroupProps
    });
  }

  renderAdvancedTabContent() {
    const {
      updateCustomGasPrice,
      updateCustomGasLimit,
      customModalGasPriceInHex,
      customModalGasLimitInHex,
      insufficientBalance,
      customPriceIsSafe,
      isSpeedUp,
      isRetry,
      customPriceIsExcessive,
      infoRowProps: {
        transactionFee
      }
    } = this.props;
    return /*#__PURE__*/_react.default.createElement(_advancedTabContent.default, {
      updateCustomGasPrice: updateCustomGasPrice,
      updateCustomGasLimit: updateCustomGasLimit,
      customModalGasPriceInHex: customModalGasPriceInHex,
      customModalGasLimitInHex: customModalGasLimitInHex,
      transactionFee: transactionFee,
      insufficientBalance: insufficientBalance,
      customPriceIsSafe: customPriceIsSafe,
      isSpeedUp: isSpeedUp,
      isRetry: isRetry,
      customPriceIsExcessive: customPriceIsExcessive
    });
  }

  renderInfoRows(newTotalFiat, newTotalEth, sendAmount, transactionFee) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row-wrapper"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row__send-info"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__send-info__label"
    }, this.context.t('sendAmount')), /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__send-info__value"
    }, sendAmount)), /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row__transaction-info"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__transaction-info__label"
    }, this.context.t('transactionFee')), /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__transaction-info__value"
    }, transactionFee)), /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row__total-info"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__total-info__label"
    }, this.context.t('newTotal')), /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__total-info__value"
    }, newTotalEth)), /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row__fiat-total-info"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__fiat-total-info__value"
    }, newTotalFiat))));
  }

  renderTabs() {
    const {
      gasPriceButtonGroupProps,
      hideBasic,
      infoRowProps: {
        newTotalFiat,
        newTotalEth,
        sendAmount,
        transactionFee
      }
    } = this.props;
    let tabsToRender;

    if (hideBasic) {
      tabsToRender = [{
        name: this.context.t('advanced'),
        content: this.renderAdvancedTabContent()
      }];
    } else {
      tabsToRender = [{
        name: this.context.t('basic'),
        content: this.renderBasicTabContent(gasPriceButtonGroupProps)
      }, {
        name: this.context.t('advanced'),
        content: this.renderAdvancedTabContent()
      }];
    }

    return /*#__PURE__*/_react.default.createElement(_tabs.Tabs, null, tabsToRender.map(({
      name,
      content
    }, i) => /*#__PURE__*/_react.default.createElement(_tabs.Tab, {
      name: name,
      key: `gas-modal-tab-${i}`
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content"
    }, content, this.renderInfoRows(newTotalFiat, newTotalEth, sendAmount, transactionFee)))));
  }

  render() {
    const {
      cancelAndClose,
      onSubmit,
      customModalGasPriceInHex,
      customModalGasLimitInHex,
      disableSave,
      isSpeedUp
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-page-container"
    }, /*#__PURE__*/_react.default.createElement(_pageContainer.default, {
      title: this.context.t('customGas'),
      subtitle: this.context.t('customGasSubTitle'),
      tabsComponent: this.renderTabs(),
      disabled: disableSave,
      onCancel: () => cancelAndClose(),
      onClose: () => cancelAndClose(),
      onSubmit: () => {
        if (isSpeedUp) {
          this.context.metricsEvent({
            eventOpts: {
              category: 'Navigation',
              action: 'Activity Log',
              name: 'Saved "Speed Up"'
            }
          });
        }

        onSubmit(customModalGasLimitInHex, customModalGasPriceInHex);
      },
      submitText: this.context.t('save'),
      headerCloseText: this.context.t('close'),
      hideCancel: true
    }));
  }

}

exports.default = GasModalPageContainer;
(0, _defineProperty2.default)(GasModalPageContainer, "contextTypes", {
  t: _propTypes.default.func,
  metricsEvent: _propTypes.default.func,
  trackEvent: _propTypes.default.func
});
(0, _defineProperty2.default)(GasModalPageContainer, "propTypes", {
  hideBasic: _propTypes.default.bool,
  updateCustomGasPrice: _propTypes.default.func,
  updateCustomGasLimit: _propTypes.default.func,
  insufficientBalance: _propTypes.default.bool,
  gasPriceButtonGroupProps: _propTypes.default.object,
  infoRowProps: _propTypes.default.shape({
    originalTotalFiat: _propTypes.default.string,
    originalTotalEth: _propTypes.default.string,
    newTotalFiat: _propTypes.default.string,
    newTotalEth: _propTypes.default.string,
    sendAmount: _propTypes.default.string,
    transactionFee: _propTypes.default.string
  }),
  onSubmit: _propTypes.default.func,
  customModalGasPriceInHex: _propTypes.default.string,
  customModalGasLimitInHex: _propTypes.default.string,
  cancelAndClose: _propTypes.default.func,
  customPriceIsSafe: _propTypes.default.bool,
  isSpeedUp: _propTypes.default.bool,
  isRetry: _propTypes.default.bool,
  disableSave: _propTypes.default.bool,
  customPriceIsExcessive: _propTypes.default.bool.isRequired
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\gas-customization\\gas-modal-page-container\\gas-modal-page-container.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\swaps-gas-customization-modal\\swaps-gas-customization-modal.component.js", {"../../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../components/app/gas-customization/advanced-gas-inputs":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\gas-customization\\advanced-gas-inputs\\index.js","../../../components/app/gas-customization/gas-modal-page-container/basic-tab-content":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\gas-customization\\gas-modal-page-container\\basic-tab-content\\index.js","../../../components/ui/page-container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\index.js","../../../components/ui/tabs":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tabs\\index.js","../../../helpers/constants/common":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\common.js","../../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../send/send.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send.utils.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\swaps-gas-customization-modal\swaps-gas-customization-modal.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _pageContainer = _interopRequireDefault(require("../../../components/ui/page-container"));

var _tabs = require("../../../components/ui/tabs");

var _send = require("../../send/send.utils");

var _conversions = require("../../../helpers/utils/conversions.util");

var _advancedGasInputs = _interopRequireDefault(require("../../../components/app/gas-customization/advanced-gas-inputs"));

var _basicTabContent = _interopRequireDefault(require("../../../components/app/gas-customization/gas-modal-page-container/basic-tab-content"));

var _common = require("../../../helpers/constants/common");

var _gas = require("../../../../shared/constants/gas");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

class GasModalPageContainer extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      gasSpeedType: ''
    });
  }

  setGasSpeedType(gasEstimateType) {
    if (gasEstimateType === _common.GAS_ESTIMATE_TYPES.AVERAGE) {
      this.setState({
        gasSpeedType: 'average'
      });
    } else {
      this.setState({
        gasSpeedType: 'fast'
      });
    }
  }

  renderBasicTabContent(gasPriceButtonGroupProps) {
    return /*#__PURE__*/_react.default.createElement(_basicTabContent.default, {
      gasPriceButtonGroupProps: _objectSpread(_objectSpread({}, gasPriceButtonGroupProps), {}, {
        handleGasPriceSelection: ({
          gasPrice,
          gasEstimateType
        }) => {
          this.setGasSpeedType(gasEstimateType);
          this.props.setSwapsCustomizationModalPrice(gasPrice);
        }
      })
    });
  }

  renderAdvancedTabContent() {
    const {
      insufficientBalance,
      showCustomPriceTooLowWarning,
      infoRowProps: {
        transactionFee
      },
      customGasLimitMessage,
      setSwapsCustomizationModalPrice,
      setSwapsCustomizationModalLimit,
      customGasPrice,
      customGasLimit,
      minimumGasLimit
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "advanced-tab"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "advanced-tab__transaction-data-summary"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "advanced-tab__transaction-data-summary__titles"
    }, /*#__PURE__*/_react.default.createElement("span", null, this.context.t('newTransactionFee'))), /*#__PURE__*/_react.default.createElement("div", {
      className: "advanced-tab__transaction-data-summary__container"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "advanced-tab__transaction-data-summary__fee"
    }, transactionFee))), /*#__PURE__*/_react.default.createElement("div", {
      className: "advanced-tab__fee-chart"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "advanced-tab__gas-inputs"
    }, /*#__PURE__*/_react.default.createElement(_advancedGasInputs.default, {
      updateCustomGasPrice: updatedPrice => {
        this.setState({
          gasSpeedType: _gas.CUSTOM_GAS_ESTIMATE
        });
        setSwapsCustomizationModalPrice(updatedPrice);
      },
      updateCustomGasLimit: updatedLimit => {
        this.setState({
          gasSpeedType: _gas.CUSTOM_GAS_ESTIMATE
        });
        setSwapsCustomizationModalLimit(updatedLimit);
      },
      customGasPrice: customGasPrice,
      customGasLimit: customGasLimit,
      insufficientBalance: insufficientBalance,
      customPriceIsSafe: !showCustomPriceTooLowWarning,
      customGasLimitMessage: customGasLimitMessage,
      minimumGasLimit: minimumGasLimit
    }))));
  }

  renderInfoRows(newTotalFiat, newTotalEth, sendAmount, transactionFee, extraInfoRow) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row-wrapper"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row__send-info",
      "data-testid": "gas-modal-content__info-row__send-info"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__send-info__label"
    }, this.context.t('sendAmount')), /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__send-info__value"
    }, sendAmount)), /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row__transaction-info",
      "data-testid": "gas-modal-content__info-row__transaction-info"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__transaction-info__label"
    }, this.context.t('transactionFee')), /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__transaction-info__value"
    }, transactionFee)), extraInfoRow && /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row__transaction-info"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__transaction-info__label"
    }, extraInfoRow.label), /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__transaction-info__value"
    }, extraInfoRow.value)), /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row__total-info",
      "data-testid": "gas-modal-content__info-row__total-info"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__total-info__label"
    }, this.context.t('newTotal')), /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__total-info__value"
    }, newTotalEth)), /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content__info-row__fiat-total-info"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "gas-modal-content__info-row__fiat-total-info__value"
    }, newTotalFiat))));
  }

  renderTabs() {
    const {
      gasPriceButtonGroupProps,
      infoRowProps: {
        newTotalFiat,
        newTotalEth,
        sendAmount,
        transactionFee,
        extraInfoRow
      },
      gasEstimateLoadingHasFailed
    } = this.props;
    const basicTabInfo = {
      name: this.context.t('basic'),
      content: this.renderBasicTabContent(_objectSpread(_objectSpread({}, gasPriceButtonGroupProps), {}, {
        handleGasPriceSelection: this.props.setSwapsCustomizationModalPrice
      }))
    };
    const advancedTabInfo = {
      name: this.context.t('advanced'),
      content: this.renderAdvancedTabContent()
    };
    const tabsToRender = gasEstimateLoadingHasFailed ? [advancedTabInfo] : [basicTabInfo, advancedTabInfo];
    return /*#__PURE__*/_react.default.createElement(_tabs.Tabs, null, tabsToRender.map(({
      name,
      content
    }, i) => /*#__PURE__*/_react.default.createElement(_tabs.Tab, {
      name: name,
      key: `gas-modal-tab-${i}`
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-content"
    }, content, this.renderInfoRows(newTotalFiat, newTotalEth, sendAmount, transactionFee, extraInfoRow)))));
  }

  render() {
    const {
      cancelAndClose,
      onSubmit,
      disableSave,
      customGasPrice,
      customGasLimit
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "gas-modal-page-container"
    }, /*#__PURE__*/_react.default.createElement(_pageContainer.default, {
      title: this.context.t('customGas'),
      subtitle: this.context.t('customGasSubTitle'),
      tabsComponent: this.renderTabs(),
      disabled: disableSave,
      onCancel: () => cancelAndClose(),
      onClose: () => cancelAndClose(),
      onSubmit: () => {
        var _sumHexWEIsToUnformat;

        const newSwapGasTotal = (0, _send.calcGasTotal)(customGasLimit, customGasPrice);
        this.context.trackEvent({
          event: 'Gas Fees Changed',
          category: 'swaps',
          properties: {
            speed_set: this.state.gasSpeedType,
            gas_fees: (_sumHexWEIsToUnformat = (0, _conversions.sumHexWEIsToUnformattedFiat)([newSwapGasTotal, this.props.customTotalSupplement], 'usd', this.props.usdConversionRate)) === null || _sumHexWEIsToUnformat === void 0 ? void 0 : _sumHexWEIsToUnformat.slice(1)
          }
        });
        onSubmit(customGasLimit, customGasPrice);
      },
      submitText: this.context.t('save'),
      headerCloseText: this.context.t('close'),
      hideCancel: true
    }));
  }

}

exports.default = GasModalPageContainer;
(0, _defineProperty2.default)(GasModalPageContainer, "contextTypes", {
  t: _propTypes.default.func,
  trackEvent: _propTypes.default.func
});
(0, _defineProperty2.default)(GasModalPageContainer, "propTypes", {
  insufficientBalance: _propTypes.default.bool,
  gasPriceButtonGroupProps: _propTypes.default.object,
  infoRowProps: _propTypes.default.shape({
    originalTotalFiat: _propTypes.default.string,
    originalTotalEth: _propTypes.default.string,
    newTotalFiat: _propTypes.default.string,
    newTotalEth: _propTypes.default.string,
    sendAmount: _propTypes.default.string,
    transactionFee: _propTypes.default.string,
    extraInfoRow: _propTypes.default.shape({
      label: _propTypes.default.string,
      value: _propTypes.default.string
    })
  }),
  onSubmit: _propTypes.default.func,
  cancelAndClose: _propTypes.default.func,
  showCustomPriceTooLowWarning: _propTypes.default.bool,
  disableSave: _propTypes.default.bool,
  customGasLimitMessage: _propTypes.default.string,
  customTotalSupplement: _propTypes.default.string,
  usdConversionRate: _propTypes.default.number,
  customGasPrice: _propTypes.default.string,
  customGasLimit: _propTypes.default.string,
  setSwapsCustomizationModalPrice: _propTypes.default.func,
  setSwapsCustomizationModalLimit: _propTypes.default.func,
  gasEstimateLoadingHasFailed: _propTypes.default.bool,
  minimumGasLimit: _propTypes.default.number.isRequired
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\swaps-gas-customization-modal\\swaps-gas-customization-modal.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tabs\\tabs.component.js", {"@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\tabs\tabs.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class Tabs extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      activeTabIndex: Math.max(this._findChildByName(this.props.defaultActiveTabName), 0)
    });
  }

  handleTabClick(tabIndex, tabName) {
    const {
      onTabClick
    } = this.props;
    const {
      activeTabIndex
    } = this.state;

    if (tabIndex !== activeTabIndex) {
      this.setState({
        activeTabIndex: tabIndex
      }, () => {
        if (onTabClick) {
          onTabClick(tabName);
        }
      });
    }
  }

  renderTabs() {
    const numberOfTabs = _react.default.Children.count(this._getValidChildren());

    return _react.default.Children.map(this._getValidChildren(), (child, index) => {
      const tabName = child === null || child === void 0 ? void 0 : child.props.name;
      return child && /*#__PURE__*/_react.default.cloneElement(child, {
        onClick: idx => this.handleTabClick(idx, tabName),
        tabIndex: index,
        isActive: numberOfTabs > 1 && index === this.state.activeTabIndex
      });
    });
  }

  renderActiveTabContent() {
    const children = this._getValidChildren();

    const {
      activeTabIndex
    } = this.state;

    if (Array.isArray(children) && !children[activeTabIndex] || !Array.isArray(children) && activeTabIndex !== 0) {
      throw new Error(`Tab at index '${activeTabIndex}' does not exist`);
    }

    return children[activeTabIndex] ? children[activeTabIndex].props.children : children.props.children;
  }

  render() {
    const {
      tabsClassName
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "tabs"
    }, /*#__PURE__*/_react.default.createElement("ul", {
      className: (0, _classnames.default)('tabs__list', tabsClassName)
    }, this.renderTabs()), /*#__PURE__*/_react.default.createElement("div", {
      className: "tabs__content"
    }, this.renderActiveTabContent()));
  }
  /**
   * Returns the index of the child with the given name
   *
   * @param {string} name - the name to search for
   * @returns {number} the index of the child with the given name
   * @private
   */


  _findChildByName(name) {
    return this._getValidChildren().findIndex(c => (c === null || c === void 0 ? void 0 : c.props.name) === name);
  } // This ignores any 'null' child elements that are a result of a conditional
  // based on a feature flag setting.


  _getValidChildren() {
    return _react.default.Children.toArray(this.props.children).filter(Boolean);
  }

}

exports.default = Tabs;
(0, _defineProperty2.default)(Tabs, "defaultProps", {
  defaultActiveTabName: null,
  onTabClick: null,
  tabsClassName: undefined
});
(0, _defineProperty2.default)(Tabs, "propTypes", {
  defaultActiveTabName: _propTypes.default.string,
  onTabClick: _propTypes.default.func,
  children: _propTypes.default.node.isRequired,
  tabsClassName: _propTypes.default.string
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tabs\\tabs.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tabs\\tab\\index.js", {"./tab.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tabs\\tab\\tab.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\tabs\tab\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _tab = _interopRequireDefault(require("./tab.component"));

var _default = _tab.default;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tabs\\tab\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\import-token\\token-search\\token-search.component.js", {"../../../components/ui/text-field":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\text-field\\index.js","../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@material-ui/core/InputAdornment":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\InputAdornment\\index.js","fuse.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\fuse.js\\dist\\fuse.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\import-token\token-search\token-search.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _fuse = _interopRequireDefault(require("fuse.js"));

var _InputAdornment = _interopRequireDefault(require("@material-ui/core/InputAdornment"));

var _textField = _interopRequireDefault(require("../../../components/ui/text-field"));

var _util = require("../../../helpers/utils/util");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class TokenSearch extends _react.Component {
  constructor(props) {
    super(props);
    (0, _defineProperty2.default)(this, "state", {
      searchQuery: ''
    });
    const {
      tokenList
    } = this.props;
    this.tokenList = Object.values(tokenList);
    this.tokenSearchFuse = new _fuse.default(this.tokenList, {
      shouldSort: true,
      threshold: 0.45,
      location: 0,
      distance: 100,
      maxPatternLength: 32,
      minMatchCharLength: 1,
      keys: [{
        name: 'name',
        weight: 0.5
      }, {
        name: 'symbol',
        weight: 0.5
      }]
    });
  }

  handleSearch(searchQuery) {
    this.setState({
      searchQuery
    });
    const fuseSearchResult = this.tokenSearchFuse.search(searchQuery);
    const addressSearchResult = this.tokenList.filter(token => {
      return token.address && searchQuery && (0, _util.isEqualCaseInsensitive)(token.address, searchQuery);
    });
    const results = [...addressSearchResult, ...fuseSearchResult];
    this.props.onSearch({
      searchQuery,
      results
    });
  }

  renderAdornment() {
    return /*#__PURE__*/_react.default.createElement(_InputAdornment.default, {
      position: "start",
      style: {
        marginRight: '12px'
      }
    }, /*#__PURE__*/_react.default.createElement("img", {
      src: "images/search.svg",
      width: "17",
      height: "17",
      alt: ""
    }));
  }

  render() {
    const {
      error
    } = this.props;
    const {
      searchQuery
    } = this.state;
    return /*#__PURE__*/_react.default.createElement(_textField.default, {
      id: "search-tokens",
      placeholder: this.context.t('searchTokens'),
      type: "text",
      value: searchQuery,
      onChange: e => this.handleSearch(e.target.value),
      error: error,
      fullWidth: true,
      autoFocus: true,
      autoComplete: "off",
      startAdornment: this.renderAdornment()
    });
  }

}

exports.default = TokenSearch;
(0, _defineProperty2.default)(TokenSearch, "contextTypes", {
  t: _propTypes.default.func
});
(0, _defineProperty2.default)(TokenSearch, "defaultProps", {
  error: null
});
(0, _defineProperty2.default)(TokenSearch, "propTypes", {
  onSearch: _propTypes.default.func,
  error: _propTypes.default.string,
  tokenList: _propTypes.default.object
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\import-token\\token-search\\token-search.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\import-token\\token-list\\token-list.container.js", {"./token-list.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\import-token\\token-list\\token-list.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\import-token\token-list\token-list.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _tokenList = _interopRequireDefault(require("./token-list.component"));

const mapStateToProps = ({
  metamask
}) => {
  const {
    tokens,
    useTokenDetection
  } = metamask;
  return {
    tokens,
    useTokenDetection
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps)(_tokenList.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\import-token\\token-list\\token-list.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\first-time-flow-switch\\first-time-flow-switch.container.js", {"./first-time-flow-switch.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\first-time-flow-switch\\first-time-flow-switch.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\first-time-flow\first-time-flow-switch\first-time-flow-switch.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _firstTimeFlowSwitch = _interopRequireDefault(require("./first-time-flow-switch.component"));

const mapStateToProps = ({
  metamask
}) => {
  const {
    completedOnboarding,
    isInitialized,
    isUnlocked,
    seedPhraseBackedUp
  } = metamask;
  return {
    completedOnboarding,
    isInitialized,
    isUnlocked,
    seedPhraseBackedUp
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps)(_firstTimeFlowSwitch.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\first-time-flow-switch\\first-time-flow-switch.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\select-action\\select-action.container.js", {"../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./select-action.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\select-action\\select-action.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\first-time-flow\select-action\select-action.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _redux = require("redux");

var _actions = require("../../../store/actions");

var _selectors = require("../../../selectors");

var _selectAction = _interopRequireDefault(require("./select-action.component"));

const mapStateToProps = state => {
  return {
    nextRoute: (0, _selectors.getFirstTimeFlowTypeRoute)(state)
  };
};

const mapDispatchToProps = dispatch => {
  return {
    setFirstTimeFlowType: type => dispatch((0, _actions.setFirstTimeFlowType)(type))
  };
};

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(_selectAction.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\select-action\\select-action.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\metametrics-opt-in\\metametrics-opt-in.container.js", {"../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./metametrics-opt-in.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\metametrics-opt-in\\metametrics-opt-in.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\first-time-flow\metametrics-opt-in\metametrics-opt-in.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _actions = require("../../../store/actions");

var _selectors = require("../../../selectors");

var _metametricsOptIn = _interopRequireDefault(require("./metametrics-opt-in.component"));

const firstTimeFlowTypeNameMap = {
  create: 'Selected Create New Wallet',
  import: 'Selected Import Wallet'
};

const mapStateToProps = state => {
  const {
    firstTimeFlowType,
    participateInMetaMetrics
  } = state.metamask;
  return {
    nextRoute: (0, _selectors.getFirstTimeFlowTypeRoute)(state),
    firstTimeSelectionMetaMetricsName: firstTimeFlowTypeNameMap[firstTimeFlowType],
    participateInMetaMetrics
  };
};

const mapDispatchToProps = dispatch => {
  return {
    setParticipateInMetaMetrics: val => dispatch((0, _actions.setParticipateInMetaMetrics)(val))
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_metametricsOptIn.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\metametrics-opt-in\\metametrics-opt-in.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\welcome\\welcome.container.js", {"../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./welcome.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\welcome\\welcome.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\first-time-flow\welcome\welcome.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _redux = require("redux");

var _actions = require("../../../store/actions");

var _welcome = _interopRequireDefault(require("./welcome.component"));

const mapStateToProps = ({
  metamask
}) => {
  const {
    welcomeScreenSeen,
    participateInMetaMetrics
  } = metamask;
  return {
    welcomeScreenSeen,
    participateInMetaMetrics
  };
};

const mapDispatchToProps = dispatch => {
  return {
    closeWelcomeScreen: () => dispatch((0, _actions.closeWelcomeScreen)())
  };
};

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(_welcome.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\welcome\\welcome.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\end-of-flow\\end-of-flow.container.js", {"../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./end-of-flow.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\end-of-flow\\end-of-flow.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\first-time-flow\end-of-flow\end-of-flow.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _selectors = require("../../../selectors");

var _actions = require("../../../store/actions");

var _endOfFlow = _interopRequireDefault(require("./end-of-flow.component"));

const firstTimeFlowTypeNameMap = {
  create: 'New Wallet Created',
  import: 'New Wallet Imported'
};

const mapStateToProps = state => {
  const {
    metamask: {
      firstTimeFlowType
    }
  } = state;
  return {
    completionMetaMetricsName: firstTimeFlowTypeNameMap[firstTimeFlowType],
    onboardingInitiator: (0, _selectors.getOnboardingInitiator)(state)
  };
};

const mapDispatchToProps = dispatch => {
  return {
    setCompletedOnboarding: () => dispatch((0, _actions.setCompletedOnboarding)())
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_endOfFlow.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\end-of-flow\\end-of-flow.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\create-password\\create-password.container.js", {"./create-password.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\create-password\\create-password.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\first-time-flow\create-password\create-password.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _createPassword = _interopRequireDefault(require("./create-password.component"));

const mapStateToProps = state => {
  const {
    metamask: {
      isInitialized
    }
  } = state;
  return {
    isInitialized
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps)(_createPassword.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\create-password\\create-password.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\seed-phrase\\seed-phrase.component.js", {"../../../components/ui/metafox-logo":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\metafox-logo\\index.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","./confirm-seed-phrase":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\seed-phrase\\confirm-seed-phrase\\index.js","./reveal-seed-phrase":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\seed-phrase\\reveal-seed-phrase\\index.js","./seed-phrase-intro":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\seed-phrase\\seed-phrase-intro\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/extends":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\extends.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-dnd":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-dnd\\lib\\index.js","react-dnd-html5-backend":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-dnd-html5-backend\\lib\\cjs\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\first-time-flow\seed-phrase\seed-phrase.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _reactDndHtml5Backend = _interopRequireDefault(require("react-dnd-html5-backend"));

var _reactDnd = require("react-dnd");

var _routes = require("../../../helpers/constants/routes");

var _metafoxLogo = _interopRequireDefault(require("../../../components/ui/metafox-logo"));

var _confirmSeedPhrase = _interopRequireDefault(require("./confirm-seed-phrase"));

var _revealSeedPhrase = _interopRequireDefault(require("./reveal-seed-phrase"));

var _seedPhraseIntro = _interopRequireDefault(require("./seed-phrase-intro"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class SeedPhrase extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      verifiedSeedPhrase: ''
    });
  }

  componentDidMount() {
    const {
      seedPhrase,
      history,
      verifySeedPhrase
    } = this.props;

    if (!seedPhrase) {
      verifySeedPhrase().then(verifiedSeedPhrase => {
        if (verifiedSeedPhrase) {
          this.setState({
            verifiedSeedPhrase
          });
        } else {
          history.push(_routes.DEFAULT_ROUTE);
        }
      });
    }
  }

  render() {
    var _history$location;

    const {
      seedPhrase,
      history
    } = this.props;
    const {
      verifiedSeedPhrase
    } = this.state;
    const pathname = history === null || history === void 0 ? void 0 : (_history$location = history.location) === null || _history$location === void 0 ? void 0 : _history$location.pathname;
    const introClass = pathname === _routes.INITIALIZE_SEED_PHRASE_INTRO_ROUTE ? 'intro' : '';
    return /*#__PURE__*/_react.default.createElement(_reactDnd.DragDropContextProvider, {
      backend: _reactDndHtml5Backend.default
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: `first-time-flow__wrapper ${introClass}`
    }, /*#__PURE__*/_react.default.createElement(_metafoxLogo.default, null), /*#__PURE__*/_react.default.createElement(_reactRouterDom.Switch, null, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
      exact: true,
      path: _routes.INITIALIZE_CONFIRM_SEED_PHRASE_ROUTE,
      render: routeProps => /*#__PURE__*/_react.default.createElement(_confirmSeedPhrase.default, (0, _extends2.default)({}, routeProps, {
        seedPhrase: seedPhrase || verifiedSeedPhrase
      }))
    }), /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
      exact: true,
      path: _routes.INITIALIZE_SEED_PHRASE_ROUTE,
      render: routeProps => /*#__PURE__*/_react.default.createElement(_revealSeedPhrase.default, (0, _extends2.default)({}, routeProps, {
        seedPhrase: seedPhrase || verifiedSeedPhrase
      }))
    }), /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
      exact: true,
      path: _routes.INITIALIZE_BACKUP_SEED_PHRASE_ROUTE,
      render: routeProps => /*#__PURE__*/_react.default.createElement(_revealSeedPhrase.default, (0, _extends2.default)({}, routeProps, {
        seedPhrase: seedPhrase || verifiedSeedPhrase
      }))
    }), /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
      exact: true,
      path: _routes.INITIALIZE_SEED_PHRASE_INTRO_ROUTE,
      render: routeProps => /*#__PURE__*/_react.default.createElement(_seedPhraseIntro.default, (0, _extends2.default)({}, routeProps, {
        seedPhrase: seedPhrase || verifiedSeedPhrase
      }))
    }))));
  }

}

exports.default = SeedPhrase;
(0, _defineProperty2.default)(SeedPhrase, "propTypes", {
  history: _propTypes.default.object,
  seedPhrase: _propTypes.default.string,
  verifySeedPhrase: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\first-time-flow\\seed-phrase\\seed-phrase.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\alerts-tab\\alerts-tab.js", {"../../../../shared/constants/alerts":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\alerts.js","../../../components/ui/toggle-button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\toggle-button\\index.js","../../../components/ui/tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tooltip\\index.js","../../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\settings\alerts-tab\alerts-tab.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _alerts = require("../../../../shared/constants/alerts");

var _tooltip = _interopRequireDefault(require("../../../components/ui/tooltip"));

var _toggleButton = _interopRequireDefault(require("../../../components/ui/toggle-button"));

var _actions = require("../../../store/actions");

var _metamask = require("../../../ducks/metamask/metamask");

var _useI18nContext = require("../../../hooks/useI18nContext");

const AlertSettingsEntry = ({
  alertId,
  description,
  title
}) => {
  const t = (0, _useI18nContext.useI18nContext)();
  const isEnabled = (0, _reactRedux.useSelector)(state => (0, _metamask.getAlertEnabledness)(state)[alertId]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("span", null, title), /*#__PURE__*/_react.default.createElement(_tooltip.default, {
    position: "top",
    title: description,
    wrapperClassName: "alerts-tab__description"
  }, /*#__PURE__*/_react.default.createElement("i", {
    className: "fa fa-info-circle"
  })), /*#__PURE__*/_react.default.createElement(_toggleButton.default, {
    offLabel: t('off'),
    onLabel: t('on'),
    onToggle: () => (0, _actions.setAlertEnabledness)(alertId, !isEnabled),
    value: isEnabled
  }));
};

AlertSettingsEntry.propTypes = {
  alertId: _propTypes.default.string.isRequired,
  description: _propTypes.default.string.isRequired,
  title: _propTypes.default.string.isRequired
};

const AlertsTab = () => {
  const t = (0, _useI18nContext.useI18nContext)();
  const alertConfig = {
    [_alerts.ALERT_TYPES.unconnectedAccount]: {
      title: t('alertSettingsUnconnectedAccount'),
      description: t('alertSettingsUnconnectedAccountDescription')
    },
    [_alerts.ALERT_TYPES.web3ShimUsage]: {
      title: t('alertSettingsWeb3ShimUsage'),
      description: t('alertSettingsWeb3ShimUsageDescription')
    }
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "alerts-tab__body"
  }, Object.entries(alertConfig).map(([alertId, {
    title,
    description
  }]) => /*#__PURE__*/_react.default.createElement(AlertSettingsEntry, {
    alertId: alertId,
    description: description,
    key: alertId,
    title: title
  })));
};

var _default = AlertsTab;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\alerts-tab\\alerts-tab.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\info-tab\\info-tab.component.js", {"../../../components/ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../../helpers/constants/common":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\common.js","../../../helpers/utils/build-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\build-types.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\settings\info-tab\info-tab.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _button = _interopRequireDefault(require("../../../components/ui/button"));

var _common = require("../../../helpers/constants/common");

var _buildTypes = require("../../../helpers/utils/build-types");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class InfoTab extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      version: global.platform.getVersion()
    });
  }

  renderInfoLinks() {
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "settings-page__content-item settings-page__content-item--without-height"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__link-header"
    }, t('links')), /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__link-item"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "link",
      href: "https://metamask.io/privacy.html",
      target: "_blank",
      rel: "noopener noreferrer",
      className: "info-tab__link-text"
    }, t('privacyMsg'))), /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__link-item"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "link",
      href: "https://metamask.io/terms.html",
      target: "_blank",
      rel: "noopener noreferrer",
      className: "info-tab__link-text"
    }, t('terms'))), /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__link-item"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "link",
      href: "https://metamask.io/attributions.html",
      target: "_blank",
      rel: "noopener noreferrer",
      className: "info-tab__link-text"
    }, t('attributions'))), /*#__PURE__*/_react.default.createElement("hr", {
      className: "info-tab__separator"
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__link-item"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "link",
      href: _common.SUPPORT_LINK,
      target: "_blank",
      rel: "noopener noreferrer",
      className: "info-tab__link-text"
    }, t('supportCenter'))), /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__link-item"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "link",
      href: "https://metamask.io/",
      target: "_blank",
      rel: "noopener noreferrer",
      className: "info-tab__link-text"
    }, t('visitWebSite'))), /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__link-item"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "link",
      href: _common.SUPPORT_REQUEST_LINK,
      target: "_blank",
      rel: "noopener noreferrer",
      className: "info-tab__link-text"
    }, t('contactUs'))));
  }

  render() {
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "settings-page__body"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "settings-page__content-row"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "settings-page__content-item settings-page__content-item--without-height"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__item"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__version-header"
    }, (0, _buildTypes.isBeta)() ? t('betaMetamaskVersion') : t('metamaskVersion')), /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__version-number"
    }, this.state.version)), /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__item"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__about"
    }, t('builtAroundTheWorld')))), this.renderInfoLinks()), /*#__PURE__*/_react.default.createElement("div", {
      className: "info-tab__logo-wrapper"
    }, /*#__PURE__*/_react.default.createElement("img", {
      src: "./images/info-logo.png",
      className: "info-tab__logo",
      alt: ""
    })));
  }

}

exports.default = InfoTab;
(0, _defineProperty2.default)(InfoTab, "contextTypes", {
  t: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\info-tab\\info-tab.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\tab-bar\\tab-bar.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\tab-bar\tab-bar.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

const TabBar = props => {
  const {
    tabs = [],
    onSelect,
    isActive
  } = props;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "tab-bar"
  }, tabs.map(({
    key,
    content,
    icon
  }) => /*#__PURE__*/_react.default.createElement("button", {
    key: key,
    className: (0, _classnames.default)('tab-bar__tab pointer', {
      'tab-bar__tab--active': isActive(key, content)
    }),
    onClick: () => onSelect(key)
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "tab-bar__tab__content"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "tab-bar__tab__content__icon"
  }, icon), /*#__PURE__*/_react.default.createElement("div", {
    className: "tab-bar__tab__content__title"
  }, content)), /*#__PURE__*/_react.default.createElement("div", {
    className: "tab-bar__tab__caret"
  }))));
};

TabBar.propTypes = {
  isActive: _propTypes.default.func.isRequired,
  tabs: _propTypes.default.array,
  onSelect: _propTypes.default.func
};
var _default = TabBar;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\tab-bar\\tab-bar.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\advanced-tab\\advanced-tab.container.js", {"../../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./advanced-tab.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\advanced-tab\\advanced-tab.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\settings\advanced-tab\advanced-tab.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapStateToProps = exports.mapDispatchToProps = exports.default = void 0;

var _redux = require("redux");

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _actions = require("../../../store/actions");

var _selectors = require("../../../selectors");

var _metamask = require("../../../ducks/metamask/metamask");

var _advancedTab = _interopRequireDefault(require("./advanced-tab.component"));

const mapStateToProps = state => {
  const {
    appState: {
      warning
    },
    metamask
  } = state;
  const {
    featureFlags: {
      sendHexData,
      advancedInlineGas
    } = {},
    threeBoxSyncingAllowed,
    threeBoxDisabled,
    useNonceField,
    ipfsGateway,
    ledgerTransportType,
    dismissSeedBackUpReminder
  } = metamask;
  const {
    showFiatInTestnets,
    showTestNetworks,
    autoLockTimeLimit
  } = (0, _selectors.getPreferences)(state);
  const userHasALedgerAccount = (0, _metamask.doesUserHaveALedgerAccount)(state);
  return {
    warning,
    sendHexData,
    advancedInlineGas,
    showFiatInTestnets,
    showTestNetworks,
    autoLockTimeLimit,
    threeBoxSyncingAllowed,
    threeBoxDisabled,
    useNonceField,
    ipfsGateway,
    ledgerTransportType,
    dismissSeedBackUpReminder,
    userHasALedgerAccount
  };
};

exports.mapStateToProps = mapStateToProps;

const mapDispatchToProps = dispatch => {
  return {
    setHexDataFeatureFlag: shouldShow => dispatch((0, _actions.setFeatureFlag)('sendHexData', shouldShow)),
    displayWarning: warning => dispatch((0, _actions.displayWarning)(warning)),
    showResetAccountConfirmationModal: () => dispatch((0, _actions.showModal)({
      name: 'CONFIRM_RESET_ACCOUNT'
    })),
    setAdvancedInlineGasFeatureFlag: shouldShow => dispatch((0, _actions.setFeatureFlag)('advancedInlineGas', shouldShow)),
    setUseNonceField: value => dispatch((0, _actions.setUseNonceField)(value)),
    setShowFiatConversionOnTestnetsPreference: value => {
      return dispatch((0, _actions.setShowFiatConversionOnTestnetsPreference)(value));
    },
    setShowTestNetworks: value => {
      return dispatch((0, _actions.setShowTestNetworks)(value));
    },
    setAutoLockTimeLimit: value => {
      return dispatch((0, _actions.setAutoLockTimeLimit)(value));
    },
    setThreeBoxSyncingPermission: newThreeBoxSyncingState => {
      if (newThreeBoxSyncingState) {
        dispatch((0, _actions.turnThreeBoxSyncingOnAndInitialize)());
      } else {
        dispatch((0, _actions.setThreeBoxSyncingPermission)(newThreeBoxSyncingState));
      }
    },
    setIpfsGateway: value => {
      return dispatch((0, _actions.setIpfsGateway)(value));
    },
    setLedgerTransportPreference: value => {
      return dispatch((0, _actions.setLedgerTransportPreference)(value));
    },
    setDismissSeedBackUpReminder: value => {
      return dispatch((0, _actions.setDismissSeedBackUpReminder)(value));
    }
  };
};

exports.mapDispatchToProps = mapDispatchToProps;

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(_advancedTab.default);

exports.default = _default;


      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\advanced-tab\\advanced-tab.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\security-tab\\security-tab.container.js", {"../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./security-tab.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\security-tab\\security-tab.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\settings\security-tab\security-tab.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _redux = require("redux");

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _actions = require("../../../store/actions");

var _securityTab = _interopRequireDefault(require("./security-tab.component"));

const mapStateToProps = state => {
  const {
    appState: {
      warning
    },
    metamask
  } = state;
  const {
    featureFlags: {
      showIncomingTransactions
    } = {},
    participateInMetaMetrics,
    usePhishDetect
  } = metamask;
  return {
    warning,
    showIncomingTransactions,
    participateInMetaMetrics,
    usePhishDetect
  };
};

const mapDispatchToProps = dispatch => {
  return {
    setParticipateInMetaMetrics: val => dispatch((0, _actions.setParticipateInMetaMetrics)(val)),
    setShowIncomingTransactionsFeatureFlag: shouldShow => dispatch((0, _actions.setFeatureFlag)('showIncomingTransactions', shouldShow)),
    setUsePhishDetect: val => dispatch((0, _actions.setUsePhishDetect)(val))
  };
};

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(_securityTab.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\security-tab\\security-tab.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\settings-tab\\settings-tab.container.js", {"../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./settings-tab.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\settings-tab\\settings-tab.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\settings\settings-tab\settings-tab.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _actions = require("../../../store/actions");

var _selectors = require("../../../selectors");

var _settingsTab = _interopRequireDefault(require("./settings-tab.component"));

const mapStateToProps = (state, ownProps) => {
  const {
    appState: {
      warning
    },
    metamask
  } = state;
  const {
    currentCurrency,
    nativeCurrency,
    useBlockie,
    currentLocale,
    selectedAddress,
    useTokenDetection,
    tokenList
  } = metamask;
  const {
    useNativeCurrencyAsPrimaryCurrency,
    hideZeroBalanceTokens
  } = (0, _selectors.getPreferences)(state);
  const {
    lastFetchedConversionDate
  } = ownProps;
  return {
    warning,
    currentLocale,
    currentCurrency,
    nativeCurrency,
    useBlockie,
    useNativeCurrencyAsPrimaryCurrency,
    hideZeroBalanceTokens,
    lastFetchedConversionDate,
    selectedAddress,
    useTokenDetection,
    tokenList
  };
};

const mapDispatchToProps = dispatch => {
  return {
    setCurrentCurrency: currency => dispatch((0, _actions.setCurrentCurrency)(currency)),
    setUseBlockie: value => dispatch((0, _actions.setUseBlockie)(value)),
    updateCurrentLocale: key => dispatch((0, _actions.updateCurrentLocale)(key)),
    setUseNativeCurrencyAsPrimaryCurrencyPreference: value => {
      return dispatch((0, _actions.setUseNativeCurrencyAsPrimaryCurrencyPreference)(value));
    },
    setParticipateInMetaMetrics: val => dispatch((0, _actions.setParticipateInMetaMetrics)(val)),
    setHideZeroBalanceTokens: value => dispatch((0, _actions.setHideZeroBalanceTokens)(value))
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_settingsTab.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\settings-tab\\settings-tab.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\experimental-tab\\experimental-tab.container.js", {"../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./experimental-tab.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\experimental-tab\\experimental-tab.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\settings\experimental-tab\experimental-tab.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _redux = require("redux");

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _actions = require("../../../store/actions");

var _selectors = require("../../../selectors");

var _experimentalTab = _interopRequireDefault(require("./experimental-tab.component"));

const mapStateToProps = state => {
  return {
    useTokenDetection: (0, _selectors.getUseTokenDetection)(state),
    useCollectibleDetection: (0, _selectors.getUseCollectibleDetection)(state),
    openSeaEnabled: (0, _selectors.getOpenSeaEnabled)(state),
    eip1559V2Enabled: (0, _selectors.getEIP1559V2Enabled)(state)
  };
};

const mapDispatchToProps = dispatch => {
  return {
    setUseTokenDetection: val => dispatch((0, _actions.setUseTokenDetection)(val)),
    setUseCollectibleDetection: val => dispatch((0, _actions.setUseCollectibleDetection)(val)),
    setOpenSeaEnabled: val => dispatch((0, _actions.setOpenSeaEnabled)(val)),
    setEIP1559V2Enabled: val => dispatch((0, _actions.setEIP1559V2Enabled)(val))
  };
};

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(_experimentalTab.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\experimental-tab\\experimental-tab.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\contact-list-tab\\contact-list-tab.container.js", {"../../../../app/scripts/lib/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\scripts\\lib\\util.js","../../../../shared/constants/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\app.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","./contact-list-tab.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\contact-list-tab\\contact-list-tab.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\settings\contact-list-tab\contact-list-tab.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _redux = require("redux");

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _selectors = require("../../../selectors");

var _app = require("../../../../shared/constants/app");

var _util = require("../../../../app/scripts/lib/util");

var _routes = require("../../../helpers/constants/routes");

var _contactListTab = _interopRequireDefault(require("./contact-list-tab.component"));

const mapStateToProps = (state, ownProps) => {
  const {
    location
  } = ownProps;
  const {
    pathname
  } = location;
  const pathNameTail = pathname.match(/[^/]+$/u)[0];
  const pathNameTailIsAddress = pathNameTail.includes('0x');
  const viewingContact = Boolean(pathname.match(_routes.CONTACT_VIEW_ROUTE));
  const editingContact = Boolean(pathname.match(_routes.CONTACT_EDIT_ROUTE));
  const addingContact = Boolean(pathname.match(_routes.CONTACT_ADD_ROUTE));

  const envIsPopup = (0, _util.getEnvironmentType)() === _app.ENVIRONMENT_TYPE_POPUP;

  const hideAddressBook = envIsPopup && (viewingContact || editingContact || addingContact);
  return {
    viewingContact,
    editingContact,
    addingContact,
    addressBook: (0, _selectors.getAddressBook)(state),
    selectedAddress: pathNameTailIsAddress ? pathNameTail : '',
    hideAddressBook,
    envIsPopup,
    showContactContent: !envIsPopup || hideAddressBook
  };
};

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps))(_contactListTab.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\contact-list-tab\\contact-list-tab.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\networks-tab\\networks-tab.js", {"../../../../app/scripts/lib/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\scripts\\lib\\util.js","../../../../shared/constants/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\app.js","../../../../shared/constants/network":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\network.js","../../../components/ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./networks-form":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\networks-tab\\networks-form\\index.js","./networks-tab-content":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\networks-tab\\networks-tab-content\\index.js","./networks-tab-subheader":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\networks-tab\\networks-tab-subheader\\index.js","./networks-tab.constants":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\networks-tab\\networks-tab.constants.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\settings\networks-tab\networks-tab.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _reactRedux = require("react-redux");

var _useI18nContext = require("../../../hooks/useI18nContext");

var _routes = require("../../../helpers/constants/routes");

var _actions = require("../../../store/actions");

var _button = _interopRequireDefault(require("../../../components/ui/button"));

var _util = require("../../../../app/scripts/lib/util");

var _app = require("../../../../shared/constants/app");

var _selectors = require("../../../selectors");

var _network = require("../../../../shared/constants/network");

var _networksTab = require("./networks-tab.constants");

var _networksTabContent = _interopRequireDefault(require("./networks-tab-content"));

var _networksForm = _interopRequireDefault(require("./networks-form"));

var _networksTabSubheader = _interopRequireDefault(require("./networks-tab-subheader"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const defaultNetworks = _networksTab.defaultNetworksData.map(network => _objectSpread(_objectSpread({}, network), {}, {
  viewOnly: true
}));

const NetworksTab = ({
  addNewNetwork
}) => {
  const t = (0, _useI18nContext.useI18nContext)();
  const dispatch = (0, _reactRedux.useDispatch)();
  const {
    pathname
  } = (0, _reactRouterDom.useLocation)();
  const environmentType = (0, _util.getEnvironmentType)();
  const isFullScreen = environmentType === _app.ENVIRONMENT_TYPE_FULLSCREEN;
  const shouldRenderNetworkForm = isFullScreen || Boolean(pathname.match(_routes.NETWORKS_FORM_ROUTE));
  const frequentRpcListDetail = (0, _reactRedux.useSelector)(_selectors.getFrequentRpcListDetail);
  const provider = (0, _reactRedux.useSelector)(_selectors.getProvider);
  const networksTabSelectedRpcUrl = (0, _reactRedux.useSelector)(_selectors.getNetworksTabSelectedRpcUrl);
  const frequentRpcNetworkListDetails = frequentRpcListDetail.map(rpc => {
    var _rpc$rpcPrefs;

    return {
      label: rpc.nickname,
      iconColor: '#6A737D',
      providerType: _network.NETWORK_TYPE_RPC,
      rpcUrl: rpc.rpcUrl,
      chainId: rpc.chainId,
      ticker: rpc.ticker,
      blockExplorerUrl: ((_rpc$rpcPrefs = rpc.rpcPrefs) === null || _rpc$rpcPrefs === void 0 ? void 0 : _rpc$rpcPrefs.blockExplorerUrl) || ''
    };
  });
  const networksToRender = [...defaultNetworks, ...frequentRpcNetworkListDetails];
  let selectedNetwork = networksToRender.find(network => network.rpcUrl === networksTabSelectedRpcUrl) || {};
  const networkIsSelected = Boolean(selectedNetwork.rpcUrl);
  let networkDefaultedToProvider = false;

  if (!networkIsSelected) {
    selectedNetwork = networksToRender.find(network => {
      return network.rpcUrl === provider.rpcUrl || network.providerType !== _network.NETWORK_TYPE_RPC && network.providerType === provider.type;
    }) || {};
    networkDefaultedToProvider = true;
  }

  (0, _react.useEffect)(() => {
    return () => {
      dispatch((0, _actions.setSelectedSettingsRpcUrl)(''));
    };
  }, [dispatch]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "networks-tab__body"
  }, isFullScreen ? /*#__PURE__*/_react.default.createElement(_networksTabSubheader.default, {
    addNewNetwork: addNewNetwork
  }) : null, /*#__PURE__*/_react.default.createElement("div", {
    className: "networks-tab__content"
  }, addNewNetwork ? /*#__PURE__*/_react.default.createElement(_networksForm.default, {
    networksToRender: networksToRender,
    addNewNetwork: addNewNetwork
  }) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_networksTabContent.default, {
    networkDefaultedToProvider: networkDefaultedToProvider,
    networkIsSelected: networkIsSelected,
    networksToRender: networksToRender,
    providerUrl: provider.rpcUrl,
    selectedNetwork: selectedNetwork,
    shouldRenderNetworkForm: shouldRenderNetworkForm
  }), !isFullScreen && !shouldRenderNetworkForm ? /*#__PURE__*/_react.default.createElement("div", {
    className: "networks-tab__networks-list-popup-footer"
  }, /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "primary",
    onClick: event => {
      event.preventDefault();
      global.platform.openExtensionInBrowser(_routes.ADD_NETWORK_ROUTE);
    }
  }, t('addNetwork'))) : null)));
};

NetworksTab.propTypes = {
  addNewNetwork: _propTypes.default.bool
};
var _default = NetworksTab;
exports.default = _default;


      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\settings\\networks-tab\\networks-tab.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\user-preferenced-currency-display\\user-preferenced-currency-display.component.js", {"../../../helpers/constants/common":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\common.js","../../../hooks/useUserPreferencedCurrency":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useUserPreferencedCurrency.js","../../ui/currency-display":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\currency-display\\index.js","@babel/runtime/helpers/extends":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\extends.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@babel/runtime/helpers/objectWithoutProperties":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\objectWithoutProperties.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\user-preferenced-currency-display\user-preferenced-currency-display.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = UserPreferencedCurrencyDisplay;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _common = require("../../../helpers/constants/common");

var _currencyDisplay = _interopRequireDefault(require("../../ui/currency-display"));

var _useUserPreferencedCurrency = require("../../../hooks/useUserPreferencedCurrency");

const _excluded = ["data-testid", "ethLogoHeight", "ethNumberOfDecimals", "fiatNumberOfDecimals", "numberOfDecimals", "showEthLogo", "type"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function UserPreferencedCurrencyDisplay(_ref) {
  let {
    'data-testid': dataTestId,
    ethLogoHeight = 12,
    ethNumberOfDecimals,
    fiatNumberOfDecimals,
    numberOfDecimals: propsNumberOfDecimals,
    showEthLogo,
    type
  } = _ref,
      restProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const {
    currency,
    numberOfDecimals
  } = (0, _useUserPreferencedCurrency.useUserPreferencedCurrency)(type, {
    ethNumberOfDecimals,
    fiatNumberOfDecimals,
    numberOfDecimals: propsNumberOfDecimals
  });
  const prefixComponent = (0, _react.useMemo)(() => {
    return currency === _common.ETH && showEthLogo && /*#__PURE__*/_react.default.createElement("img", {
      src: "./images/eth.svg",
      height: ethLogoHeight,
      alt: ""
    });
  }, [currency, showEthLogo, ethLogoHeight]);
  return /*#__PURE__*/_react.default.createElement(_currencyDisplay.default, (0, _extends2.default)({}, restProps, {
    currency: currency,
    "data-testid": dataTestId,
    numberOfDecimals: numberOfDecimals,
    prefixComponent: prefixComponent
  }));
}

UserPreferencedCurrencyDisplay.propTypes = {
  className: _propTypes.default.string,
  'data-testid': _propTypes.default.string,
  prefix: _propTypes.default.string,
  value: _propTypes.default.string,
  numberOfDecimals: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  hideLabel: _propTypes.default.bool,
  hideTitle: _propTypes.default.bool,
  style: _propTypes.default.object,
  showEthLogo: _propTypes.default.bool,
  ethLogoHeight: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  type: _propTypes.default.oneOf([_common.PRIMARY, _common.SECONDARY]),
  ethNumberOfDecimals: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  fiatNumberOfDecimals: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\user-preferenced-currency-display\\user-preferenced-currency-display.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\search-icon\\search-icon.component.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\search-icon\search-icon.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SearchIcon;

var _react = _interopRequireDefault(require("react"));

function SearchIcon() {
  return /*#__PURE__*/_react.default.createElement("svg", {
    height: "20",
    width: "20",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor"
  }, /*#__PURE__*/_react.default.createElement("g", {
    clipRule: "evenodd",
    fillRule: "evenodd"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M9.167 3.333a5.833 5.833 0 100 11.667 5.833 5.833 0 000-11.667zm-7.5 5.834a7.5 7.5 0 1115 0 7.5 7.5 0 01-15 0z"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M13.286 13.286a.833.833 0 011.178 0l3.625 3.625a.833.833 0 11-1.178 1.178l-3.625-3.625a.833.833 0 010-1.178z"
  })));
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\search-icon\\search-icon.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\site-icon\\site-icon.js", {"../icon-border":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-border\\index.js","../icon-with-fallback":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-with-fallback\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\site-icon\site-icon.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SiteIcon;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _iconBorder = _interopRequireDefault(require("../icon-border"));

var _iconWithFallback = _interopRequireDefault(require("../icon-with-fallback"));

function SiteIcon({
  icon = null,
  name = '',
  size
}) {
  const iconSize = Math.floor(size * 0.75);
  return /*#__PURE__*/_react.default.createElement(_iconBorder.default, {
    size: size
  }, /*#__PURE__*/_react.default.createElement(_iconWithFallback.default, {
    icon: icon,
    name: name,
    size: iconSize
  }));
}

SiteIcon.propTypes = {
  /**
   * The img src of the icon.
   * Used in IconWithFallback
   */
  icon: _propTypes.default.string,

  /**
   * The name of the icon also used for the alt tag of the image and fallback letter.
   * Used in IconWithFallback
   */
  name: _propTypes.default.string,

  /**
   * The size of the icon.
   * Used in IconWithFallback
   */
  size: _propTypes.default.number.isRequired
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\site-icon\\site-icon.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\InputAdornment\\InputAdornment.js", {"../FormControl/FormControlContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\FormControl\\FormControlContext.js","../Typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\Typography\\index.js","../styles/withStyles":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\withStyles.js","@babel/runtime/helpers/extends":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\extends.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@babel/runtime/helpers/interopRequireWildcard":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireWildcard.js","@babel/runtime/helpers/objectWithoutProperties":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\objectWithoutProperties.js","clsx":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\clsx\\dist\\clsx.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@material-ui\core\InputAdornment\InputAdornment.js
      return function (require, module, exports) {
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.styles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _clsx = _interopRequireDefault(require("clsx"));

var _Typography = _interopRequireDefault(require("../Typography"));

var _withStyles = _interopRequireDefault(require("../styles/withStyles"));

var _FormControlContext = _interopRequireWildcard(require("../FormControl/FormControlContext"));

var styles = {
  /* Styles applied to the root element. */
  root: {
    display: 'flex',
    height: '0.01em',
    // Fix IE 11 flexbox alignment. To remove at some point.
    maxHeight: '2em',
    alignItems: 'center',
    whiteSpace: 'nowrap'
  },

  /* Styles applied to the root element if `variant="filled"`. */
  filled: {
    '&$positionStart:not($hiddenLabel)': {
      marginTop: 16
    }
  },

  /* Styles applied to the root element if `position="start"`. */
  positionStart: {
    marginRight: 8
  },

  /* Styles applied to the root element if `position="end"`. */
  positionEnd: {
    marginLeft: 8
  },

  /* Styles applied to the root element if `disablePointerEvents=true`. */
  disablePointerEvents: {
    pointerEvents: 'none'
  },

  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */
  hiddenLabel: {},

  /* Styles applied if the adornment is used inside <FormControl margin="dense" />. */
  marginDense: {}
};
exports.styles = styles;
var InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {
  var children = props.children,
      classes = props.classes,
      className = props.className,
      _props$component = props.component,
      Component = _props$component === void 0 ? 'div' : _props$component,
      _props$disablePointer = props.disablePointerEvents,
      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,
      _props$disableTypogra = props.disableTypography,
      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,
      position = props.position,
      variantProp = props.variant,
      other = (0, _objectWithoutProperties2.default)(props, ["children", "classes", "className", "component", "disablePointerEvents", "disableTypography", "position", "variant"]);
  var muiFormControl = (0, _FormControlContext.useFormControl)() || {};
  var variant = variantProp;

  if (variantProp && muiFormControl.variant) {
    if ("development" !== 'production') {
      if (variantProp === muiFormControl.variant) {
        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');
      }
    }
  }

  if (muiFormControl && !variant) {
    variant = muiFormControl.variant;
  }

  return /*#__PURE__*/React.createElement(_FormControlContext.default.Provider, {
    value: null
  }, /*#__PURE__*/React.createElement(Component, (0, _extends2.default)({
    className: (0, _clsx.default)(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {
      'start': classes.positionStart,
      'end': classes.positionEnd
    }[position], muiFormControl.margin === 'dense' && classes.marginDense),
    ref: ref
  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(_Typography.default, {
    color: "textSecondary"
  }, children) : children));
});
"development" !== "production" ? InputAdornment.propTypes = {
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: _propTypes.default.node.isRequired,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: _propTypes.default.object.isRequired,

  /**
   * @ignore
   */
  className: _propTypes.default.string,

  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: _propTypes.default
  /* @typescript-to-proptypes-ignore */
  .elementType,

  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the input on click.
   */
  disablePointerEvents: _propTypes.default.bool,

  /**
   * If children is a string then disable wrapping in a Typography component.
   */
  disableTypography: _propTypes.default.bool,

  /**
   * @ignore
   */
  muiFormControl: _propTypes.default.object,

  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: _propTypes.default.oneOf(['start', 'end']),

  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])
} : void 0;

var _default = (0, _withStyles.default)(styles, {
  name: 'MuiInputAdornment'
})(InputAdornment);

exports.default = _default;
      };
    };
  }
}, {package:"@material-ui\\core",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\InputAdornment\\InputAdornment.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\swaps-footer\\swaps-footer.js", {"../../../components/ui/page-container/page-container-footer":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-footer\\index.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\swaps-footer\swaps-footer.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SwapsFooter;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _i18n = require("../../../contexts/i18n");

var _pageContainerFooter = _interopRequireDefault(require("../../../components/ui/page-container/page-container-footer"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function SwapsFooter({
  onCancel,
  hideCancel,
  onSubmit,
  submitText,
  disabled,
  showTermsOfService,
  showTopBorder,
  className = '',
  cancelText
}) {
  const t = (0, _react.useContext)(_i18n.I18nContext);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "swaps-footer"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('swaps-footer__buttons', className, {
      'swaps-footer__buttons--border': showTopBorder
    })
  }, /*#__PURE__*/_react.default.createElement(_pageContainerFooter.default, {
    onCancel: onCancel,
    hideCancel: hideCancel,
    cancelText: cancelText || t('back'),
    onSubmit: onSubmit,
    submitText: submitText,
    footerClassName: (0, _classnames.default)('swaps-footer__custom-page-container-footer-class', className),
    footerButtonClassName: (0, _classnames.default)('swaps-footer__custom-page-container-footer-button-class', {
      'swaps-footer__custom-page-container-footer-button-class--single': hideCancel
    }),
    disabled: disabled
  })), showTermsOfService && /*#__PURE__*/_react.default.createElement("div", {
    className: "swaps-footer__bottom-text",
    onClick: () => global.platform.openTab({
      url: 'https://metamask.io/terms.html'
    })
  }, t('termsOfService')));
}

SwapsFooter.propTypes = {
  onCancel: _propTypes.default.func,
  hideCancel: _propTypes.default.bool,
  onSubmit: _propTypes.default.func.isRequired,
  submitText: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  showTermsOfService: _propTypes.default.bool,
  showTopBorder: _propTypes.default.bool,
  className: _propTypes.default.string,
  cancelText: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\swaps-footer\\swaps-footer.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\pulse-loader\\pulse-loader.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\pulse-loader\pulse-loader.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PulseLoader;

var _react = _interopRequireDefault(require("react"));

function PulseLoader() {
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "pulse-loader"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "pulse-loader__loading-dot-one"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "pulse-loader__loading-dot-two"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "pulse-loader__loading-dot-three"
  }));
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\pulse-loader\\pulse-loader.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\url-icon\\url-icon.js", {"../icon-with-fallback":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-with-fallback\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\url-icon\url-icon.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = UrlIcon;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _iconWithFallback = _interopRequireDefault(require("../icon-with-fallback"));

function UrlIcon({
  url,
  className,
  name,
  fallbackClassName
}) {
  return /*#__PURE__*/_react.default.createElement(_iconWithFallback.default, {
    className: (0, _classnames.default)('url-icon', className),
    icon: url,
    name: name,
    fallbackClassName: (0, _classnames.default)('url-icon__fallback', fallbackClassName)
  });
}

UrlIcon.propTypes = {
  url: _propTypes.default.string,
  className: _propTypes.default.string,
  name: _propTypes.default.string,
  fallbackClassName: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\url-icon\\url-icon.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\view-on-ether-scan-link\\view-on-ether-scan-link.js", {"../../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../../../hooks/useMetricEvent":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useMetricEvent.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\awaiting-swap\view-on-ether-scan-link\view-on-ether-scan-link.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ViewOnEtherScanLink;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _i18n = require("../../../../contexts/i18n");

var _useMetricEvent = require("../../../../hooks/useMetricEvent");

var _util = require("../../../../helpers/utils/util");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ViewOnEtherScanLink({
  txHash,
  blockExplorerUrl,
  isCustomBlockExplorerUrl
}) {
  const t = (0, _react.useContext)(_i18n.I18nContext);
  const blockExplorerLinkClickedEvent = (0, _useMetricEvent.useNewMetricEvent)({
    category: 'Swaps',
    event: 'Clicked Block Explorer Link',
    properties: {
      link_type: 'Transaction Block Explorer',
      action: 'Swap Transaction',
      block_explorer_domain: (0, _util.getURLHostName)(blockExplorerUrl)
    }
  });
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('awaiting-swap__view-on-etherscan', {
      'awaiting-swap__view-on-etherscan--visible': txHash,
      'awaiting-swap__view-on-etherscan--invisible': !txHash
    }),
    onClick: () => {
      blockExplorerLinkClickedEvent();
      global.platform.openTab({
        url: blockExplorerUrl
      });
    }
  }, isCustomBlockExplorerUrl ? t('viewOnCustomBlockExplorer', [t('blockExplorerSwapAction'), (0, _util.getURLHostName)(blockExplorerUrl)]) : t('viewOnEtherscan', [t('blockExplorerSwapAction')]));
}

ViewOnEtherScanLink.propTypes = {
  txHash: _propTypes.default.string,
  blockExplorerUrl: _propTypes.default.string,
  isCustomBlockExplorerUrl: _propTypes.default.bool
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\awaiting-swap\\view-on-ether-scan-link\\view-on-ether-scan-link.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-input-pair\\dropdown-input-pair.js", {"../../../components/ui/text-field":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\text-field\\index.js","../dropdown-search-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-search-list\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\dropdown-input-pair\dropdown-input-pair.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DropdownInputPair;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _dropdownSearchList = _interopRequireDefault(require("../dropdown-search-list"));

var _textField = _interopRequireDefault(require("../../../components/ui/text-field"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const characterWidthMap = {
  1: 5.86,
  2: 10.05,
  3: 10.45,
  4: 11.1,
  5: 10,
  6: 10.06,
  7: 9.17,
  8: 10.28,
  9: 10.06,
  0: 11.22,
  '.': 4.55
};

const getInputWidth = value => {
  const valueString = String(value);
  const charArray = valueString.split('');
  return charArray.reduce((inputWidth, _char) => inputWidth + characterWidthMap[_char], 12);
};

function DropdownInputPair({
  itemsToSearch = [],
  onInputChange,
  inputValue = '',
  onSelect,
  leftValue,
  selectedItem,
  SearchListPlaceholder,
  maxListItems,
  selectPlaceHolderText,
  loading,
  hideItemIf,
  listContainerClassName,
  autoFocus
}) {
  const [isOpen, setIsOpen] = (0, _react.useState)(false);

  const open = () => setIsOpen(true);

  const close = () => setIsOpen(false);

  const inputRef = (0, _react.useRef)();

  const onTextFieldChange = event => {
    event.stopPropagation(); // Automatically prefix value with 0. if user begins typing .

    const valueToUse = event.target.value === '.' ? '0.' : event.target.value; // Regex that validates strings with only numbers, 'x.', '.x', and 'x.x'

    const regexp = /^(\.\d+|\d+(\.\d+)?|\d+\.)$/u; // If the value is either empty or contains only numbers and '.' and only has one '.', update input to match

    if (valueToUse === '' || regexp.test(valueToUse)) {
      onInputChange(valueToUse);
    } else {
      // otherwise, use the previously set inputValue (effectively denying the user from inputting the last char)
      // or an empty string if we do not yet have an inputValue
      onInputChange(inputValue || '');
    }
  };

  const [applyTwoLineStyle, setApplyTwoLineStyle] = (0, _react.useState)(null);
  (0, _react.useEffect)(() => {
    var _inputRef$current, _inputRef$current$get;

    setApplyTwoLineStyle(((inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : (_inputRef$current$get = _inputRef$current.getBoundingClientRect()) === null || _inputRef$current$get === void 0 ? void 0 : _inputRef$current$get.width) || 0) + getInputWidth(inputValue || '') > 137);
  }, [inputValue, inputRef]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "dropdown-input-pair"
  }, /*#__PURE__*/_react.default.createElement(_dropdownSearchList.default, {
    itemsToSearch: itemsToSearch,
    SearchListPlaceholder: SearchListPlaceholder,
    fuseSearchKeys: [{
      name: 'name',
      weight: 0.499
    }, {
      name: 'symbol',
      weight: 0.499
    }, {
      name: 'address',
      weight: 0.002
    }],
    maxListItems: maxListItems,
    onOpen: open,
    onClose: close,
    onSelect: onSelect,
    className: isOpen ? 'dropdown-input-pair__list--full-width' : '',
    externallySelectedItem: selectedItem,
    selectPlaceHolderText: selectPlaceHolderText,
    selectorClosedClassName: "dropdown-input-pair__selector--closed",
    listContainerClassName: listContainerClassName,
    loading: loading,
    hideItemIf: hideItemIf,
    defaultToAll: true
  }), !isOpen && /*#__PURE__*/_react.default.createElement(_textField.default, {
    className: (0, _classnames.default)('dropdown-input-pair__input', {
      'dropdown-input-pair__two-line-input': applyTwoLineStyle
    }),
    type: "text",
    placeholder: "0",
    onChange: onTextFieldChange,
    fullWidth: true,
    margin: "dense",
    value: inputValue,
    autoFocus: autoFocus
  }), !isOpen && leftValue && /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('dropdown-input-pair__left-value', {
      'dropdown-input-pair__left-value--two-lines': applyTwoLineStyle
    }),
    ref: inputRef
  }, "\u2248 ", leftValue));
}

DropdownInputPair.propTypes = {
  /**
   * Give items data for the component
   */
  itemsToSearch: _propTypes.default.array,

  /**
   * Handler for input change
   */
  onInputChange: _propTypes.default.func,

  /**
   * Show input value content
   */
  inputValue: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),

  /**
   * Handler for onSelect
   */
  onSelect: _propTypes.default.func,

  /**
   * Set value to left
   */
  leftValue: _propTypes.default.string,

  /**
   * Show selected item
   */
  selectedItem: _propTypes.default.object,

  /**
   * Doesn't look like this is used
   */
  SearchListPlaceholder: _propTypes.default.func,

  /**
   * Define maximum item per list
   */
  maxListItems: _propTypes.default.number,

  /**
   * Show select placeholder text
   */
  selectPlaceHolderText: _propTypes.default.string,

  /**
   * Check if the component is loading
   */
  loading: _propTypes.default.bool,

  /**
   * Handler for hide item
   */
  hideItemIf: _propTypes.default.func,

  /**
   * Add custom CSS class for list container
   */
  listContainerClassName: _propTypes.default.string,

  /**
   * Check if the component is auto focus
   */
  autoFocus: _propTypes.default.bool
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-input-pair\\dropdown-input-pair.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\slippage-buttons\\slippage-buttons.js", {"../../../components/ui/box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","../../../components/ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../../components/ui/button-group":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button-group\\index.js","../../../components/ui/info-tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\info-tooltip\\index.js","../../../components/ui/toggle-button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\toggle-button\\index.js","../../../components/ui/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\index.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../swaps.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\swaps.util.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\slippage-buttons\slippage-buttons.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SlippageButtons;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _i18n = require("../../../contexts/i18n");

var _buttonGroup = _interopRequireDefault(require("../../../components/ui/button-group"));

var _button = _interopRequireDefault(require("../../../components/ui/button"));

var _infoTooltip = _interopRequireDefault(require("../../../components/ui/info-tooltip"));

var _toggleButton = _interopRequireDefault(require("../../../components/ui/toggle-button"));

var _box = _interopRequireDefault(require("../../../components/ui/box"));

var _typography = _interopRequireDefault(require("../../../components/ui/typography"));

var _designSystem = require("../../../helpers/constants/design-system");

var _swaps = require("../swaps.util");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function SlippageButtons({
  onSelect,
  maxAllowedSlippage,
  currentSlippage,
  smartTransactionsEnabled,
  smartTransactionsOptInStatus,
  setSmartTransactionsOptInStatus,
  currentSmartTransactionsError
}) {
  const t = (0, _react.useContext)(_i18n.I18nContext);
  const [customValue, setCustomValue] = (0, _react.useState)(() => {
    if (typeof currentSlippage === 'number' && currentSlippage !== 2 && currentSlippage !== 3) {
      return currentSlippage.toString();
    }

    return '';
  });
  const [enteringCustomValue, setEnteringCustomValue] = (0, _react.useState)(false);
  const [activeButtonIndex, setActiveButtonIndex] = (0, _react.useState)(() => {
    if (currentSlippage === 3) {
      return 1;
    } else if (currentSlippage === 2) {
      return 0;
    } else if (typeof currentSlippage === 'number') {
      return 2;
    }

    return 1; // Choose activeButtonIndex = 1 for 3% slippage by default.
  });
  const [open, setOpen] = (0, _react.useState)(() => {
    return currentSlippage !== 3; // Only open Advanced Options by default if it's not default 3% slippage.
  });
  const [inputRef, setInputRef] = (0, _react.useState)(null);
  let errorText = '';

  if (customValue) {
    // customValue is a string, e.g. '0'
    if (Number(customValue) < 0) {
      errorText = t('swapSlippageNegative');
    } else if (Number(customValue) > 0 && Number(customValue) <= 1) {
      // We will not show this warning for 0% slippage, because we will only
      // return non-slippage quotes from off-chain makers.
      errorText = t('swapLowSlippageError');
    } else if (Number(customValue) >= 5 && Number(customValue) <= maxAllowedSlippage) {
      errorText = t('swapHighSlippageWarning');
    } else if (Number(customValue) > maxAllowedSlippage) {
      errorText = t('swapsExcessiveSlippageWarning');
    }
  }

  const customValueText = customValue || t('swapCustom');
  (0, _react.useEffect)(() => {
    if (inputRef && enteringCustomValue && window.document.activeElement !== inputRef) {
      inputRef.focus();
    }
  }, [inputRef, enteringCustomValue]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "slippage-buttons"
  }, /*#__PURE__*/_react.default.createElement("button", {
    onClick: () => setOpen(!open),
    className: (0, _classnames.default)('slippage-buttons__header', {
      'slippage-buttons__header--open': open
    })
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "slippage-buttons__header-text"
  }, t('swapsAdvancedOptions')), open ? /*#__PURE__*/_react.default.createElement("i", {
    className: "fa fa-angle-up"
  }) : /*#__PURE__*/_react.default.createElement("i", {
    className: "fa fa-angle-down"
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "slippage-buttons__content"
  }, open && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "slippage-buttons__dropdown-content"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "slippage-buttons__buttons-prefix"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "slippage-buttons__prefix-text"
  }, t('swapsMaxSlippage')), /*#__PURE__*/_react.default.createElement(_infoTooltip.default, {
    position: "top",
    contentText: t('swapAdvancedSlippageInfo')
  })), /*#__PURE__*/_react.default.createElement(_buttonGroup.default, {
    defaultActiveButtonIndex: activeButtonIndex === 2 && !customValue ? 1 : activeButtonIndex,
    variant: "radiogroup",
    newActiveButtonIndex: activeButtonIndex,
    className: (0, _classnames.default)('button-group', 'slippage-buttons__button-group')
  }, /*#__PURE__*/_react.default.createElement(_button.default, {
    onClick: () => {
      setCustomValue('');
      setEnteringCustomValue(false);
      setActiveButtonIndex(0);
      onSelect(2);
    }
  }, "2%"), /*#__PURE__*/_react.default.createElement(_button.default, {
    onClick: () => {
      setCustomValue('');
      setEnteringCustomValue(false);
      setActiveButtonIndex(1);
      onSelect(3);
    }
  }, "3%"), /*#__PURE__*/_react.default.createElement(_button.default, {
    className: (0, _classnames.default)('slippage-buttons__button-group-custom-button', {
      'radio-button--danger': errorText
    }),
    onClick: () => {
      setActiveButtonIndex(2);
      setEnteringCustomValue(true);
    }
  }, enteringCustomValue ? /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('slippage-buttons__custom-input', {
      'slippage-buttons__custom-input--danger': errorText
    })
  }, /*#__PURE__*/_react.default.createElement("input", {
    onChange: event => {
      setCustomValue(event.target.value);
      onSelect(Number(event.target.value));
    },
    type: "number",
    step: "0.1",
    ref: setInputRef,
    onBlur: () => {
      setEnteringCustomValue(false);
    },
    value: customValue || ''
  })) : customValueText, (customValue || enteringCustomValue) && /*#__PURE__*/_react.default.createElement("div", {
    className: "slippage-buttons__percentage-suffix"
  }, "%")))), smartTransactionsEnabled && /*#__PURE__*/_react.default.createElement(_box.default, {
    marginTop: 2,
    display: _designSystem.DISPLAY.FLEX
  }, /*#__PURE__*/_react.default.createElement(_box.default, {
    display: _designSystem.DISPLAY.FLEX,
    alignItems: _designSystem.ALIGN_ITEMS.CENTER,
    paddingRight: 3
  }, /*#__PURE__*/_react.default.createElement(_typography.default, {
    variant: _designSystem.TYPOGRAPHY.H6,
    boxProps: {
      paddingRight: 2
    },
    fontWeight: _designSystem.FONT_WEIGHT.BOLD
  }, t('smartTransaction')), currentSmartTransactionsError ? /*#__PURE__*/_react.default.createElement(_infoTooltip.default, {
    position: "top",
    contentText: (0, _swaps.smartTransactionsErrorMessages)(currentSmartTransactionsError)
  }) : /*#__PURE__*/_react.default.createElement(_infoTooltip.default, {
    position: "top",
    contentText: t('stxTooltip')
  })), /*#__PURE__*/_react.default.createElement(_toggleButton.default, {
    value: smartTransactionsOptInStatus,
    onToggle: value => {
      setSmartTransactionsOptInStatus(!value);
    },
    offLabel: t('off'),
    onLabel: t('on'),
    disabled: Boolean(currentSmartTransactionsError)
  }))), errorText && /*#__PURE__*/_react.default.createElement("div", {
    className: "slippage-buttons__error-text"
  }, errorText)));
}

SlippageButtons.propTypes = {
  onSelect: _propTypes.default.func.isRequired,
  maxAllowedSlippage: _propTypes.default.number.isRequired,
  currentSlippage: _propTypes.default.number,
  smartTransactionsEnabled: _propTypes.default.bool.isRequired,
  smartTransactionsOptInStatus: _propTypes.default.bool,
  setSmartTransactionsOptInStatus: _propTypes.default.func,
  currentSmartTransactionsError: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\slippage-buttons\\slippage-buttons.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-search-list\\dropdown-search-list.js", {"../../../../shared/constants/swaps":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\swaps.js","../../../components/ui/actionable-message/actionable-message":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\actionable-message\\actionable-message.js","../../../components/ui/pulse-loader":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\pulse-loader\\index.js","../../../components/ui/url-icon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\url-icon\\index.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../ducks/swaps/swaps":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\swaps\\swaps.js","../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../../hooks/useMetricEvent":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useMetricEvent.js","../../../selectors/selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\selectors.js","../import-token":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\import-token\\index.js","../searchable-item-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\searchable-item-list\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","lodash":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\lodash.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\dropdown-search-list\dropdown-search-list.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DropdownSearchList;

var _react = _interopRequireWildcard(require("react"));

var _reactRedux = require("react-redux");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _lodash = require("lodash");

var _i18n = require("../../../contexts/i18n");

var _searchableItemList = _interopRequireDefault(require("../searchable-item-list"));

var _pulseLoader = _interopRequireDefault(require("../../../components/ui/pulse-loader"));

var _urlIcon = _interopRequireDefault(require("../../../components/ui/url-icon"));

var _actionableMessage = _interopRequireDefault(require("../../../components/ui/actionable-message/actionable-message"));

var _importToken = _interopRequireDefault(require("../import-token"));

var _useMetricEvent = require("../../../hooks/useMetricEvent");

var _selectors = require("../../../selectors/selectors");

var _swaps = require("../../../../shared/constants/swaps");

var _util = require("../../../helpers/utils/util");

var _swaps2 = require("../../../ducks/swaps/swaps");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function DropdownSearchList({
  searchListClassName,
  itemsToSearch,
  selectPlaceHolderText,
  fuseSearchKeys,
  defaultToAll,
  maxListItems,
  onSelect,
  startingItem,
  onOpen,
  onClose,
  className = '',
  externallySelectedItem,
  selectorClosedClassName,
  loading,
  hideRightLabels,
  hideItemIf,
  listContainerClassName,
  shouldSearchForImports
}) {
  var _ref, _rpcPrefs$blockExplor;

  const t = (0, _react.useContext)(_i18n.I18nContext);
  const [isOpen, setIsOpen] = (0, _react.useState)(false);
  const [isImportTokenModalOpen, setIsImportTokenModalOpen] = (0, _react.useState)(false);
  const [selectedItem, setSelectedItem] = (0, _react.useState)(startingItem);
  const [tokenForImport, setTokenForImport] = (0, _react.useState)(null);
  const hardwareWalletUsed = (0, _reactRedux.useSelector)(_selectors.isHardwareWallet);
  const hardwareWalletType = (0, _reactRedux.useSelector)(_selectors.getHardwareWalletType);
  const chainId = (0, _reactRedux.useSelector)(_selectors.getCurrentChainId);
  const rpcPrefs = (0, _reactRedux.useSelector)(_selectors.getRpcPrefsForCurrentProvider);
  const smartTransactionsOptInStatus = (0, _reactRedux.useSelector)(_swaps2.getSmartTransactionsOptInStatus);
  const smartTransactionsEnabled = (0, _reactRedux.useSelector)(_swaps2.getSmartTransactionsEnabled);
  const tokenImportedEvent = (0, _useMetricEvent.useNewMetricEvent)({
    event: 'Token Imported',
    sensitiveProperties: {
      symbol: tokenForImport === null || tokenForImport === void 0 ? void 0 : tokenForImport.symbol,
      address: tokenForImport === null || tokenForImport === void 0 ? void 0 : tokenForImport.address,
      chain_id: chainId,
      is_hardware_wallet: hardwareWalletUsed,
      hardware_wallet_type: hardwareWalletType,
      stx_enabled: smartTransactionsEnabled,
      stx_user_opt_in: smartTransactionsOptInStatus
    },
    category: 'swaps'
  });
  const close = (0, _react.useCallback)(() => {
    setIsOpen(false);
    onClose === null || onClose === void 0 ? void 0 : onClose();
  }, [onClose]);
  const onClickItem = (0, _react.useCallback)(item => {
    onSelect === null || onSelect === void 0 ? void 0 : onSelect(item);
    setSelectedItem(item);
    close();
  }, [onSelect, close]);

  const onOpenImportTokenModalClick = item => {
    setTokenForImport(item);
    setIsImportTokenModalOpen(true);
  };

  const onImportTokenClick = () => {
    tokenImportedEvent(); // Only when a user confirms import of a token, we add it and show it in a dropdown.

    onSelect === null || onSelect === void 0 ? void 0 : onSelect(tokenForImport);
    setSelectedItem(tokenForImport);
    setTokenForImport(null);
    close();
  };

  const onImportTokenCloseClick = () => {
    setIsImportTokenModalOpen(false);
    close();
  };

  const onClickSelector = (0, _react.useCallback)(() => {
    if (!isOpen) {
      setIsOpen(true);
      onOpen === null || onOpen === void 0 ? void 0 : onOpen();
    }
  }, [isOpen, onOpen]);
  const prevExternallySelectedItemRef = (0, _react.useRef)();
  (0, _react.useEffect)(() => {
    prevExternallySelectedItemRef.current = externallySelectedItem;
  });
  const prevExternallySelectedItem = prevExternallySelectedItemRef.current;
  (0, _react.useEffect)(() => {
    if (externallySelectedItem && !(0, _lodash.isEqual)(externallySelectedItem, selectedItem)) {
      setSelectedItem(externallySelectedItem);
    } else if (prevExternallySelectedItem && !externallySelectedItem) {
      setSelectedItem(null);
    }
  }, [externallySelectedItem, selectedItem, prevExternallySelectedItem]);

  const onKeyUp = e => {
    if (e.key === 'Escape') {
      close();
    } else if (e.key === 'Enter') {
      onClickSelector(e);
    }
  };

  const blockExplorerLink = (_ref = (_rpcPrefs$blockExplor = rpcPrefs.blockExplorerUrl) !== null && _rpcPrefs$blockExplor !== void 0 ? _rpcPrefs$blockExplor : _swaps.SWAPS_CHAINID_DEFAULT_BLOCK_EXPLORER_URL_MAP[chainId]) !== null && _ref !== void 0 ? _ref : null;
  const blockExplorerLabel = rpcPrefs.blockExplorerUrl ? (0, _util.getURLHostName)(blockExplorerLink) : t('etherscan');
  const blockExplorerLinkClickedEvent = (0, _useMetricEvent.useNewMetricEvent)({
    category: 'Swaps',
    event: 'Clicked Block Explorer Link',
    properties: {
      link_type: 'Token Tracker',
      action: 'Verify Contract Address',
      block_explorer_domain: (0, _util.getURLHostName)(blockExplorerLink)
    }
  });
  const importTokenProps = {
    onImportTokenCloseClick,
    onImportTokenClick,
    setIsImportTokenModalOpen,
    tokenForImport
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('dropdown-search-list', className),
    onClick: onClickSelector,
    onKeyUp: onKeyUp,
    tabIndex: "0"
  }, tokenForImport && isImportTokenModalOpen && /*#__PURE__*/_react.default.createElement(_importToken.default, importTokenProps), !isOpen && /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('dropdown-search-list__selector-closed-container', selectorClosedClassName)
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "dropdown-search-list__selector-closed"
  }, (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.iconUrl) && /*#__PURE__*/_react.default.createElement(_urlIcon.default, {
    url: selectedItem.iconUrl,
    className: "dropdown-search-list__selector-closed-icon",
    name: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.symbol
  }), !(selectedItem !== null && selectedItem !== void 0 && selectedItem.iconUrl) && /*#__PURE__*/_react.default.createElement("div", {
    className: "dropdown-search-list__default-dropdown-icon"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "dropdown-search-list__labels"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "dropdown-search-list__item-labels"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: (0, _classnames.default)('dropdown-search-list__closed-primary-label', {
      'dropdown-search-list__select-default': !(selectedItem !== null && selectedItem !== void 0 && selectedItem.symbol)
    })
  }, (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.symbol) || selectPlaceHolderText)))), /*#__PURE__*/_react.default.createElement("i", {
    className: "fa fa-caret-down fa-lg dropdown-search-list__caret"
  })), isOpen && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_searchableItemList.default, {
    itemsToSearch: loading ? [] : itemsToSearch,
    Placeholder: ({
      searchQuery
    }) => loading ? /*#__PURE__*/_react.default.createElement("div", {
      className: "dropdown-search-list__loading-item"
    }, /*#__PURE__*/_react.default.createElement(_pulseLoader.default, null), /*#__PURE__*/_react.default.createElement("div", {
      className: "dropdown-search-list__loading-item-text-container"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "dropdown-search-list__loading-item-text"
    }, t('swapFetchingTokens')))) : /*#__PURE__*/_react.default.createElement("div", {
      className: "dropdown-search-list__placeholder"
    }, t('swapBuildQuotePlaceHolderText', [searchQuery]), /*#__PURE__*/_react.default.createElement("div", {
      tabIndex: "0",
      className: "searchable-item-list__item searchable-item-list__item--add-token",
      key: "searchable-item-list-item-last"
    }, /*#__PURE__*/_react.default.createElement(_actionableMessage.default, {
      message: blockExplorerLink && t('addCustomTokenByContractAddress', [/*#__PURE__*/_react.default.createElement("a", {
        key: "dropdown-search-list__etherscan-link",
        onClick: () => {
          blockExplorerLinkClickedEvent();
          global.platform.openTab({
            url: blockExplorerLink
          });
        },
        target: "_blank",
        rel: "noopener noreferrer"
      }, blockExplorerLabel)])
    }))),
    searchPlaceholderText: t('swapSearchForAToken'),
    fuseSearchKeys: fuseSearchKeys,
    defaultToAll: defaultToAll,
    onClickItem: onClickItem,
    onOpenImportTokenModalClick: onOpenImportTokenModalClick,
    maxListItems: maxListItems,
    className: (0, _classnames.default)('dropdown-search-list__token-container', searchListClassName, {
      'dropdown-search-list--open': isOpen
    }),
    hideRightLabels: hideRightLabels,
    hideItemIf: hideItemIf,
    listContainerClassName: listContainerClassName,
    shouldSearchForImports: shouldSearchForImports
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "dropdown-search-list__close-area",
    onClick: event => {
      event.stopPropagation();
      setIsOpen(false);
      onClose === null || onClose === void 0 ? void 0 : onClose();
    }
  })));
}

DropdownSearchList.propTypes = {
  itemsToSearch: _propTypes.default.array,
  onSelect: _propTypes.default.func,
  searchListClassName: _propTypes.default.string,
  fuseSearchKeys: _propTypes.default.arrayOf(_propTypes.default.shape({
    name: _propTypes.default.string,
    weight: _propTypes.default.number
  })),
  defaultToAll: _propTypes.default.bool,
  maxListItems: _propTypes.default.number,
  startingItem: _propTypes.default.object,
  onOpen: _propTypes.default.func,
  onClose: _propTypes.default.func,
  className: _propTypes.default.string,
  externallySelectedItem: _propTypes.default.object,
  loading: _propTypes.default.bool,
  selectPlaceHolderText: _propTypes.default.string,
  selectorClosedClassName: _propTypes.default.string,
  hideRightLabels: _propTypes.default.bool,
  hideItemIf: _propTypes.default.func,
  listContainerClassName: _propTypes.default.string,
  shouldSearchForImports: _propTypes.default.bool
};


      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\dropdown-search-list\\dropdown-search-list.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\gas.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\helpers\constants\gas.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PRIORITY_LEVEL_ICON_MAP = exports.GAS_FORM_ERRORS = void 0;
exports.getGasFormErrorText = getGasFormErrorText;
const GAS_FORM_ERRORS = {
  GAS_LIMIT_OUT_OF_BOUNDS: 'editGasLimitOutOfBounds',
  MAX_PRIORITY_FEE_TOO_LOW: 'editGasMaxPriorityFeeLow',
  MAX_FEE_TOO_LOW: 'editGasMaxFeeLow',
  MAX_PRIORITY_FEE_BELOW_MINIMUM: 'editGasMaxPriorityFeeBelowMinimum',
  MAX_PRIORITY_FEE_HIGH_WARNING: 'editGasMaxPriorityFeeHigh',
  MAX_FEE_HIGH_WARNING: 'editGasMaxFeeHigh',
  MAX_FEE_IMBALANCE: 'editGasMaxFeeImbalance',
  GAS_PRICE_TOO_LOW: 'editGasPriceTooLow'
};
exports.GAS_FORM_ERRORS = GAS_FORM_ERRORS;

function getGasFormErrorText(type, t, {
  minimumGasLimit
} = {}) {
  switch (type) {
    case GAS_FORM_ERRORS.GAS_LIMIT_OUT_OF_BOUNDS:
      return t('editGasLimitOutOfBounds', [minimumGasLimit]);

    case GAS_FORM_ERRORS.MAX_PRIORITY_FEE_TOO_LOW:
      return t('editGasMaxPriorityFeeLow');

    case GAS_FORM_ERRORS.MAX_FEE_TOO_LOW:
      return t('editGasMaxFeeLow');

    case GAS_FORM_ERRORS.MAX_PRIORITY_FEE_BELOW_MINIMUM:
      return t('editGasMaxPriorityFeeBelowMinimum');

    case GAS_FORM_ERRORS.MAX_PRIORITY_FEE_HIGH_WARNING:
      return t('editGasMaxPriorityFeeHigh');

    case GAS_FORM_ERRORS.MAX_FEE_HIGH_WARNING:
      return t('editGasMaxFeeHigh');

    case GAS_FORM_ERRORS.MAX_FEE_IMBALANCE:
      return t('editGasMaxFeePriorityImbalance');

    case GAS_FORM_ERRORS.GAS_PRICE_TOO_LOW:
      return t('editGasPriceTooLow');

    default:
      return '';
  }
}

const PRIORITY_LEVEL_ICON_MAP = {
  low: '🐢',
  medium: '🦊',
  high: '🦍',
  dappSuggested: '🌐',
  swapSuggested: '🔄',
  custom: '⚙️'
};
exports.PRIORITY_LEVEL_ICON_MAP = PRIORITY_LEVEL_ICON_MAP;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\gas.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasPriceInput.js", {"../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","./utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\utils.js","lodash":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\lodash.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\gasFeeInput\useGasPriceInput.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useGasPriceInput = useGasPriceInput;

var _react = require("react");

var _lodash = require("lodash");

var _gas = require("../../../shared/constants/gas");

var _conversions = require("../../helpers/utils/conversions.util");

var _transactions = require("../../helpers/utils/transactions.util");

var _utils = require("./utils");

function getGasPriceEstimate(gasFeeEstimates, gasEstimateType, estimateToUse) {
  if (gasEstimateType === _gas.GAS_ESTIMATE_TYPES.LEGACY) {
    var _gasFeeEstimates$esti;

    return (_gasFeeEstimates$esti = gasFeeEstimates === null || gasFeeEstimates === void 0 ? void 0 : gasFeeEstimates[estimateToUse]) !== null && _gasFeeEstimates$esti !== void 0 ? _gasFeeEstimates$esti : '0';
  } else if (gasEstimateType === _gas.GAS_ESTIMATE_TYPES.ETH_GASPRICE) {
    var _gasFeeEstimates$gasP;

    return (_gasFeeEstimates$gasP = gasFeeEstimates === null || gasFeeEstimates === void 0 ? void 0 : gasFeeEstimates.gasPrice) !== null && _gasFeeEstimates$gasP !== void 0 ? _gasFeeEstimates$gasP : '0';
  }

  return '0';
}
/**
 * @typedef {Object} GasPriceInputsReturnType
 * @property {DecGweiString} [gasPrice] - the gasPrice input value.
 * @property {(DecGweiString) => void} setGasPrice - state setter method to update the gasPrice.
 * @property {(boolean) => true} setGasPriceHasBeenManuallySet - state setter method to update gasPriceHasBeenManuallySet
 * field gasPriceHasBeenManuallySet is used in gasPrice calculations.
 */

/**
 * @param options
 * @param options.estimateToUse
 * @param options.gasEstimateType
 * @param options.gasFeeEstimates
 * @param options.transaction
 * @returns {GasPriceInputsReturnType}
 */


function useGasPriceInput({
  estimateToUse,
  gasEstimateType,
  gasFeeEstimates,
  transaction
}) {
  const [gasPriceHasBeenManuallySet, setGasPriceHasBeenManuallySet] = (0, _react.useState)((transaction === null || transaction === void 0 ? void 0 : transaction.userFeeLevel) === _gas.CUSTOM_GAS_ESTIMATE);
  const [gasPrice, setGasPrice] = (0, _react.useState)(() => {
    const {
      gasPrice: txGasPrice
    } = (transaction === null || transaction === void 0 ? void 0 : transaction.txParams) || {};
    return txGasPrice && (0, _utils.feeParamsAreCustom)(transaction) ? Number((0, _conversions.hexWEIToDecGWEI)(txGasPrice)) : null;
  });
  const [initialGasPriceEstimates] = (0, _react.useState)(gasFeeEstimates);
  const gasPriceEstimatesHaveNotChanged = (0, _lodash.isEqual)(initialGasPriceEstimates, gasFeeEstimates);
  const gasPriceToUse = gasPrice !== null && (gasPriceHasBeenManuallySet || gasPriceEstimatesHaveNotChanged || (0, _transactions.isLegacyTransaction)(transaction === null || transaction === void 0 ? void 0 : transaction.txParams)) ? gasPrice : getGasPriceEstimate(gasFeeEstimates, gasEstimateType, estimateToUse);
  return {
    gasPrice: gasPriceToUse,
    setGasPrice,
    setGasPriceHasBeenManuallySet
  };
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasPriceInput.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useMaxPriorityFeePerGasInput.js", {"../../../shared/modules/conversion.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\conversion.utils.js","../../helpers/constants/common":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\common.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../useCurrencyDisplay":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useCurrencyDisplay.js","../useUserPreferencedCurrency":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useUserPreferencedCurrency.js","./utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\utils.js","ethereumjs-util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\ethereumjs-util\\dist.browser\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\gasFeeInput\useMaxPriorityFeePerGasInput.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMaxPriorityFeePerGasInput = useMaxPriorityFeePerGasInput;

var _reactRedux = require("react-redux");

var _react = require("react");

var _ethereumjsUtil = require("ethereumjs-util");

var _common = require("../../helpers/constants/common");

var _conversions = require("../../helpers/utils/conversions.util");

var _selectors = require("../../selectors");

var _transactions = require("../../helpers/utils/transactions.util");

var _conversion = require("../../../shared/modules/conversion.utils");

var _useCurrencyDisplay = require("../useCurrencyDisplay");

var _useUserPreferencedCurrency = require("../useUserPreferencedCurrency");

var _utils = require("./utils");

const getMaxPriorityFeePerGasFromTransaction = transaction => {
  const {
    maxPriorityFeePerGas,
    maxFeePerGas,
    gasPrice
  } = (transaction === null || transaction === void 0 ? void 0 : transaction.txParams) || {};
  return Number((0, _conversions.hexWEIToDecGWEI)(maxPriorityFeePerGas || maxFeePerGas || gasPrice));
};
/**
 * @typedef {Object} MaxPriorityFeePerGasInputReturnType
 * @property {DecGweiString} [maxPriorityFeePerGas] - the maxPriorityFeePerGas
 *  input value.
 * @property {string} [maxPriorityFeePerGasFiat] - the maxPriorityFeePerGas
 *  converted to the user's preferred currency.
 * @property {(DecGweiString) => void} setMaxPriorityFeePerGas - state setter
 *  method to update the maxPriorityFeePerGas.
 */

/**
 * @param options
 * @param options.supportsEIP1559V2
 * @param options.estimateToUse
 * @param options.gasEstimateType
 * @param options.gasFeeEstimates
 * @param options.gasLimit
 * @param options.transaction
 * @returns {MaxPriorityFeePerGasInputReturnType}
 */


function useMaxPriorityFeePerGasInput({
  estimateToUse,
  gasEstimateType,
  gasFeeEstimates,
  gasLimit,
  supportsEIP1559V2,
  transaction
}) {
  const supportsEIP1559 = (0, _reactRedux.useSelector)(_selectors.checkNetworkAndAccountSupports1559) && !(0, _transactions.isLegacyTransaction)(transaction === null || transaction === void 0 ? void 0 : transaction.txParams);
  const {
    currency: fiatCurrency,
    numberOfDecimals: fiatNumberOfDecimals
  } = (0, _useUserPreferencedCurrency.useUserPreferencedCurrency)(_common.SECONDARY);
  const showFiat = (0, _reactRedux.useSelector)(_selectors.getShouldShowFiat);
  const initialMaxPriorityFeePerGas = supportsEIP1559 ? getMaxPriorityFeePerGasFromTransaction(transaction) : 0;
  const [maxPriorityFeePerGas, setMaxPriorityFeePerGas] = (0, _react.useState)(() => {
    if (initialMaxPriorityFeePerGas && (0, _utils.feeParamsAreCustom)(transaction)) {
      return initialMaxPriorityFeePerGas;
    }

    return null;
  });
  (0, _react.useEffect)(() => {
    if (supportsEIP1559V2 && initialMaxPriorityFeePerGas) {
      setMaxPriorityFeePerGas(initialMaxPriorityFeePerGas);
    }
  }, [initialMaxPriorityFeePerGas, setMaxPriorityFeePerGas, supportsEIP1559V2]);
  const maxPriorityFeePerGasToUse = maxPriorityFeePerGas !== null && maxPriorityFeePerGas !== void 0 ? maxPriorityFeePerGas : (0, _utils.getGasFeeEstimate)('suggestedMaxPriorityFeePerGas', gasFeeEstimates, gasEstimateType, estimateToUse, initialMaxPriorityFeePerGas || 0); // We need to display the estimated fiat currency impact of the
  // maxPriorityFeePerGas field to the user. This hook calculates that amount.

  const [, {
    value: maxPriorityFeePerGasFiat
  }] = (0, _useCurrencyDisplay.useCurrencyDisplay)((0, _ethereumjsUtil.addHexPrefix)((0, _conversion.multiplyCurrencies)(maxPriorityFeePerGasToUse, gasLimit, {
    toNumericBase: 'hex',
    fromDenomination: 'GWEI',
    toDenomination: 'WEI',
    multiplicandBase: 10,
    multiplierBase: 10
  })), {
    numberOfDecimals: fiatNumberOfDecimals,
    currency: fiatCurrency
  });
  return {
    maxPriorityFeePerGas: maxPriorityFeePerGasToUse,
    maxPriorityFeePerGasFiat: showFiat ? maxPriorityFeePerGasFiat : '',
    setMaxPriorityFeePerGas
  };
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useMaxPriorityFeePerGasInput.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasFeeErrors.js", {"../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../shared/modules/conversion.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\conversion.utils.js","../../helpers/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\gas.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\gasFeeInput\useGasFeeErrors.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useGasFeeErrors = useGasFeeErrors;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _reactRedux = require("react-redux");

var _gas = require("../../../shared/constants/gas");

var _conversion = require("../../../shared/modules/conversion.utils");

var _selectors = require("../../selectors");

var _conversions = require("../../helpers/utils/conversions.util");

var _transactions = require("../../helpers/utils/transactions.util");

var _util = require("../../helpers/utils/util");

var _gas2 = require("../../helpers/constants/gas");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const HIGH_FEE_WARNING_MULTIPLIER = 1.5;

const validateGasLimit = (gasLimit, minimumGasLimit) => {
  const gasLimitTooLow = (0, _conversion.conversionLessThan)({
    value: gasLimit,
    fromNumericBase: 'dec'
  }, {
    value: minimumGasLimit || _gas.GAS_LIMITS.SIMPLE,
    fromNumericBase: 'hex'
  });

  if (gasLimitTooLow) {
    return _gas2.GAS_FORM_ERRORS.GAS_LIMIT_OUT_OF_BOUNDS;
  }

  return undefined;
};

const validateMaxPriorityFee = (maxPriorityFeePerGas, supportsEIP1559) => {
  if (!supportsEIP1559) {
    return undefined;
  }

  if ((0, _util.bnLessThanEqualTo)(maxPriorityFeePerGas, 0)) {
    return _gas2.GAS_FORM_ERRORS.MAX_PRIORITY_FEE_BELOW_MINIMUM;
  }

  return undefined;
};

const validateMaxFee = (maxFeePerGas, maxPriorityFeeError, maxPriorityFeePerGas, supportsEIP1559) => {
  if (maxPriorityFeeError || !supportsEIP1559) {
    return undefined;
  }

  if ((0, _util.bnGreaterThan)(maxPriorityFeePerGas, maxFeePerGas)) {
    return _gas2.GAS_FORM_ERRORS.MAX_FEE_IMBALANCE;
  }

  return undefined;
};

const validateGasPrice = (isFeeMarketGasEstimate, gasPrice, supportsEIP1559, transaction) => {
  var _transaction$txParams;

  if (supportsEIP1559 && isFeeMarketGasEstimate) {
    return undefined;
  }

  if ((!supportsEIP1559 || transaction !== null && transaction !== void 0 && (_transaction$txParams = transaction.txParams) !== null && _transaction$txParams !== void 0 && _transaction$txParams.gasPrice) && (0, _util.bnLessThanEqualTo)(gasPrice, 0)) {
    return _gas2.GAS_FORM_ERRORS.GAS_PRICE_TOO_LOW;
  }

  return undefined;
};

const getMaxPriorityFeeWarning = (gasFeeEstimates, isFeeMarketGasEstimate, isGasEstimatesLoading, maxPriorityFeePerGas, supportsEIP1559) => {
  var _gasFeeEstimates$low;

  if (!supportsEIP1559 || !isFeeMarketGasEstimate || isGasEstimatesLoading) {
    return undefined;
  }

  if ((0, _util.bnLessThan)(maxPriorityFeePerGas, gasFeeEstimates === null || gasFeeEstimates === void 0 ? void 0 : (_gasFeeEstimates$low = gasFeeEstimates.low) === null || _gasFeeEstimates$low === void 0 ? void 0 : _gasFeeEstimates$low.suggestedMaxPriorityFeePerGas)) {
    return _gas2.GAS_FORM_ERRORS.MAX_PRIORITY_FEE_TOO_LOW;
  }

  if (gasFeeEstimates !== null && gasFeeEstimates !== void 0 && gasFeeEstimates.high && (0, _util.bnGreaterThan)(maxPriorityFeePerGas, gasFeeEstimates.high.suggestedMaxPriorityFeePerGas * HIGH_FEE_WARNING_MULTIPLIER)) {
    return _gas2.GAS_FORM_ERRORS.MAX_PRIORITY_FEE_HIGH_WARNING;
  }

  return undefined;
};

const getMaxFeeWarning = (gasFeeEstimates, isGasEstimatesLoading, isFeeMarketGasEstimate, maxFeeError, maxPriorityFeeError, maxFeePerGas, supportsEIP1559) => {
  var _gasFeeEstimates$low2;

  if (maxPriorityFeeError || maxFeeError || !isFeeMarketGasEstimate || !supportsEIP1559 || isGasEstimatesLoading) {
    return undefined;
  }

  if ((0, _util.bnLessThan)(maxFeePerGas, gasFeeEstimates === null || gasFeeEstimates === void 0 ? void 0 : (_gasFeeEstimates$low2 = gasFeeEstimates.low) === null || _gasFeeEstimates$low2 === void 0 ? void 0 : _gasFeeEstimates$low2.suggestedMaxFeePerGas)) {
    return _gas2.GAS_FORM_ERRORS.MAX_FEE_TOO_LOW;
  }

  if (gasFeeEstimates !== null && gasFeeEstimates !== void 0 && gasFeeEstimates.high && (0, _util.bnGreaterThan)(maxFeePerGas, gasFeeEstimates.high.suggestedMaxFeePerGas * HIGH_FEE_WARNING_MULTIPLIER)) {
    return _gas2.GAS_FORM_ERRORS.MAX_FEE_HIGH_WARNING;
  }

  return undefined;
};

const hasBalanceError = (minimumCostInHexWei, transaction, ethBalance) => {
  var _transaction$txParams2;

  if (minimumCostInHexWei === undefined || ethBalance === undefined) {
    return false;
  }

  const minimumTxCostInHexWei = (0, _conversions.addHexes)(minimumCostInHexWei, (transaction === null || transaction === void 0 ? void 0 : (_transaction$txParams2 = transaction.txParams) === null || _transaction$txParams2 === void 0 ? void 0 : _transaction$txParams2.value) || '0x0');
  return (0, _conversion.conversionGreaterThan)({
    value: minimumTxCostInHexWei,
    fromNumericBase: 'hex'
  }, {
    value: ethBalance,
    fromNumericBase: 'hex'
  });
};
/**
 * @typedef {Object} GasFeeErrorsReturnType
 * @property {Object} [gasErrors] - combined map of errors and warnings.
 * @property {boolean} [hasGasErrors] - true if there are errors that can block submission.
 * @property {Object} gasWarnings - map of gas warnings for EIP-1559 fields.
 * @property {boolean} [balanceError] - true if user balance is less than transaction value.
 * @property {boolean} [estimatesUnavailableWarning] - true if supportsEIP1559 is true and
 * estimate is not of type fee-market.
 */

/**
 * @param options
 * @param options.gasEstimateType
 * @param options.gasFeeEstimates
 * @param options.isGasEstimatesLoading
 * @param options.gasLimit
 * @param options.gasPrice
 * @param options.maxPriorityFeePerGas
 * @param options.maxFeePerGas
 * @param options.minimumCostInHexWei
 * @param options.minimumGasLimit
 * @param options.transaction
 * @returns {GasFeeErrorsReturnType}
 */


function useGasFeeErrors({
  gasEstimateType,
  gasFeeEstimates,
  isGasEstimatesLoading,
  gasLimit,
  gasPrice,
  maxPriorityFeePerGas,
  maxFeePerGas,
  minimumCostInHexWei,
  minimumGasLimit,
  transaction
}) {
  const supportsEIP1559 = (0, _reactRedux.useSelector)(_selectors.checkNetworkAndAccountSupports1559) && !(0, _transactions.isLegacyTransaction)(transaction === null || transaction === void 0 ? void 0 : transaction.txParams);
  const isFeeMarketGasEstimate = gasEstimateType === _gas.GAS_ESTIMATE_TYPES.FEE_MARKET; // Get all errors

  const gasLimitError = validateGasLimit(gasLimit, minimumGasLimit);
  const maxPriorityFeeError = validateMaxPriorityFee(maxPriorityFeePerGas, supportsEIP1559);
  const maxFeeError = validateMaxFee(maxFeePerGas, maxPriorityFeeError, maxPriorityFeePerGas, supportsEIP1559);
  const gasPriceError = validateGasPrice(isFeeMarketGasEstimate, gasPrice, supportsEIP1559, transaction); // Get all warnings

  const maxPriorityFeeWarning = getMaxPriorityFeeWarning(gasFeeEstimates, isFeeMarketGasEstimate, isGasEstimatesLoading, maxPriorityFeePerGas, supportsEIP1559);
  const maxFeeWarning = getMaxFeeWarning(gasFeeEstimates, isGasEstimatesLoading, isFeeMarketGasEstimate, maxFeeError, maxPriorityFeeError, maxFeePerGas, supportsEIP1559); // Separating errors from warnings so we can know which value problems
  // are blocking or simply useful information for the users

  const gasErrors = (0, _react.useMemo)(() => {
    const errors = {};

    if (gasLimitError) {
      errors.gasLimit = gasLimitError;
    }

    if (maxPriorityFeeError) {
      errors.maxPriorityFee = maxPriorityFeeError;
    }

    if (maxFeeError) {
      errors.maxFee = maxFeeError;
    }

    if (gasPriceError) {
      errors.gasPrice = gasPriceError;
    }

    return errors;
  }, [gasLimitError, maxPriorityFeeError, maxFeeError, gasPriceError]);
  const gasWarnings = (0, _react.useMemo)(() => {
    const warnings = {};

    if (maxPriorityFeeWarning) {
      warnings.maxPriorityFee = maxPriorityFeeWarning;
    }

    if (maxFeeWarning) {
      warnings.maxFee = maxFeeWarning;
    }

    return warnings;
  }, [maxPriorityFeeWarning, maxFeeWarning]);
  const estimatesUnavailableWarning = supportsEIP1559 && !isFeeMarketGasEstimate; // Determine if we have any errors which should block submission

  const hasGasErrors = Boolean(Object.keys(gasErrors).length); // Combine the warnings and errors into one object for easier use within the UI.
  // This object should have no effect on whether or not the user can submit the form

  const errorsAndWarnings = (0, _react.useMemo)(() => _objectSpread(_objectSpread({}, gasWarnings), gasErrors), [gasErrors, gasWarnings]);
  const {
    balance: ethBalance
  } = (0, _reactRedux.useSelector)(_selectors.getSelectedAccount, _reactRedux.shallowEqual);
  const balanceError = hasBalanceError(minimumCostInHexWei, transaction, ethBalance);
  return {
    gasErrors: errorsAndWarnings,
    hasGasErrors,
    gasWarnings,
    balanceError,
    estimatesUnavailableWarning,
    hasSimulationError: Boolean(transaction === null || transaction === void 0 ? void 0 : transaction.simulationFails)
  };
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasFeeErrors.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasEstimates.js", {"../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../shared/modules/gas.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\gas.utils.js","../../helpers/constants/common":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\common.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../useCurrencyDisplay":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useCurrencyDisplay.js","../useUserPreferencedCurrency":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useUserPreferencedCurrency.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\gasFeeInput\useGasEstimates.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useGasEstimates = useGasEstimates;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactRedux = require("react-redux");

var _gas = require("../../../shared/constants/gas");

var _gas2 = require("../../../shared/modules/gas.utils");

var _common = require("../../helpers/constants/common");

var _selectors = require("../../selectors");

var _conversions = require("../../helpers/utils/conversions.util");

var _transactions = require("../../helpers/utils/transactions.util");

var _useCurrencyDisplay = require("../useCurrencyDisplay");

var _useUserPreferencedCurrency = require("../useUserPreferencedCurrency");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * @typedef {Object} GasEstimatesReturnType
 * @property {string} [estimatedMinimumFiat] - The amount estimated to be paid
 *  based on current network conditions. Expressed in user's preferred currency.
 * @property {string} [estimatedMaximumFiat] - the maximum amount estimated to be paid if current
 *  network transaction volume increases. Expressed in user's preferred currency.
 * @property {string} [estimatedMaximumNative] - the maximum amount estimated to be paid if the
 *  current network transaction volume increases. Expressed in the network's native currency.
 * @property {string} [estimatedMinimumNative] - the maximum amount estimated to be paid if the
 *  current network transaction volume increases. Expressed in the network's native currency.
 * @property {HexWeiString} [estimatedBaseFee] - estimatedBaseFee from fee-market gasFeeEstimates
 *  in HexWei.
 * @property {HexWeiString} [minimumCostInHexWei] - the minimum amount this transaction will cost.
 */

/**
 * @param options
 * @param options.editGasMode
 * @param options.gasEstimateType
 * @param options.gasFeeEstimates
 * @param options.gasLimit
 * @param options.gasPrice
 * @param options.maxFeePerGas
 * @param options.maxPriorityFeePerGas
 * @param options.minimumGasLimit
 * @param options.transaction
 * @returns {GasEstimatesReturnType} The gas estimates.
 */
function useGasEstimates({
  editGasMode,
  gasEstimateType,
  gasFeeEstimates,
  gasLimit,
  gasPrice,
  maxFeePerGas,
  maxPriorityFeePerGas,
  minimumGasLimit,
  transaction
}) {
  var _gasFeeEstimates$esti2;

  const supportsEIP1559 = (0, _reactRedux.useSelector)(_selectors.checkNetworkAndAccountSupports1559) && !(0, _transactions.isLegacyTransaction)(transaction === null || transaction === void 0 ? void 0 : transaction.txParams);
  const {
    currency: fiatCurrency,
    numberOfDecimals: fiatNumberOfDecimals
  } = (0, _useUserPreferencedCurrency.useUserPreferencedCurrency)(_common.SECONDARY);
  const showFiat = (0, _reactRedux.useSelector)(_selectors.getShouldShowFiat);
  const {
    currency: primaryCurrency,
    numberOfDecimals: primaryNumberOfDecimals
  } = (0, _useUserPreferencedCurrency.useUserPreferencedCurrency)(_common.PRIMARY); // We have two helper methods that take an object that can have either
  // gasPrice OR the EIP-1559 fields on it, plus gasLimit. This object is
  // conditionally set to the appropriate fields to compute the minimum
  // and maximum cost of a transaction given the current estimates or selected
  // gas fees.

  let gasSettings = {
    gasLimit: (0, _conversions.decimalToHex)(gasLimit)
  };

  if (supportsEIP1559) {
    var _gasFeeEstimates$esti;

    gasSettings = _objectSpread(_objectSpread({}, gasSettings), {}, {
      maxFeePerGas: (0, _conversions.decGWEIToHexWEI)(maxFeePerGas || gasPrice || '0'),
      maxPriorityFeePerGas: (0, _conversions.decGWEIToHexWEI)(maxPriorityFeePerGas || maxFeePerGas || gasPrice || '0'),
      baseFeePerGas: (0, _conversions.decGWEIToHexWEI)((_gasFeeEstimates$esti = gasFeeEstimates.estimatedBaseFee) !== null && _gasFeeEstimates$esti !== void 0 ? _gasFeeEstimates$esti : '0')
    });
  } else if (gasEstimateType === _gas.GAS_ESTIMATE_TYPES.NONE) {
    gasSettings = _objectSpread(_objectSpread({}, gasSettings), {}, {
      gasPrice: '0x0'
    });
  } else {
    gasSettings = _objectSpread(_objectSpread({}, gasSettings), {}, {
      gasPrice: (0, _conversions.decGWEIToHexWEI)(gasPrice)
    });
  } // The maximum amount this transaction will cost


  const maximumCostInHexWei = (0, _gas2.getMaximumGasTotalInHexWei)(gasSettings);

  if (editGasMode === _gas.EDIT_GAS_MODES.SWAPS) {
    gasSettings = _objectSpread(_objectSpread({}, gasSettings), {}, {
      gasLimit: minimumGasLimit
    });
  } // The minimum amount this transaction will cost


  const minimumCostInHexWei = (0, _gas2.getMinimumGasTotalInHexWei)(gasSettings); // The estimated total amount of native currency that will be expended
  // given the selected gas fees.

  const [estimatedMaximumNative] = (0, _useCurrencyDisplay.useCurrencyDisplay)(maximumCostInHexWei, {
    numberOfDecimals: primaryNumberOfDecimals,
    currency: primaryCurrency
  });
  const [, {
    value: estimatedMaximumFiat
  }] = (0, _useCurrencyDisplay.useCurrencyDisplay)(maximumCostInHexWei, {
    numberOfDecimals: fiatNumberOfDecimals,
    currency: fiatCurrency
  });
  const [estimatedMinimumNative] = (0, _useCurrencyDisplay.useCurrencyDisplay)(minimumCostInHexWei, {
    numberOfDecimals: primaryNumberOfDecimals,
    currency: primaryCurrency
  }); // We also need to display our closest estimate of the low end of estimation
  // in fiat.

  const [, {
    value: estimatedMinimumFiat
  }] = (0, _useCurrencyDisplay.useCurrencyDisplay)(minimumCostInHexWei, {
    numberOfDecimals: fiatNumberOfDecimals,
    currency: fiatCurrency
  });
  return {
    estimatedMaximumFiat: showFiat ? estimatedMaximumFiat : '',
    estimatedMinimumFiat: showFiat ? estimatedMinimumFiat : '',
    estimatedMaximumNative,
    estimatedMinimumNative,
    estimatedBaseFee: supportsEIP1559 ? (0, _conversions.decGWEIToHexWEI)((_gasFeeEstimates$esti2 = gasFeeEstimates.estimatedBaseFee) !== null && _gasFeeEstimates$esti2 !== void 0 ? _gasFeeEstimates$esti2 : '0') : undefined,
    maximumCostInHexWei,
    minimumCostInHexWei
  };
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useGasEstimates.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useMaxFeePerGasInput.js", {"../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../shared/modules/gas.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\gas.utils.js","../../helpers/constants/common":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\common.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../useCurrencyDisplay":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useCurrencyDisplay.js","../useUserPreferencedCurrency":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useUserPreferencedCurrency.js","./utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\utils.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\gasFeeInput\useMaxFeePerGasInput.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMaxFeePerGasInput = useMaxFeePerGasInput;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _reactRedux = require("react-redux");

var _gas = require("../../../shared/constants/gas");

var _common = require("../../helpers/constants/common");

var _gas2 = require("../../../shared/modules/gas.utils");

var _conversions = require("../../helpers/utils/conversions.util");

var _selectors = require("../../selectors");

var _transactions = require("../../helpers/utils/transactions.util");

var _useCurrencyDisplay = require("../useCurrencyDisplay");

var _useUserPreferencedCurrency = require("../useUserPreferencedCurrency");

var _utils = require("./utils");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const getMaxFeePerGasFromTransaction = transaction => {
  const {
    maxFeePerGas,
    gasPrice
  } = (transaction === null || transaction === void 0 ? void 0 : transaction.txParams) || {};
  return Number((0, _conversions.hexWEIToDecGWEI)(maxFeePerGas || gasPrice));
};
/**
 * @typedef {Object} MaxFeePerGasInputReturnType
 * @property {(DecGweiString) => void} setMaxFeePerGas - state setter method to
 *  update the maxFeePerGas.
 * @property {string} [maxFeePerGasFiat] - the maxFeePerGas converted to the
 *  user's preferred currency.
 */

/**
 * @param options
 * @param options.supportsEIP1559V2
 * @param options.estimateToUse
 * @param options.gasEstimateType
 * @param options.gasFeeEstimates
 * @param options.gasLimit
 * @param options.gasPrice
 * @param options.transaction
 * @returns {MaxFeePerGasInputReturnType}
 */


function useMaxFeePerGasInput({
  estimateToUse,
  gasEstimateType,
  gasFeeEstimates,
  gasLimit,
  gasPrice,
  supportsEIP1559V2,
  transaction
}) {
  const supportsEIP1559 = (0, _reactRedux.useSelector)(_selectors.checkNetworkAndAccountSupports1559) && !(0, _transactions.isLegacyTransaction)(transaction === null || transaction === void 0 ? void 0 : transaction.txParams);
  const {
    currency: fiatCurrency,
    numberOfDecimals: fiatNumberOfDecimals
  } = (0, _useUserPreferencedCurrency.useUserPreferencedCurrency)(_common.SECONDARY);
  const showFiat = (0, _reactRedux.useSelector)(_selectors.getShouldShowFiat);
  const initialMaxFeePerGas = supportsEIP1559 ? getMaxFeePerGasFromTransaction(transaction) : 0; // This hook keeps track of a few pieces of transitional state. It is
  // transitional because it is only used to modify a transaction in the
  // metamask (background) state tree.

  const [maxFeePerGas, setMaxFeePerGas] = (0, _react.useState)(() => {
    if (initialMaxFeePerGas && (0, _utils.feeParamsAreCustom)(transaction)) {
      return initialMaxFeePerGas;
    }

    return null;
  });
  (0, _react.useEffect)(() => {
    if (supportsEIP1559V2 && initialMaxFeePerGas) {
      setMaxFeePerGas(initialMaxFeePerGas);
    }
  }, [initialMaxFeePerGas, setMaxFeePerGas, supportsEIP1559V2]);
  let gasSettings = {
    gasLimit: (0, _conversions.decimalToHex)(gasLimit)
  };

  if (supportsEIP1559) {
    gasSettings = _objectSpread(_objectSpread({}, gasSettings), {}, {
      maxFeePerGas: (0, _conversions.decGWEIToHexWEI)(maxFeePerGas || gasPrice || '0')
    });
  } else if (gasEstimateType === _gas.GAS_ESTIMATE_TYPES.NONE) {
    gasSettings = _objectSpread(_objectSpread({}, gasSettings), {}, {
      gasPrice: '0x0'
    });
  } else {
    gasSettings = _objectSpread(_objectSpread({}, gasSettings), {}, {
      gasPrice: (0, _conversions.decGWEIToHexWEI)(gasPrice)
    });
  }

  const maximumCostInHexWei = (0, _gas2.getMaximumGasTotalInHexWei)(gasSettings); // We need to display thee estimated fiat currency impact of the maxFeePerGas
  // field to the user. This hook calculates that amount. This also works for
  // the gasPrice amount because in legacy transactions cost is always gasPrice
  // * gasLimit.

  const [, {
    value: maxFeePerGasFiat
  }] = (0, _useCurrencyDisplay.useCurrencyDisplay)(maximumCostInHexWei, {
    numberOfDecimals: fiatNumberOfDecimals,
    currency: fiatCurrency
  }); // We specify whether to use the estimate value by checking if the state
  // value has been set. The state value is only set by user input and is wiped
  // when the user selects an estimate. Default here is '0' to avoid bignumber
  // errors in later calculations for nullish values.

  const maxFeePerGasToUse = maxFeePerGas !== null && maxFeePerGas !== void 0 ? maxFeePerGas : (0, _utils.getGasFeeEstimate)('suggestedMaxFeePerGas', gasFeeEstimates, gasEstimateType, estimateToUse, initialMaxFeePerGas || 0);
  return {
    maxFeePerGas: maxFeePerGasToUse,
    maxFeePerGasFiat: showFiat ? maxFeePerGasFiat : '',
    setMaxFeePerGas
  };
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useMaxFeePerGasInput.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useTransactionFunctions.js", {"../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../helpers/utils/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\gas.js","../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\gasFeeInput\useTransactionFunctions.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTransactionFunctions = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _reactRedux = require("react-redux");

var _gas = require("../../../shared/constants/gas");

var _conversions = require("../../helpers/utils/conversions.util");

var _gas2 = require("../../helpers/utils/gas");

var _actions = require("../../store/actions");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const useTransactionFunctions = ({
  defaultEstimateToUse,
  editGasMode,
  estimatedBaseFee,
  gasFeeEstimates,
  gasLimit: gasLimitValue,
  maxPriorityFeePerGas: maxPriorityFeePerGasValue,
  transaction
}) => {
  const dispatch = (0, _reactRedux.useDispatch)();
  const getTxMeta = (0, _react.useCallback)(() => {
    if (editGasMode !== _gas.EDIT_GAS_MODES.CANCEL && editGasMode !== _gas.EDIT_GAS_MODES.SPEED_UP || transaction.previousGas) {
      return {};
    }

    const {
      maxFeePerGas,
      maxPriorityFeePerGas,
      gasLimit
    } = transaction === null || transaction === void 0 ? void 0 : transaction.txParams;
    return {
      previousGas: {
        maxFeePerGas,
        maxPriorityFeePerGas,
        gasLimit
      }
    };
  }, [editGasMode, transaction === null || transaction === void 0 ? void 0 : transaction.previousGas, transaction === null || transaction === void 0 ? void 0 : transaction.txParams]);
  const updateTransaction = (0, _react.useCallback)(({
    estimateUsed,
    gasLimit,
    maxFeePerGas,
    maxPriorityFeePerGas,
    estimateSuggested
  }) => {
    const newGasSettings = {
      gas: (0, _conversions.decimalToHex)(gasLimit || gasLimitValue),
      gasLimit: (0, _conversions.decimalToHex)(gasLimit || gasLimitValue),
      estimateSuggested: estimateSuggested || defaultEstimateToUse,
      estimateUsed
    };

    if (maxFeePerGas) {
      newGasSettings.maxFeePerGas = maxFeePerGas;
    }

    if (maxPriorityFeePerGas) {
      newGasSettings.maxPriorityFeePerGas = maxPriorityFeePerGas || (0, _conversions.decGWEIToHexWEI)(maxPriorityFeePerGasValue);
    }

    const txMeta = getTxMeta();

    const updatedTxMeta = _objectSpread(_objectSpread({}, transaction), {}, {
      userFeeLevel: estimateUsed || _gas.PRIORITY_LEVELS.CUSTOM,
      txParams: _objectSpread(_objectSpread({}, transaction.txParams), newGasSettings)
    }, txMeta);

    if (editGasMode === _gas.EDIT_GAS_MODES.SWAPS) {
      dispatch((0, _actions.updateSwapsUserFeeLevel)(estimateUsed || _gas.PRIORITY_LEVELS.CUSTOM));
      dispatch((0, _actions.updateCustomSwapsEIP1559GasParams)(newGasSettings));
    } else {
      dispatch((0, _actions.updateTransaction)(updatedTxMeta));
    }
  }, [defaultEstimateToUse, dispatch, editGasMode, gasLimitValue, getTxMeta, maxPriorityFeePerGasValue, transaction]);
  const cancelTransaction = (0, _react.useCallback)(() => {
    dispatch((0, _actions.createCancelTransaction)(transaction.id, transaction.txParams, {
      estimatedBaseFee
    }));
  }, [dispatch, estimatedBaseFee, transaction]);
  const speedUpTransaction = (0, _react.useCallback)(() => {
    dispatch((0, _actions.createSpeedUpTransaction)(transaction.id, transaction.txParams, {
      estimatedBaseFee
    }));
  }, [dispatch, estimatedBaseFee, transaction]);
  const updateTransactionToTenPercentIncreasedGasFee = (0, _react.useCallback)((initTransaction = false) => {
    const {
      gas: gasLimit,
      maxFeePerGas,
      maxPriorityFeePerGas
    } = transaction.previousGas || transaction.txParams;
    updateTransaction({
      estimateSuggested: initTransaction ? defaultEstimateToUse : _gas.PRIORITY_LEVELS.TEN_PERCENT_INCREASED,
      estimateUsed: _gas.PRIORITY_LEVELS.TEN_PERCENT_INCREASED,
      gasLimit,
      maxFeePerGas: (0, _gas2.addTenPercentAndRound)(maxFeePerGas),
      maxPriorityFeePerGas: (0, _gas2.addTenPercentAndRound)(maxPriorityFeePerGas)
    });
  }, [defaultEstimateToUse, transaction, updateTransaction]);
  const updateTransactionUsingEstimate = (0, _react.useCallback)(gasFeeEstimateToUse => {
    if (!gasFeeEstimates[gasFeeEstimateToUse]) {
      return;
    }

    const {
      suggestedMaxFeePerGas,
      suggestedMaxPriorityFeePerGas
    } = gasFeeEstimates[gasFeeEstimateToUse];
    updateTransaction({
      estimateUsed: gasFeeEstimateToUse,
      maxFeePerGas: (0, _conversions.decGWEIToHexWEI)(suggestedMaxFeePerGas),
      maxPriorityFeePerGas: (0, _conversions.decGWEIToHexWEI)(suggestedMaxPriorityFeePerGas)
    });
  }, [gasFeeEstimates, updateTransaction]);
  const updateTransactionUsingDAPPSuggestedValues = (0, _react.useCallback)(() => {
    const {
      maxFeePerGas,
      maxPriorityFeePerGas
    } = transaction === null || transaction === void 0 ? void 0 : transaction.dappSuggestedGasFees;
    updateTransaction({
      estimateUsed: _gas.PRIORITY_LEVELS.DAPP_SUGGESTED,
      maxFeePerGas,
      maxPriorityFeePerGas
    });
  }, [transaction, updateTransaction]);
  return {
    cancelTransaction,
    speedUpTransaction,
    updateTransaction,
    updateTransactionToTenPercentIncreasedGasFee,
    updateTransactionUsingDAPPSuggestedValues,
    updateTransactionUsingEstimate
  };
};

exports.useTransactionFunctions = useTransactionFunctions;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\gasFeeInput\\useTransactionFunctions.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\countdown-timer\\countdown-timer.js", {"../../../../shared/constants/time":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\time.js","../../../components/ui/info-tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\info-tooltip\\index.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../ducks/swaps/swaps":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\swaps\\swaps.js","./timer-icon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\countdown-timer\\timer-icon.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","luxon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\luxon\\build\\cjs-browser\\luxon.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\countdown-timer\countdown-timer.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CountdownTimer;

var _react = _interopRequireWildcard(require("react"));

var _reactRedux = require("react-redux");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _luxon = require("luxon");

var _i18n = require("../../../contexts/i18n");

var _infoTooltip = _interopRequireDefault(require("../../../components/ui/info-tooltip"));

var _swaps = require("../../../ducks/swaps/swaps");

var _time = require("../../../../shared/constants/time");

var _timerIcon = _interopRequireDefault(require("./timer-icon"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Return the mm:ss start time of the countdown timer.
// If time has elapsed between `timeStarted` the time current time,
// then that elapsed time will be subtracted from the timer before
// rendering
function getNewTimer(currentTime, timeStarted, timeBaseStart) {
  const timeAlreadyElapsed = currentTime - timeStarted;
  return timeBaseStart - timeAlreadyElapsed;
}

function decreaseTimerByOne(timer) {
  return Math.max(timer - _time.SECOND, 0);
}

function timeBelowWarningTime(timer, warningTime) {
  const [warningTimeMinutes, warningTimeSeconds] = warningTime.split(':');
  return timer <= (Number(warningTimeMinutes) * 60 + Number(warningTimeSeconds)) * _time.SECOND;
}

function CountdownTimer({
  timeStarted,
  timeOnly,
  timerBase,
  warningTime,
  labelKey,
  infoTooltipLabelKey
}) {
  const t = (0, _react.useContext)(_i18n.I18nContext);
  const intervalRef = (0, _react.useRef)();
  const initialTimeStartedRef = (0, _react.useRef)();
  const swapsQuoteRefreshTime = (0, _reactRedux.useSelector)(_swaps.getSwapsQuoteRefreshTime);
  const timerStart = Number(timerBase) || swapsQuoteRefreshTime;
  const [currentTime, setCurrentTime] = (0, _react.useState)(() => Date.now());
  const [timer, setTimer] = (0, _react.useState)(() => getNewTimer(currentTime, timeStarted, timerStart));
  (0, _react.useEffect)(() => {
    if (intervalRef.current === undefined) {
      intervalRef.current = setInterval(() => {
        setTimer(decreaseTimerByOne);
      }, _time.SECOND);
    }

    return function cleanup() {
      clearInterval(intervalRef.current);
    };
  }, []); // Reset the timer that timer has hit '0:00' and the timeStarted prop has changed

  (0, _react.useEffect)(() => {
    if (!initialTimeStartedRef.current) {
      initialTimeStartedRef.current = timeStarted || Date.now();
    }

    if (timer === 0 && timeStarted !== initialTimeStartedRef.current) {
      initialTimeStartedRef.current = timeStarted;
      const newCurrentTime = Date.now();
      setCurrentTime(newCurrentTime);
      setTimer(getNewTimer(newCurrentTime, timeStarted, timerStart));
      clearInterval(intervalRef.current);
      intervalRef.current = setInterval(() => {
        setTimer(decreaseTimerByOne);
      }, _time.SECOND);
    }
  }, [timeStarted, timer, timerStart]);

  const formattedTimer = _luxon.Duration.fromMillis(timer).toFormat('m:ss');

  let time;

  if (timeOnly) {
    time = /*#__PURE__*/_react.default.createElement("div", {
      className: "countdown-timer__time"
    }, formattedTimer);
  } else if (labelKey) {
    time = t(labelKey, [/*#__PURE__*/_react.default.createElement("div", {
      key: "countdown-time-1",
      className: "countdown-timer__time"
    }, formattedTimer)]);
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "countdown-timer"
  }, /*#__PURE__*/_react.default.createElement("div", {
    "data-testid": "countdown-timer__timer-container",
    className: (0, _classnames.default)('countdown-timer__timer-container', {
      'countdown-timer__timer-container--warning': warningTime && timeBelowWarningTime(timer, warningTime)
    })
  }, /*#__PURE__*/_react.default.createElement(_timerIcon.default, null), time), !timeOnly && infoTooltipLabelKey ? /*#__PURE__*/_react.default.createElement(_infoTooltip.default, {
    position: "bottom",
    contentText: t(infoTooltipLabelKey)
  }) : null);
}

CountdownTimer.propTypes = {
  timeStarted: _propTypes.default.number,
  timeOnly: _propTypes.default.bool,
  timerBase: _propTypes.default.number,
  warningTime: _propTypes.default.string,
  labelKey: _propTypes.default.string,
  infoTooltipLabelKey: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\countdown-timer\\countdown-timer.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\main-quote-summary\\main-quote-summary.js", {"../../../components/ui/tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tooltip\\index.js","../../../components/ui/url-icon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\url-icon\\index.js","../../../helpers/utils/token-util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\token-util.js","../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../exchange-rate-display":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\exchange-rate-display\\index.js","../swaps.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\swaps.util.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","bignumber.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\bignumber.js\\bignumber.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\main-quote-summary\main-quote-summary.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = MainQuoteSummary;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _bignumber = _interopRequireDefault(require("bignumber.js"));

var _tokenUtil = require("../../../helpers/utils/token-util");

var _util = require("../../../helpers/utils/util");

var _tooltip = _interopRequireDefault(require("../../../components/ui/tooltip"));

var _urlIcon = _interopRequireDefault(require("../../../components/ui/url-icon"));

var _exchangeRateDisplay = _interopRequireDefault(require("../exchange-rate-display"));

var _swaps = require("../swaps.util");

function getFontSizesAndLineHeights(fontSizeScore) {
  if (fontSizeScore <= 9) {
    return [50, 48];
  }

  if (fontSizeScore <= 13) {
    return [40, 32];
  }

  return [26, 15];
}

function MainQuoteSummary({
  sourceValue,
  sourceSymbol,
  sourceDecimals,
  sourceIconUrl,
  destinationValue,
  destinationSymbol,
  destinationDecimals,
  destinationIconUrl
}) {
  const sourceAmount = (0, _util.toPrecisionWithoutTrailingZeros)((0, _tokenUtil.calcTokenAmount)(sourceValue, sourceDecimals).toString(10), 12);
  const destinationAmount = (0, _tokenUtil.calcTokenAmount)(destinationValue, destinationDecimals);
  const amountToDisplay = (0, _swaps.formatSwapsValueForDisplay)(destinationAmount);
  const amountDigitLength = amountToDisplay.match(/\d+/gu).join('').length;
  const [numberFontSize, lineHeight] = getFontSizesAndLineHeights(amountDigitLength);
  let ellipsedAmountToDisplay = amountToDisplay;

  if (amountDigitLength > 20) {
    ellipsedAmountToDisplay = `${amountToDisplay.slice(0, 20)}...`;
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "main-quote-summary"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "main-quote-summary__details"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "main-quote-summary__quote-details-top"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "main-quote-summary__source-row",
    "data-testid": "main-quote-summary__source-row"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "main-quote-summary__source-row-value",
    title: (0, _swaps.formatSwapsValueForDisplay)(sourceAmount)
  }, (0, _swaps.formatSwapsValueForDisplay)(sourceAmount)), /*#__PURE__*/_react.default.createElement(_urlIcon.default, {
    url: sourceIconUrl,
    className: "main-quote-summary__icon",
    name: sourceSymbol,
    fallbackClassName: "main-quote-summary__icon-fallback"
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "main-quote-summary__source-row-symbol",
    title: sourceSymbol
  }, sourceSymbol)), /*#__PURE__*/_react.default.createElement("img", {
    className: "main-quote-summary__down-arrow",
    src: "images/down-arrow-grey.svg"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "main-quote-summary__destination-row"
  }, /*#__PURE__*/_react.default.createElement(_urlIcon.default, {
    url: destinationIconUrl,
    className: "main-quote-summary__icon",
    name: destinationSymbol,
    fallbackClassName: "main-quote-summary__icon-fallback"
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "main-quote-summary__destination-row-symbol"
  }, destinationSymbol)), /*#__PURE__*/_react.default.createElement("div", {
    className: "main-quote-summary__quote-large"
  }, /*#__PURE__*/_react.default.createElement(_tooltip.default, {
    interactive: true,
    position: "bottom",
    html: amountToDisplay,
    disabled: ellipsedAmountToDisplay === amountToDisplay,
    theme: "white"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "main-quote-summary__quote-large-number",
    style: {
      fontSize: numberFontSize,
      lineHeight: `${lineHeight}px`
    }
  }, `${ellipsedAmountToDisplay}`)))), /*#__PURE__*/_react.default.createElement("div", {
    className: "main-quote-summary__exchange-rate-container",
    "data-testid": "main-quote-summary__exchange-rate-container"
  }, /*#__PURE__*/_react.default.createElement(_exchangeRateDisplay.default, {
    primaryTokenValue: sourceValue,
    primaryTokenDecimals: sourceDecimals,
    primaryTokenSymbol: sourceSymbol,
    secondaryTokenValue: destinationValue,
    secondaryTokenDecimals: destinationDecimals,
    secondaryTokenSymbol: destinationSymbol,
    arrowColor: "#037DD6",
    boldSymbols: false,
    className: "main-quote-summary__exchange-rate-display"
  }))));
}

MainQuoteSummary.propTypes = {
  sourceValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(_bignumber.default)]).isRequired,
  sourceDecimals: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  sourceSymbol: _propTypes.default.string.isRequired,
  destinationValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(_bignumber.default)]).isRequired,
  destinationDecimals: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  destinationSymbol: _propTypes.default.string.isRequired,
  sourceIconUrl: _propTypes.default.string,
  destinationIconUrl: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\main-quote-summary\\main-quote-summary.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useIncrementedGasFees.js", {"../../shared/modules/transaction.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\transaction.utils.js","../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../helpers/utils/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\gas.js","./useGasFeeEstimates":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useGasFeeEstimates.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","bignumber.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\bignumber.js\\bignumber.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\hooks\useIncrementedGasFees.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useIncrementedGasFees = useIncrementedGasFees;

var _bignumber = _interopRequireDefault(require("bignumber.js"));

var _react = require("react");

var _transaction = require("../../shared/modules/transaction.utils");

var _conversions = require("../helpers/utils/conversions.util");

var _gas = require("../helpers/utils/gas");

var _useGasFeeEstimates = require("./useGasFeeEstimates");

/**
 * Helper that returns the higher of two options for a new gas fee:
 * The original fee + 10% or
 * the current medium suggested fee from our gas estimation api
 *
 * @param {string} originalFee - hexWei vale of the original fee (maxFee or maxPriority)
 * @param {string} currentEstimate - decGwei value of the current medium gasFee estimate (maxFee or maxPriorityfee)
 * @returns {string} hexWei value of the higher of the two inputs.
 */
function getHighestIncrementedFee(originalFee, currentEstimate) {
  const buffedOriginalHexWei = (0, _gas.addTenPercent)(originalFee);
  const currentEstimateHexWei = (0, _conversions.decGWEIToHexWEI)(currentEstimate);
  return new _bignumber.default(buffedOriginalHexWei, 16).greaterThan(new _bignumber.default(currentEstimateHexWei, 16)) ? buffedOriginalHexWei : currentEstimateHexWei;
}
/**
 * When initializing cancellations or speed ups we need to set the baseline
 * gas fees to be 10% higher, which is the bare minimum that the network will
 * accept for transactions of the same nonce. Anything lower than this will be
 * discarded by the network to avoid DoS attacks. This hook returns an object
 * that either has gasPrice or maxFeePerGas/maxPriorityFeePerGas specified. In
 * addition the gasLimit will also be included.
 *
 * @param {} transaction
 * @returns {__import__(
 *   '../../app/scripts/controllers/transactions'
 * ).CustomGasSettings} Gas settings for cancellations/speed ups
 */


function useIncrementedGasFees(transaction) {
  const {
    gasFeeEstimates = {}
  } = (0, _useGasFeeEstimates.useGasFeeEstimates)(); // We memoize this value so that it can be relied upon in other hooks.

  const customGasSettings = (0, _react.useMemo)(() => {
    var _transaction$txParams, _transaction$txParams2, _gasFeeEstimates$medi, _gasFeeEstimates$medi2, _gasFeeEstimates$medi3, _gasFeeEstimates$medi4;

    // This hook is called indiscriminantly on all transactions appearing in
    // the activity list. This includes transitional items such as signature
    // requests. These types of "transactions" are not really transactions and
    // do not have txParams. This is why we use optional chaining on the
    // txParams object in this hook.
    const temporaryGasSettings = {
      gasLimit: (_transaction$txParams = transaction.txParams) === null || _transaction$txParams === void 0 ? void 0 : _transaction$txParams.gas,
      gas: (_transaction$txParams2 = transaction.txParams) === null || _transaction$txParams2 === void 0 ? void 0 : _transaction$txParams2.gas
    };
    const suggestedMaxFeePerGas = (_gasFeeEstimates$medi = gasFeeEstimates === null || gasFeeEstimates === void 0 ? void 0 : (_gasFeeEstimates$medi2 = gasFeeEstimates.medium) === null || _gasFeeEstimates$medi2 === void 0 ? void 0 : _gasFeeEstimates$medi2.suggestedMaxFeePerGas) !== null && _gasFeeEstimates$medi !== void 0 ? _gasFeeEstimates$medi : '0';
    const suggestedMaxPriorityFeePerGas = (_gasFeeEstimates$medi3 = gasFeeEstimates === null || gasFeeEstimates === void 0 ? void 0 : (_gasFeeEstimates$medi4 = gasFeeEstimates.medium) === null || _gasFeeEstimates$medi4 === void 0 ? void 0 : _gasFeeEstimates$medi4.suggestedMaxPriorityFeePerGas) !== null && _gasFeeEstimates$medi3 !== void 0 ? _gasFeeEstimates$medi3 : '0';

    if ((0, _transaction.isEIP1559Transaction)(transaction)) {
      var _transaction$txParams3, _transaction$txParams4;

      const transactionMaxFeePerGas = (_transaction$txParams3 = transaction.txParams) === null || _transaction$txParams3 === void 0 ? void 0 : _transaction$txParams3.maxFeePerGas;
      const transactionMaxPriorityFeePerGas = (_transaction$txParams4 = transaction.txParams) === null || _transaction$txParams4 === void 0 ? void 0 : _transaction$txParams4.maxPriorityFeePerGas;
      temporaryGasSettings.maxFeePerGas = transactionMaxFeePerGas === undefined || transactionMaxFeePerGas.startsWith('-') ? '0x0' : getHighestIncrementedFee(transactionMaxFeePerGas, suggestedMaxFeePerGas);
      temporaryGasSettings.maxPriorityFeePerGas = transactionMaxPriorityFeePerGas === undefined || transactionMaxPriorityFeePerGas.startsWith('-') ? '0x0' : getHighestIncrementedFee(transactionMaxPriorityFeePerGas, suggestedMaxPriorityFeePerGas);
    } else {
      var _transaction$txParams5;

      const transactionGasPrice = (_transaction$txParams5 = transaction.txParams) === null || _transaction$txParams5 === void 0 ? void 0 : _transaction$txParams5.gasPrice;
      temporaryGasSettings.gasPrice = transactionGasPrice === undefined || transactionGasPrice.startsWith('-') ? '0x0' : getHighestIncrementedFee(transactionGasPrice, suggestedMaxFeePerGas);
    }

    return temporaryGasSettings;
  }, [transaction, gasFeeEstimates]);
  return customGasSettings;
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useIncrementedGasFees.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\loading-heartbeat\\index.js", {"../../../ducks/app/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\app\\app.js","../../../helpers/utils/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\gas.js","../../../hooks/useShouldAnimateGasEstimations":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useShouldAnimateGasEstimations.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","_process":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\process\\browser.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\loading-heartbeat\index.js
      return function (require, module, exports) {
(function (process){(function (){
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LoadingHeartBeat;

var _reactRedux = require("react-redux");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _gas = require("../../../helpers/utils/gas");

var _app = require("../../../ducks/app/app");

var _useShouldAnimateGasEstimations = require("../../../hooks/useShouldAnimateGasEstimations");

const BASE_CLASS = 'loading-heartbeat';
const LOADING_CLASS = `${BASE_CLASS}--active`;

function LoadingHeartBeat({
  estimateUsed,
  backgroundColor = '#fff'
}) {
  (0, _useShouldAnimateGasEstimations.useShouldAnimateGasEstimations)();
  const active = (0, _reactRedux.useSelector)(_app.getGasLoadingAnimationIsShowing);

  if (process.env.IN_TEST || estimateUsed && !(0, _gas.isMetamaskSuggestedGasEstimate)(estimateUsed)) {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('loading-heartbeat', {
      [LOADING_CLASS]: active
    }),
    onClick: e => {
      e.preventDefault();
      e.stopPropagation();
    },
    style: {
      backgroundColor
    }
  });
}

LoadingHeartBeat.propTypes = {
  backgroundColor: _propTypes.default.string,
  estimateUsed: _propTypes.default.string
};

}).call(this)}).call(this,require('_process'))

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\loading-heartbeat\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-display-education\\index.js", {"./edit-gas-display-education.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-display-education\\edit-gas-display-education.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\edit-gas-display-education\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _editGasDisplayEducation.default;
  }
});

var _editGasDisplayEducation = _interopRequireDefault(require("./edit-gas-display-education.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-display-education\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-display\\index.js", {"./edit-gas-display.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-display\\edit-gas-display.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\edit-gas-display\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _editGasDisplay.default;
  }
});

var _editGasDisplay = _interopRequireDefault(require("./edit-gas-display.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-display\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\fee-card\\fee-card.js", {"../../../../shared/constants/network":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\network.js","../../../components/app/gas-details-item/gas-details-item-title":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\gas-details-item\\gas-details-item-title\\index.js","../../../components/app/transaction-detail-item/transaction-detail-item.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-detail-item\\transaction-detail-item.component.js","../../../components/app/transaction-detail/transaction-detail.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-detail\\transaction-detail.component.js","../../../components/ui/info-tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\info-tooltip\\index.js","../../../components/ui/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\index.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../../../hooks/useMetricEvent":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useMetricEvent.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\fee-card\fee-card.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = FeeCard;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _i18n = require("../../../contexts/i18n");

var _infoTooltip = _interopRequireDefault(require("../../../components/ui/info-tooltip"));

var _useMetricEvent = require("../../../hooks/useMetricEvent");

var _network = require("../../../../shared/constants/network");

var _transactionDetail = _interopRequireDefault(require("../../../components/app/transaction-detail/transaction-detail.component"));

var _transactionDetailItem = _interopRequireDefault(require("../../../components/app/transaction-detail-item/transaction-detail-item.component"));

var _typography = _interopRequireDefault(require("../../../components/ui/typography"));

var _designSystem = require("../../../helpers/constants/design-system");

var _gasDetailsItemTitle = _interopRequireDefault(require("../../../components/app/gas-details-item/gas-details-item-title"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const GAS_FEES_LEARN_MORE_URL = 'https://community.metamask.io/t/what-is-gas-why-do-transactions-take-so-long/3172';

function FeeCard({
  primaryFee,
  secondaryFee,
  hideTokenApprovalRow,
  onFeeCardMaxRowClick,
  tokenApprovalSourceTokenSymbol,
  onTokenApprovalClick,
  metaMaskFee,
  numberOfQuotes,
  onQuotesClick,
  chainId,
  smartTransactionsOptInStatus,
  smartTransactionsEnabled,
  isBestQuote,
  supportsEIP1559V2 = false
}) {
  const t = (0, _react.useContext)(_i18n.I18nContext);

  const getTranslatedNetworkName = () => {
    switch (chainId) {
      case _network.MAINNET_CHAIN_ID:
        return t('networkNameEthereum');

      case _network.BSC_CHAIN_ID:
        return t('networkNameBSC');

      case _network.POLYGON_CHAIN_ID:
        return t('networkNamePolygon');

      case _network.LOCALHOST_CHAIN_ID:
        return t('networkNameTestnet');

      case _network.RINKEBY_CHAIN_ID:
        return t('networkNameRinkeby');

      case _network.AVALANCHE_CHAIN_ID:
        return t('networkNameAvalanche');

      default:
        throw new Error('This network is not supported for token swaps');
    }
  };

  const gasFeesLearnMoreLinkClickedEvent = (0, _useMetricEvent.useNewMetricEvent)({
    category: 'Swaps',
    event: 'Clicked "Gas Fees: Learn More" Link'
  });

  const tokenApprovalTextComponent = /*#__PURE__*/_react.default.createElement("span", {
    key: "fee-card-approve-symbol",
    className: "fee-card__bold"
  }, t('enableToken', [tokenApprovalSourceTokenSymbol]));

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "fee-card"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "fee-card__main"
  }, /*#__PURE__*/_react.default.createElement(_transactionDetail.default, {
    disableEditGasFeeButton: smartTransactionsEnabled && smartTransactionsOptInStatus,
    rows: [/*#__PURE__*/_react.default.createElement(_transactionDetailItem.default, {
      key: "gas-item",
      detailTitle: supportsEIP1559V2 && (!smartTransactionsEnabled || !smartTransactionsOptInStatus) ? /*#__PURE__*/_react.default.createElement(_gasDetailsItemTitle.default, null) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, t('transactionDetailGasHeading'), /*#__PURE__*/_react.default.createElement(_infoTooltip.default, {
        position: "top",
        contentText: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("p", {
          className: "fee-card__info-tooltip-paragraph"
        }, t('swapGasFeesSummary', [getTranslatedNetworkName()])), /*#__PURE__*/_react.default.createElement("p", {
          className: "fee-card__info-tooltip-paragraph"
        }, t('swapGasFeesDetails')), /*#__PURE__*/_react.default.createElement("p", {
          className: "fee-card__info-tooltip-paragraph"
        }, /*#__PURE__*/_react.default.createElement("a", {
          className: "fee-card__link",
          onClick: () => {
            gasFeesLearnMoreLinkClickedEvent();
            global.platform.openTab({
              url: GAS_FEES_LEARN_MORE_URL
            });
          },
          target: "_blank",
          rel: "noopener noreferrer"
        }, t('swapGasFeesLearnMore')))),
        containerClassName: "fee-card__info-tooltip-content-container",
        wrapperClassName: "fee-card__row-label fee-card__info-tooltip-container",
        wide: true
      })),
      detailText: primaryFee.fee,
      detailTotal: secondaryFee.fee,
      subText: (secondaryFee === null || secondaryFee === void 0 ? void 0 : secondaryFee.maxFee) !== undefined && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_typography.default, {
        tag: "span",
        fontWeight: _designSystem.FONT_WEIGHT.BOLD,
        color: _designSystem.COLORS.UI4,
        variant: _designSystem.TYPOGRAPHY.H7
      }, t('maxFee')), `: ${secondaryFee.maxFee}`, !supportsEIP1559V2 && (!smartTransactionsEnabled || !smartTransactionsOptInStatus) && /*#__PURE__*/_react.default.createElement("span", {
        className: "fee-card__edit-link",
        onClick: () => onFeeCardMaxRowClick()
      }, t('edit')))
    })]
  }), !hideTokenApprovalRow && /*#__PURE__*/_react.default.createElement("div", {
    className: "fee-card__row-header"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "fee-card__row-label"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "fee-card__row-header-text"
  }, t('swapEnableTokenForSwapping', [tokenApprovalTextComponent]), /*#__PURE__*/_react.default.createElement(_infoTooltip.default, {
    position: "top",
    contentText: t('swapEnableDescription', [tokenApprovalSourceTokenSymbol]),
    containerClassName: "fee-card__info-tooltip-container"
  }))), /*#__PURE__*/_react.default.createElement("div", {
    className: "fee-card__link",
    onClick: () => onTokenApprovalClick()
  }, t('swapEditLimit'))), /*#__PURE__*/_react.default.createElement("div", {
    className: "fee-card__row-header"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "fee-card__row-label"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "fee-card__row-header-text"
  }, numberOfQuotes > 1 && /*#__PURE__*/_react.default.createElement("span", {
    onClick: onQuotesClick,
    className: "fee-card__quote-link-text"
  }, isBestQuote ? t('swapBestOfNQuotes', [numberOfQuotes]) : t('swapNQuotesWithDot', [numberOfQuotes])), t('swapIncludesMMFee', [metaMaskFee]), /*#__PURE__*/_react.default.createElement(_infoTooltip.default, {
    position: "top",
    contentText: t('swapMetaMaskFeeDescription', [metaMaskFee]),
    wrapperClassName: "fee-card__info-tooltip-container"
  }))))));
}

FeeCard.propTypes = {
  primaryFee: _propTypes.default.shape({
    fee: _propTypes.default.string.isRequired,
    maxFee: _propTypes.default.string.isRequired
  }).isRequired,
  secondaryFee: _propTypes.default.shape({
    fee: _propTypes.default.string.isRequired,
    maxFee: _propTypes.default.string.isRequired
  }),
  onFeeCardMaxRowClick: _propTypes.default.func.isRequired,
  hideTokenApprovalRow: _propTypes.default.bool.isRequired,
  tokenApprovalSourceTokenSymbol: _propTypes.default.string,
  onTokenApprovalClick: _propTypes.default.func,
  metaMaskFee: _propTypes.default.string.isRequired,
  onQuotesClick: _propTypes.default.func.isRequired,
  numberOfQuotes: _propTypes.default.number.isRequired,
  chainId: _propTypes.default.string.isRequired,
  smartTransactionsOptInStatus: _propTypes.default.bool,
  smartTransactionsEnabled: _propTypes.default.bool,
  isBestQuote: _propTypes.default.bool.isRequired,
  supportsEIP1559V2: _propTypes.default.bool
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\fee-card\\fee-card.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\select-quote-popover\\select-quote-popover.js", {"../../../components/ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../../components/ui/popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\popover\\index.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","./quote-details":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\select-quote-popover\\quote-details\\index.js","./select-quote-popover-constants":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\select-quote-popover\\select-quote-popover-constants.js","./sort-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\select-quote-popover\\sort-list\\index.js","@babel/runtime/helpers/extends":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\extends.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\swaps\select-quote-popover\select-quote-popover.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _i18n = require("../../../contexts/i18n");

var _popover = _interopRequireDefault(require("../../../components/ui/popover"));

var _button = _interopRequireDefault(require("../../../components/ui/button"));

var _quoteDetails = _interopRequireDefault(require("./quote-details"));

var _sortList = _interopRequireDefault(require("./sort-list"));

var _selectQuotePopoverConstants = require("./select-quote-popover-constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const SelectQuotePopover = ({
  quoteDataRows = [],
  onClose = null,
  onSubmit = null,
  swapToSymbol,
  initialAggId,
  onQuoteDetailsIsOpened,
  hideEstimatedGasFee
}) => {
  const t = (0, _react.useContext)(_i18n.I18nContext);
  const [sortDirection, setSortDirection] = (0, _react.useState)(1);
  const [sortColumn, setSortColumn] = (0, _react.useState)(null);
  const [selectedAggId, setSelectedAggId] = (0, _react.useState)(initialAggId);
  const [contentView, setContentView] = (0, _react.useState)('sortList');
  const [viewingAgg, setViewingAgg] = (0, _react.useState)(null);
  const onSubmitClick = (0, _react.useCallback)(() => {
    onSubmit(selectedAggId);
    onClose();
  }, [selectedAggId, onClose, onSubmit]);
  const closeQuoteDetails = (0, _react.useCallback)(() => {
    setViewingAgg(null);
    setContentView('sortList');
  }, []);
  const onRowClick = (0, _react.useCallback)(aggId => setSelectedAggId(aggId), [setSelectedAggId]);
  const onCaretClick = (0, _react.useCallback)(aggId => {
    const agg = quoteDataRows.find(quote => quote.aggId === aggId);
    setContentView('quoteDetails');
    onQuoteDetailsIsOpened();
    setViewingAgg(agg);
  }, [quoteDataRows, onQuoteDetailsIsOpened]);
  const CustomBackground = (0, _react.useCallback)(() => /*#__PURE__*/_react.default.createElement("div", {
    className: "select-quote-popover__popover-bg",
    onClick: onClose
  }), [onClose]);

  const footer = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "secondary",
    className: "page-container__footer-button select-quote-popover__button",
    onClick: onClose
  }, t('close')), /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "primary",
    className: "page-container__footer-button select-quote-popover__button",
    onClick: onSubmitClick
  }, t('swapSelect')));

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "select-quote-popover"
  }, /*#__PURE__*/_react.default.createElement(_popover.default, {
    title: contentView === 'quoteDetails' ? t('swapSelectAQuote') : t('swapQuoteDetails'),
    subtitle: contentView === 'sortList' ? t('swapSelectQuotePopoverDescription') : null,
    onClose: onClose,
    CustomBackground: CustomBackground,
    className: "select-quote-popover__popover-wrap",
    footerClassName: "swaps__footer",
    footer: contentView === 'quoteDetails' ? null : footer,
    onBack: contentView === 'quoteDetails' ? closeQuoteDetails : null
  }, contentView === 'sortList' && /*#__PURE__*/_react.default.createElement(_sortList.default, {
    quoteDataRows: quoteDataRows,
    selectedAggId: selectedAggId,
    onSelect: onRowClick,
    onCaretClick: onCaretClick,
    swapToSymbol: swapToSymbol,
    sortDirection: sortDirection,
    setSortDirection: setSortDirection,
    sortColumn: sortColumn,
    setSortColumn: setSortColumn,
    hideEstimatedGasFee: hideEstimatedGasFee
  }), contentView === 'quoteDetails' && viewingAgg && /*#__PURE__*/_react.default.createElement(_quoteDetails.default, (0, _extends2.default)({}, viewingAgg, {
    hideEstimatedGasFee: hideEstimatedGasFee
  }))));
};

SelectQuotePopover.propTypes = {
  onClose: _propTypes.default.func,
  onSubmit: _propTypes.default.func,
  swapToSymbol: _propTypes.default.string,
  renderableData: _propTypes.default.array,
  quoteDataRows: _propTypes.default.arrayOf(_selectQuotePopoverConstants.QUOTE_DATA_ROWS_PROPTYPES_SHAPE),
  initialAggId: _propTypes.default.string,
  onQuoteDetailsIsOpened: _propTypes.default.func,
  hideEstimatedGasFee: _propTypes.default.bool.isRequired
};
var _default = SelectQuotePopover;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\swaps\\select-quote-popover\\select-quote-popover.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-fee-popover\\edit-gas-fee-popover.js", {"../../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../contexts/gasFee":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\gasFee.js","../../../contexts/transaction-modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\transaction-modal.js","../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../../../helpers/constants/error-keys":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\error-keys.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../ui/box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","../../ui/error-message":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\error-message\\index.js","../../ui/i18n-value":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\i18n-value\\index.js","../../ui/popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\popover\\index.js","../../ui/typography/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\typography.js","../app-loading-spinner":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\app-loading-spinner\\index.js","./edit-gas-item":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-fee-popover\\edit-gas-item\\index.js","./network-statistics":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-fee-popover\\network-statistics\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\edit-gas-fee-popover\edit-gas-fee-popover.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _gas = require("../../../../shared/constants/gas");

var _useI18nContext = require("../../../hooks/useI18nContext");

var _transactionModal = require("../../../contexts/transaction-modal");

var _box = _interopRequireDefault(require("../../ui/box"));

var _errorMessage = _interopRequireDefault(require("../../ui/error-message"));

var _i18nValue = _interopRequireDefault(require("../../ui/i18n-value"));

var _popover = _interopRequireDefault(require("../../ui/popover"));

var _typography = _interopRequireDefault(require("../../ui/typography/typography"));

var _designSystem = require("../../../helpers/constants/design-system");

var _errorKeys = require("../../../helpers/constants/error-keys");

var _gasFee = require("../../../contexts/gasFee");

var _appLoadingSpinner = _interopRequireDefault(require("../app-loading-spinner"));

var _editGasItem = _interopRequireDefault(require("./edit-gas-item"));

var _networkStatistics = _interopRequireDefault(require("./network-statistics"));

const EditGasFeePopover = () => {
  const {
    balanceError,
    editGasMode
  } = (0, _gasFee.useGasFeeContext)();
  const t = (0, _useI18nContext.useI18nContext)();
  const {
    closeAllModals,
    closeModal,
    currentModal,
    openModalCount
  } = (0, _transactionModal.useTransactionModalContext)();

  if (currentModal !== 'editGasFee') {
    return null;
  }

  let popupTitle = 'editGasFeeModalTitle';

  if (editGasMode === _gas.EDIT_GAS_MODES.CANCEL) {
    popupTitle = 'editCancellationGasFeeModalTitle';
  } else if (editGasMode === _gas.EDIT_GAS_MODES.SPEED_UP) {
    popupTitle = 'editSpeedUpEditGasFeeModalTitle';
  }

  return /*#__PURE__*/_react.default.createElement(_popover.default, {
    title: t(popupTitle) // below logic ensures that back button is visible only if there are other modals open before this.
    ,
    onBack: openModalCount === 1 ? undefined : () => closeModal('editGasFee'),
    onClose: closeAllModals,
    className: "edit-gas-fee-popover"
  }, /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_appLoadingSpinner.default, null), /*#__PURE__*/_react.default.createElement("div", {
    className: "edit-gas-fee-popover__wrapper"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "edit-gas-fee-popover__content"
  }, /*#__PURE__*/_react.default.createElement(_box.default, null, balanceError && /*#__PURE__*/_react.default.createElement(_errorMessage.default, {
    errorKey: _errorKeys.INSUFFICIENT_FUNDS_ERROR_KEY
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "edit-gas-fee-popover__content__header"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "edit-gas-fee-popover__content__header-option"
  }, /*#__PURE__*/_react.default.createElement(_i18nValue.default, {
    messageKey: "gasOption"
  })), /*#__PURE__*/_react.default.createElement("span", {
    className: "edit-gas-fee-popover__content__header-time"
  }, editGasMode !== _gas.EDIT_GAS_MODES.SWAPS && /*#__PURE__*/_react.default.createElement(_i18nValue.default, {
    messageKey: "time"
  })), /*#__PURE__*/_react.default.createElement("span", {
    className: "edit-gas-fee-popover__content__header-max-fee"
  }, /*#__PURE__*/_react.default.createElement(_i18nValue.default, {
    messageKey: "maxFee"
  }))), (editGasMode === _gas.EDIT_GAS_MODES.CANCEL || editGasMode === _gas.EDIT_GAS_MODES.SPEED_UP) && /*#__PURE__*/_react.default.createElement(_editGasItem.default, {
    priorityLevel: _gas.PRIORITY_LEVELS.TEN_PERCENT_INCREASED
  }), editGasMode === _gas.EDIT_GAS_MODES.MODIFY_IN_PLACE && /*#__PURE__*/_react.default.createElement(_editGasItem.default, {
    priorityLevel: _gas.PRIORITY_LEVELS.LOW
  }), /*#__PURE__*/_react.default.createElement(_editGasItem.default, {
    priorityLevel: _gas.PRIORITY_LEVELS.MEDIUM
  }), /*#__PURE__*/_react.default.createElement(_editGasItem.default, {
    priorityLevel: _gas.PRIORITY_LEVELS.HIGH
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "edit-gas-fee-popover__content__separator"
  }), editGasMode === _gas.EDIT_GAS_MODES.MODIFY_IN_PLACE && /*#__PURE__*/_react.default.createElement(_editGasItem.default, {
    priorityLevel: _gas.PRIORITY_LEVELS.DAPP_SUGGESTED
  }), /*#__PURE__*/_react.default.createElement(_editGasItem.default, {
    priorityLevel: _gas.PRIORITY_LEVELS.CUSTOM
  })), /*#__PURE__*/_react.default.createElement(_box.default, null, /*#__PURE__*/_react.default.createElement(_networkStatistics.default, null), /*#__PURE__*/_react.default.createElement(_typography.default, {
    className: "edit-gas-fee-popover__know-more",
    align: "center",
    color: _designSystem.COLORS.UI4,
    tag: _designSystem.TYPOGRAPHY.Paragraph,
    variant: _designSystem.TYPOGRAPHY.H7
  }, /*#__PURE__*/_react.default.createElement(_i18nValue.default, {
    messageKey: "learmMoreAboutGas",
    options: [/*#__PURE__*/_react.default.createElement("a", {
      key: "learnMoreLink",
      target: "_blank",
      rel: "noopener noreferrer",
      href: "https://metamask.zendesk.com/hc/en-us/articles/4404600179227-User-Guide-Gas"
    }, /*#__PURE__*/_react.default.createElement(_i18nValue.default, {
      messageKey: "learnMore"
    }))]
  })))))));
};

var _default = EditGasFeePopover;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-fee-popover\\edit-gas-fee-popover.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\advanced-gas-fee-popover.js", {"../../../contexts/transaction-modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\transaction-modal.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../ui/box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","../../ui/popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\popover\\index.js","./advanced-gas-fee-defaults":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\advanced-gas-fee-defaults\\index.js","./advanced-gas-fee-gas-limit":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\advanced-gas-fee-gas-limit\\index.js","./advanced-gas-fee-inputs":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\advanced-gas-fee-inputs\\index.js","./advanced-gas-fee-save":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\advanced-gas-fee-save\\index.js","./context":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\context\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\advanced-gas-fee-popover\advanced-gas-fee-popover.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _useI18nContext = require("../../../hooks/useI18nContext");

var _transactionModal = require("../../../contexts/transaction-modal");

var _box = _interopRequireDefault(require("../../ui/box"));

var _popover = _interopRequireDefault(require("../../ui/popover"));

var _context = require("./context");

var _advancedGasFeeInputs = _interopRequireDefault(require("./advanced-gas-fee-inputs"));

var _advancedGasFeeGasLimit = _interopRequireDefault(require("./advanced-gas-fee-gas-limit"));

var _advancedGasFeeSave = _interopRequireDefault(require("./advanced-gas-fee-save"));

var _advancedGasFeeDefaults = _interopRequireDefault(require("./advanced-gas-fee-defaults"));

const AdvancedGasFeePopover = () => {
  const t = (0, _useI18nContext.useI18nContext)();
  const {
    closeAllModals,
    currentModal
  } = (0, _transactionModal.useTransactionModalContext)();

  if (currentModal !== 'advancedGasFee') {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(_context.AdvancedGasFeePopoverContextProvider, null, /*#__PURE__*/_react.default.createElement(_popover.default, {
    className: "advanced-gas-fee-popover",
    title: t('advancedGasFeeModalTitle'),
    onClose: closeAllModals,
    footer: /*#__PURE__*/_react.default.createElement(_advancedGasFeeSave.default, null)
  }, /*#__PURE__*/_react.default.createElement(_box.default, {
    margin: 4
  }, /*#__PURE__*/_react.default.createElement(_advancedGasFeeInputs.default, null), /*#__PURE__*/_react.default.createElement(_advancedGasFeeDefaults.default, null), /*#__PURE__*/_react.default.createElement(_advancedGasFeeGasLimit.default, null))));
};

var _default = AdvancedGasFeePopover;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\advanced-gas-fee-popover.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-footer\\send-footer.component.js", {"../../../components/ui/page-container/page-container-footer":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-footer\\index.js","../../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","lodash":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\lodash.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\send\send-footer\send-footer.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodash = require("lodash");

var _pageContainerFooter = _interopRequireDefault(require("../../../components/ui/page-container/page-container-footer"));

var _routes = require("../../../helpers/constants/routes");

var _send = require("../../../ducks/send");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class SendFooter extends _react.Component {
  onCancel() {
    const {
      cancelTx,
      draftTransactionID,
      history,
      mostRecentOverviewPage,
      resetSendState,
      sendStage
    } = this.props;

    if (draftTransactionID) {
      cancelTx({
        id: draftTransactionID
      });
    }

    resetSendState();
    const nextRoute = sendStage === _send.SEND_STAGES.EDIT ? _routes.DEFAULT_ROUTE : mostRecentOverviewPage;
    history.push(nextRoute);
  }

  async onSubmit(event) {
    event.preventDefault();
    const {
      addToAddressBookIfNew,
      sign,
      to,
      toAccounts,
      history,
      gasEstimateType
    } = this.props;
    const {
      metricsEvent
    } = this.context; // TODO: add nickname functionality

    await addToAddressBookIfNew(to, toAccounts);
    const promise = sign();
    Promise.resolve(promise).then(() => {
      metricsEvent({
        eventOpts: {
          category: 'Transactions',
          action: 'Edit Screen',
          name: 'Complete'
        },
        customVariables: {
          gasChanged: gasEstimateType
        }
      });
      history.push(_routes.CONFIRM_TRANSACTION_ROUTE);
    });
  }

  componentDidUpdate(prevProps) {
    const {
      sendErrors
    } = this.props;
    const {
      metricsEvent
    } = this.context;

    if (Object.keys(sendErrors).length > 0 && (0, _lodash.isEqual)(sendErrors, prevProps.sendErrors) === false) {
      const errorField = Object.keys(sendErrors).find(key => sendErrors[key]);
      const errorMessage = sendErrors[errorField];
      metricsEvent({
        eventOpts: {
          category: 'Transactions',
          action: 'Edit Screen',
          name: 'Error'
        },
        customVariables: {
          errorField,
          errorMessage
        }
      });
    }
  }

  render() {
    const {
      t
    } = this.context;
    const {
      sendStage
    } = this.props;
    return /*#__PURE__*/_react.default.createElement(_pageContainerFooter.default, {
      onCancel: () => this.onCancel(),
      onSubmit: e => this.onSubmit(e),
      disabled: this.props.disabled,
      cancelText: sendStage === _send.SEND_STAGES.EDIT ? t('reject') : t('cancel')
    });
  }

}

exports.default = SendFooter;
(0, _defineProperty2.default)(SendFooter, "propTypes", {
  addToAddressBookIfNew: _propTypes.default.func,
  resetSendState: _propTypes.default.func,
  disabled: _propTypes.default.bool.isRequired,
  history: _propTypes.default.object,
  sign: _propTypes.default.func,
  to: _propTypes.default.string,
  toAccounts: _propTypes.default.array,
  sendStage: _propTypes.default.string,
  sendErrors: _propTypes.default.object,
  gasEstimateType: _propTypes.default.string,
  mostRecentOverviewPage: _propTypes.default.string.isRequired,
  cancelTx: _propTypes.default.func,
  draftTransactionID: _propTypes.default.string
});
(0, _defineProperty2.default)(SendFooter, "contextTypes", {
  t: _propTypes.default.func,
  metricsEvent: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-footer\\send-footer.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\ens-input.component.js", {"../../../../../shared/modules/hexstring-utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\hexstring-utils.js","../../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\send\send-content\add-recipient\ens-input.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _util = require("../../../../helpers/utils/util");

var _hexstringUtils = require("../../../../../shared/modules/hexstring-utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class EnsInput extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "onPaste", event => {
      var _event$clipboardData$;

      if ((_event$clipboardData$ = event.clipboardData.items) !== null && _event$clipboardData$ !== void 0 && _event$clipboardData$.length) {
        const clipboardItem = event.clipboardData.items[0];
        clipboardItem === null || clipboardItem === void 0 ? void 0 : clipboardItem.getAsString(text => {
          const input = text.trim();

          if (!(0, _hexstringUtils.isBurnAddress)(input) && (0, _hexstringUtils.isValidHexAddress)(input, {
            mixedCaseUseChecksum: true
          })) {
            this.props.onPaste(input);
          }
        });
      }
    });
    (0, _defineProperty2.default)(this, "onChange", ({
      target: {
        value
      }
    }) => {
      const {
        onValidAddressTyped,
        internalSearch,
        onChange,
        lookupEnsName,
        resetEnsResolution
      } = this.props;
      const input = value.trim();
      onChange(input);

      if (internalSearch) {
        return null;
      } // Empty ENS state if input is empty
      // maybe scan ENS


      if ((0, _util.isValidDomainName)(input)) {
        lookupEnsName(input);
      } else {
        resetEnsResolution();

        if (onValidAddressTyped && !(0, _hexstringUtils.isBurnAddress)(input) && (0, _hexstringUtils.isValidHexAddress)(input, {
          mixedCaseUseChecksum: true
        })) {
          onValidAddressTyped(input);
        }
      }

      return null;
    });
  }

  componentDidMount() {
    this.props.initializeEnsSlice();
  }

  render() {
    const {
      t
    } = this.context;
    const {
      className,
      selectedAddress,
      selectedName,
      userInput
    } = this.props;
    const hasSelectedAddress = Boolean(selectedAddress);
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('ens-input', className)
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('ens-input__wrapper', {
        'ens-input__wrapper__status-icon--error': false,
        'ens-input__wrapper__status-icon--valid': false,
        'ens-input__wrapper--valid': hasSelectedAddress
      })
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('ens-input__wrapper__status-icon', {
        'ens-input__wrapper__status-icon--valid': hasSelectedAddress
      })
    }), hasSelectedAddress ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "ens-input__wrapper__input ens-input__wrapper__input--selected"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "ens-input__selected-input__title"
    }, selectedName || selectedAddress), selectedName !== selectedAddress && /*#__PURE__*/_react.default.createElement("div", {
      className: "ens-input__selected-input__subtitle"
    }, selectedAddress)), /*#__PURE__*/_react.default.createElement("div", {
      className: "ens-input__wrapper__action-icon ens-input__wrapper__action-icon--erase",
      onClick: this.props.onReset
    })) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("input", {
      className: "ens-input__wrapper__input",
      type: "text",
      dir: "auto",
      placeholder: t('recipientAddressPlaceholder'),
      onChange: this.onChange,
      onPaste: this.onPaste,
      spellCheck: "false",
      value: selectedAddress || userInput,
      autoFocus: true,
      "data-testid": "ens-input"
    }), /*#__PURE__*/_react.default.createElement("button", {
      className: (0, _classnames.default)('ens-input__wrapper__action-icon', {
        'ens-input__wrapper__action-icon--erase': userInput,
        'ens-input__wrapper__action-icon--qrcode': !userInput
      }),
      onClick: () => {
        if (userInput) {
          this.props.onReset();
        } else {
          this.props.scanQrCode();
        }
      }
    }))));
  }

}

exports.default = EnsInput;
(0, _defineProperty2.default)(EnsInput, "contextTypes", {
  t: _propTypes.default.func,
  metricsEvent: _propTypes.default.func
});
(0, _defineProperty2.default)(EnsInput, "propTypes", {
  className: _propTypes.default.string,
  selectedAddress: _propTypes.default.string,
  selectedName: _propTypes.default.string,
  scanQrCode: _propTypes.default.func,
  onPaste: _propTypes.default.func,
  onValidAddressTyped: _propTypes.default.func,
  internalSearch: _propTypes.default.bool,
  userInput: _propTypes.default.string,
  onChange: _propTypes.default.func.isRequired,
  onReset: _propTypes.default.func.isRequired,
  lookupEnsName: _propTypes.default.func.isRequired,
  initializeEnsSlice: _propTypes.default.func.isRequired,
  resetEnsResolution: _propTypes.default.func.isRequired
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\ens-input.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\add-recipient.component.js", {"../../../../components/app/contact-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\contact-list\\index.js","../../../../components/app/contact-list/recipient-group/recipient-group.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\contact-list\\recipient-group\\recipient-group.component.js","../../../../components/ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../../../components/ui/confusable":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\confusable\\index.js","../../../../components/ui/dialog":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\dialog\\index.js","../../../../components/ui/identicon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\index.js","../../send.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send.utils.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","fuse.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\fuse.js\\dist\\fuse.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\send\send-content\add-recipient\add-recipient.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _fuse = _interopRequireDefault(require("fuse.js"));

var _identicon = _interopRequireDefault(require("../../../../components/ui/identicon"));

var _dialog = _interopRequireDefault(require("../../../../components/ui/dialog"));

var _contactList = _interopRequireDefault(require("../../../../components/app/contact-list"));

var _recipientGroup = _interopRequireDefault(require("../../../../components/app/contact-list/recipient-group/recipient-group.component"));

var _send = require("../../send.utils");

var _button = _interopRequireDefault(require("../../../../components/ui/button"));

var _confusable = _interopRequireDefault(require("../../../../components/ui/confusable"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class AddRecipient extends _react.Component {
  constructor(props) {
    super(props);
    (0, _defineProperty2.default)(this, "selectRecipient", (address, nickname = '') => {
      this.props.updateRecipient({
        address,
        nickname
      });
    });
    (0, _defineProperty2.default)(this, "searchForContacts", () => {
      const {
        userInput,
        contacts
      } = this.props;
      let _contacts = contacts;

      if (userInput) {
        this.contactFuse.setCollection(contacts);
        _contacts = this.contactFuse.search(userInput);
      }

      return _contacts;
    });
    (0, _defineProperty2.default)(this, "searchForRecents", () => {
      const {
        userInput,
        nonContacts
      } = this.props;
      let _nonContacts = nonContacts;

      if (userInput) {
        this.recentFuse.setCollection(nonContacts);
        _nonContacts = this.recentFuse.search(userInput);
      }

      return _nonContacts;
    });
    this.recentFuse = new _fuse.default(props.nonContacts, {
      shouldSort: true,
      threshold: 0.45,
      location: 0,
      distance: 100,
      maxPatternLength: 32,
      minMatchCharLength: 1,
      keys: [{
        name: 'address',
        weight: 0.5
      }]
    });
    this.contactFuse = new _fuse.default(props.contacts, {
      shouldSort: true,
      threshold: 0.45,
      location: 0,
      distance: 100,
      maxPatternLength: 32,
      minMatchCharLength: 1,
      keys: [{
        name: 'name',
        weight: 0.5
      }, {
        name: 'address',
        weight: 0.5
      }]
    });
  }

  render() {
    const {
      ensResolution,
      recipient,
      userInput,
      addressBookEntryName,
      isUsingMyAccountsForRecipientSearch
    } = this.props;
    let content;

    if (recipient.address) {
      content = this.renderExplicitAddress(recipient.address, recipient.nickname);
    } else if (ensResolution) {
      content = this.renderExplicitAddress(ensResolution, addressBookEntryName || userInput);
    } else if (isUsingMyAccountsForRecipientSearch) {
      content = this.renderTransfer();
    }

    return /*#__PURE__*/_react.default.createElement("div", {
      className: "send__select-recipient-wrapper"
    }, this.renderDialogs(), content || this.renderMain());
  }

  renderExplicitAddress(address, name) {
    return /*#__PURE__*/_react.default.createElement("div", {
      key: address,
      className: "send__select-recipient-wrapper__group-item",
      onClick: () => this.selectRecipient(address, name)
    }, /*#__PURE__*/_react.default.createElement(_identicon.default, {
      address: address,
      diameter: 28
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "send__select-recipient-wrapper__group-item__content"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "send__select-recipient-wrapper__group-item__title"
    }, name ? /*#__PURE__*/_react.default.createElement(_confusable.default, {
      input: name
    }) : (0, _send.ellipsify)(address)), name && /*#__PURE__*/_react.default.createElement("div", {
      className: "send__select-recipient-wrapper__group-item__subtitle"
    }, (0, _send.ellipsify)(address))));
  }

  renderTransfer() {
    let {
      ownedAccounts
    } = this.props;
    const {
      userInput,
      useContactListForRecipientSearch,
      isUsingMyAccountsForRecipientSearch
    } = this.props;
    const {
      t
    } = this.context;

    if (isUsingMyAccountsForRecipientSearch && userInput) {
      ownedAccounts = ownedAccounts.filter(item => item.name.toLowerCase().indexOf(userInput.toLowerCase()) > -1 || item.address.toLowerCase().indexOf(userInput.toLowerCase()) > -1);
    }

    return /*#__PURE__*/_react.default.createElement("div", {
      className: "send__select-recipient-wrapper__list"
    }, /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "link",
      className: "send__select-recipient-wrapper__list__link",
      onClick: useContactListForRecipientSearch
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "send__select-recipient-wrapper__list__back-caret"
    }), t('backToAll')), /*#__PURE__*/_react.default.createElement(_recipientGroup.default, {
      label: t('myAccounts'),
      items: ownedAccounts,
      onSelect: this.selectRecipient
    }));
  }

  renderMain() {
    const {
      t
    } = this.context;
    const {
      userInput,
      ownedAccounts = [],
      addressBook,
      useMyAccountsForRecipientSearch
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "send__select-recipient-wrapper__list"
    }, /*#__PURE__*/_react.default.createElement(_contactList.default, {
      addressBook: addressBook,
      searchForContacts: this.searchForContacts.bind(this),
      searchForRecents: this.searchForRecents.bind(this),
      selectRecipient: this.selectRecipient.bind(this)
    }, ownedAccounts && ownedAccounts.length > 1 && !userInput && /*#__PURE__*/_react.default.createElement(_button.default, {
      type: "link",
      className: "send__select-recipient-wrapper__list__link",
      onClick: useMyAccountsForRecipientSearch
    }, t('transferBetweenAccounts'))));
  }

  renderDialogs() {
    const {
      ensError,
      recipient,
      ensWarning
    } = this.props;
    const {
      t
    } = this.context;

    if (ensError || recipient.error && recipient.error !== 'required') {
      return /*#__PURE__*/_react.default.createElement(_dialog.default, {
        type: "error",
        className: "send__error-dialog"
      }, t(ensError !== null && ensError !== void 0 ? ensError : recipient.error));
    } else if (ensWarning || recipient.warning) {
      return /*#__PURE__*/_react.default.createElement(_dialog.default, {
        type: "warning",
        className: "send__error-dialog"
      }, t(ensWarning !== null && ensWarning !== void 0 ? ensWarning : recipient.warning));
    }

    return null;
  }

}

exports.default = AddRecipient;
(0, _defineProperty2.default)(AddRecipient, "propTypes", {
  userInput: _propTypes.default.string,
  ownedAccounts: _propTypes.default.array,
  addressBook: _propTypes.default.array,
  updateRecipient: _propTypes.default.func,
  ensResolution: _propTypes.default.string,
  ensError: _propTypes.default.string,
  ensWarning: _propTypes.default.string,
  addressBookEntryName: _propTypes.default.string,
  contacts: _propTypes.default.array,
  nonContacts: _propTypes.default.array,
  useMyAccountsForRecipientSearch: _propTypes.default.func,
  useContactListForRecipientSearch: _propTypes.default.func,
  isUsingMyAccountsForRecipientSearch: _propTypes.default.bool,
  recipient: _propTypes.default.shape({
    address: _propTypes.default.string,
    nickname: _propTypes.default.nickname,
    error: _propTypes.default.string,
    warning: _propTypes.default.string
  })
});
(0, _defineProperty2.default)(AddRecipient, "contextTypes", {
  t: _propTypes.default.func,
  metricsEvent: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\add-recipient\\add-recipient.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\send-content.component.js", {"../../../components/app/modals/nickname-popovers":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\modals\\nickname-popovers\\index.js","../../../components/ui/dialog":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\dialog\\index.js","../../../components/ui/page-container/page-container-content.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\page-container-content.component.js","../../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","../../../helpers/constants/error-keys":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\error-keys.js","./send-amount-row":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\send-amount-row\\index.js","./send-asset-row":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\send-asset-row\\index.js","./send-gas-row":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\send-gas-row\\index.js","./send-hex-data-row":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\send-hex-data-row\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\send\send-content\send-content.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _pageContainerContent = _interopRequireDefault(require("../../../components/ui/page-container/page-container-content.component"));

var _dialog = _interopRequireDefault(require("../../../components/ui/dialog"));

var _nicknamePopovers = _interopRequireDefault(require("../../../components/app/modals/nickname-popovers"));

var _errorKeys = require("../../../helpers/constants/error-keys");

var _send = require("../../../ducks/send");

var _sendAmountRow = _interopRequireDefault(require("./send-amount-row"));

var _sendHexDataRow = _interopRequireDefault(require("./send-hex-data-row"));

var _sendAssetRow = _interopRequireDefault(require("./send-asset-row"));

var _sendGasRow = _interopRequireDefault(require("./send-gas-row"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class SendContent extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      showNicknamePopovers: false
    });
  }

  render() {
    const {
      warning,
      error,
      gasIsExcessive,
      isEthGasPrice,
      noGasPrice,
      networkOrAccountNotSupports1559,
      getIsBalanceInsufficient,
      asset,
      assetError
    } = this.props;
    let gasError;

    if (gasIsExcessive) {
      gasError = _errorKeys.GAS_PRICE_EXCESSIVE_ERROR_KEY;
    } else if (noGasPrice) {
      gasError = _errorKeys.GAS_PRICE_FETCH_FAILURE_ERROR_KEY;
    } else if (getIsBalanceInsufficient) {
      gasError = _errorKeys.INSUFFICIENT_FUNDS_FOR_GAS_ERROR_KEY;
    }

    const showHexData = this.props.showHexData && asset.type !== _send.ASSET_TYPES.TOKEN && asset.type !== _send.ASSET_TYPES.COLLECTIBLE;
    return /*#__PURE__*/_react.default.createElement(_pageContainerContent.default, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "send-v2__form"
    }, assetError ? this.renderError(assetError) : null, gasError ? this.renderError(gasError) : null, isEthGasPrice ? this.renderWarning(_errorKeys.ETH_GAS_PRICE_FETCH_WARNING_KEY) : null, error ? this.renderError(error) : null, warning ? this.renderWarning() : null, this.maybeRenderAddContact(), /*#__PURE__*/_react.default.createElement(_sendAssetRow.default, null), /*#__PURE__*/_react.default.createElement(_sendAmountRow.default, null), networkOrAccountNotSupports1559 ? /*#__PURE__*/_react.default.createElement(_sendGasRow.default, null) : null, showHexData ? /*#__PURE__*/_react.default.createElement(_sendHexDataRow.default, null) : null));
  }

  maybeRenderAddContact() {
    const {
      t
    } = this.context;
    const {
      isOwnedAccount,
      contact = {},
      to
    } = this.props;
    const {
      showNicknamePopovers
    } = this.state;

    if (isOwnedAccount || contact.name) {
      return null;
    }

    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_dialog.default, {
      type: "message",
      className: "send__dialog",
      onClick: () => this.setState({
        showNicknamePopovers: true
      })
    }, t('newAccountDetectedDialogMessage')), showNicknamePopovers ? /*#__PURE__*/_react.default.createElement(_nicknamePopovers.default, {
      onClose: () => this.setState({
        showNicknamePopovers: false
      }),
      address: to
    }) : null);
  }

  renderWarning(gasWarning = '') {
    const {
      t
    } = this.context;
    const {
      warning
    } = this.props;
    return /*#__PURE__*/_react.default.createElement(_dialog.default, {
      type: "warning",
      className: "send__error-dialog"
    }, gasWarning === '' ? t(warning) : t(gasWarning));
  }

  renderError(error) {
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement(_dialog.default, {
      type: "error",
      className: "send__error-dialog"
    }, t(error));
  }

}

exports.default = SendContent;
(0, _defineProperty2.default)(SendContent, "contextTypes", {
  t: _propTypes.default.func
});
(0, _defineProperty2.default)(SendContent, "propTypes", {
  showHexData: _propTypes.default.bool,
  contact: _propTypes.default.object,
  isOwnedAccount: _propTypes.default.bool,
  warning: _propTypes.default.string,
  error: _propTypes.default.string,
  gasIsExcessive: _propTypes.default.bool.isRequired,
  isEthGasPrice: _propTypes.default.bool,
  noGasPrice: _propTypes.default.bool,
  networkOrAccountNotSupports1559: _propTypes.default.bool,
  getIsBalanceInsufficient: _propTypes.default.bool,
  asset: _propTypes.default.object,
  to: _propTypes.default.string,
  assetError: _propTypes.default.string
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send-content\\send-content.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\multiple-notifications\\multiple-notifications.component.js", {"@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\multiple-notifications\multiple-notifications.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class MultipleNotifications extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      showAll: false
    });
  }

  render() {
    const {
      showAll
    } = this.state;
    const {
      children,
      classNames
    } = this.props;
    const childrenToRender = children.filter(Boolean);

    if (childrenToRender.length === 0) {
      return null;
    }

    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)(...classNames, {
        'home-notification-wrapper--show-all': showAll,
        'home-notification-wrapper--show-first': !showAll
      })
    }, childrenToRender, /*#__PURE__*/_react.default.createElement("div", {
      className: "home-notification-wrapper__i-container",
      onClick: () => this.setState({
        showAll: !showAll
      })
    }, childrenToRender.length > 1 ? /*#__PURE__*/_react.default.createElement("i", {
      className: (0, _classnames.default)('fa fa-sm fa-sort-amount-asc', {
        flipped: !showAll
      })
    }) : null));
  }

}

exports.default = MultipleNotifications;
(0, _defineProperty2.default)(MultipleNotifications, "defaultProps", {
  children: [],
  classNames: []
});
(0, _defineProperty2.default)(MultipleNotifications, "propTypes", {
  children: _propTypes.default.array,
  classNames: _propTypes.default.array
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\multiple-notifications\\multiple-notifications.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\home-notification\\home-notification.component.js", {"../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../ui/check-box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\check-box\\index.js","../../ui/tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tooltip\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\home-notification\home-notification.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _button = _interopRequireDefault(require("../../ui/button"));

var _checkBox = _interopRequireDefault(require("../../ui/check-box"));

var _tooltip = _interopRequireDefault(require("../../ui/tooltip"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const HomeNotification = ({
  acceptText,
  checkboxText,
  checkboxTooltipText,
  classNames = [],
  descriptionText,
  ignoreText,
  infoText,
  onAccept,
  onIgnore
}) => {
  const [checkboxState, setCheckBoxState] = (0, _react.useState)(false);

  const checkboxElement = checkboxText && /*#__PURE__*/_react.default.createElement(_checkBox.default, {
    id: "homeNotification_checkbox",
    checked: checkboxState,
    className: "home-notification__checkbox",
    onClick: () => setCheckBoxState(checked => !checked)
  });

  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('home-notification', ...classNames)
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "home-notification__content"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "home-notification__content-container"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "home-notification__text"
  }, descriptionText)), infoText ? /*#__PURE__*/_react.default.createElement(_tooltip.default, {
    position: "top",
    title: infoText,
    wrapperClassName: "home-notification__tooltip-wrapper"
  }, /*#__PURE__*/_react.default.createElement("i", {
    className: "fa fa-info-circle"
  })) : null), /*#__PURE__*/_react.default.createElement("div", {
    className: "home-notification__buttons"
  }, onAccept && acceptText ? /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "primary",
    className: "home-notification__accept-button",
    onClick: onAccept
  }, acceptText) : null, onIgnore && ignoreText ? /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "secondary",
    className: "home-notification__ignore-button" // Some onIgnore handlers use the checkboxState to determine whether
    // to disable the notification
    ,
    onClick: () => onIgnore(checkboxState)
  }, ignoreText) : null, checkboxText ? /*#__PURE__*/_react.default.createElement("div", {
    className: "home-notification__checkbox-wrapper"
  }, checkboxTooltipText ? /*#__PURE__*/_react.default.createElement(_tooltip.default, {
    position: "top",
    title: checkboxTooltipText,
    wrapperClassName: "home-notification__checkbox-label-tooltip"
  }, checkboxElement) : checkboxElement, /*#__PURE__*/_react.default.createElement("label", {
    className: "home-notification__checkbox-label",
    htmlFor: "homeNotification_checkbox"
  }, checkboxText)) : null));
};

HomeNotification.propTypes = {
  /**
   * The text for the "Accept" button. This must be accompanied by the `onAccept` prop.
   *
   * The "Accept" button is only rendered if this prop is set.
   */
  acceptText: _propTypes.default.node,

  /**
   * The text to display alongside the checkbox.
   *
   * The checkbox state is passed to the `onIgnore` handler, so this should only be used if the `onIgnore` prop is set.
   *
   * The checkbox is only rendered if this prop is set.
   */
  checkboxText: _propTypes.default.node,

  /**
   * The text to display in the checkbox tooltip.
   *
   * The tooltip is only rendered if this prop is set.
   */
  checkboxTooltipText: _propTypes.default.node,

  /**
   * Custom class names.
   */
  classNames: _propTypes.default.array,

  /**
   * The notification description.
   */
  descriptionText: _propTypes.default.node.isRequired,

  /**
   * The text for the "Ignore" button. This must be accompanied by the `onIgnore` prop.
   *
   * The "Ignore" button is only rendered if this prop is set.
   */
  ignoreText: _propTypes.default.node,

  /**
   * The text for the info icon tooltip in the top-right of the notification.
   *
   * The info-icon is only rendered if this prop is set.
   */
  infoText: _propTypes.default.node,

  /**
   * The handler for the "Accept" button. This must be accompanied by the `acceptText` prop.
   */
  onAccept: _propTypes.default.func,

  /**
   * The handler for the "Ignore" button. This must be accompanied by the `ignoreText` prop.
   *
   * If `checkboxText` is set, the checkbox state will be passed to this function as a boolean.
   */
  onIgnore: _propTypes.default.func
};
var _default = HomeNotification;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\home-notification\\home-notification.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\recovery-phrase-reminder\\recovery-phrase-reminder.js", {"../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../ui/box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../ui/popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\popover\\index.js","../../ui/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\recovery-phrase-reminder\recovery-phrase-reminder.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = RecoveryPhraseReminder;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _useI18nContext = require("../../../hooks/useI18nContext");

var _box = _interopRequireDefault(require("../../ui/box"));

var _button = _interopRequireDefault(require("../../ui/button"));

var _popover = _interopRequireDefault(require("../../ui/popover"));

var _typography = _interopRequireDefault(require("../../ui/typography"));

var _designSystem = require("../../../helpers/constants/design-system");

var _routes = require("../../../helpers/constants/routes");

// Components
// Helpers
function RecoveryPhraseReminder({
  onConfirm,
  hasBackedUp
}) {
  const t = (0, _useI18nContext.useI18nContext)();
  const history = (0, _reactRouterDom.useHistory)();

  const handleBackUp = () => {
    history.push(_routes.INITIALIZE_BACKUP_SEED_PHRASE_ROUTE);
  };

  return /*#__PURE__*/_react.default.createElement(_popover.default, {
    centerTitle: true,
    title: t('recoveryPhraseReminderTitle')
  }, /*#__PURE__*/_react.default.createElement(_box.default, {
    padding: [0, 4, 6, 4],
    className: "recovery-phrase-reminder"
  }, /*#__PURE__*/_react.default.createElement(_typography.default, {
    color: _designSystem.COLORS.BLACK,
    align: _designSystem.TEXT_ALIGN.CENTER,
    variant: _designSystem.TYPOGRAPHY.Paragraph,
    boxProps: {
      marginTop: 0,
      marginBottom: 4
    }
  }, t('recoveryPhraseReminderSubText')), /*#__PURE__*/_react.default.createElement(_box.default, {
    margin: [4, 0, 8, 0]
  }, /*#__PURE__*/_react.default.createElement("ul", {
    className: "recovery-phrase-reminder__list"
  }, /*#__PURE__*/_react.default.createElement("li", null, /*#__PURE__*/_react.default.createElement(_typography.default, {
    tag: "span",
    color: _designSystem.COLORS.BLACK,
    fontWeight: _designSystem.FONT_WEIGHT.BOLD
  }, t('recoveryPhraseReminderItemOne'))), /*#__PURE__*/_react.default.createElement("li", null, t('recoveryPhraseReminderItemTwo')), /*#__PURE__*/_react.default.createElement("li", null, hasBackedUp ? t('recoveryPhraseReminderHasBackedUp') : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, t('recoveryPhraseReminderHasNotBackedUp'), /*#__PURE__*/_react.default.createElement(_box.default, {
    display: _designSystem.DISPLAY.INLINE_BLOCK,
    marginLeft: 1
  }, /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "link",
    onClick: handleBackUp,
    style: {
      fontSize: 'inherit',
      padding: 0
    }
  }, t('recoveryPhraseReminderBackupStart'))))))), /*#__PURE__*/_react.default.createElement(_box.default, {
    justifyContent: _designSystem.JUSTIFY_CONTENT.CENTER
  }, /*#__PURE__*/_react.default.createElement(_box.default, {
    width: _designSystem.BLOCK_SIZES.TWO_FIFTHS
  }, /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "primary",
    onClick: onConfirm
  }, t('recoveryPhraseReminderConfirm'))))));
}

RecoveryPhraseReminder.propTypes = {
  hasBackedUp: _propTypes.default.bool.isRequired,
  onConfirm: _propTypes.default.func.isRequired
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\recovery-phrase-reminder\\recovery-phrase-reminder.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\whats-new-popup\\whats-new-popup.js", {"../../../../shared/notifications":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\notifications\\index.js","../../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../../hooks/useEqualityCheck":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useEqualityCheck.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../ui/popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\popover\\index.js","../../ui/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\whats-new-popup\whats-new-popup.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = WhatsNewPopup;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _reactRouterDom = require("react-router-dom");

var _reactRedux = require("react-redux");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _metamask = require("../../../ducks/metamask/metamask");

var _i18n = require("../../../contexts/i18n");

var _useEqualityCheck = require("../../../hooks/useEqualityCheck");

var _button = _interopRequireDefault(require("../../ui/button"));

var _popover = _interopRequireDefault(require("../../ui/popover"));

var _typography = _interopRequireDefault(require("../../ui/typography"));

var _actions = require("../../../store/actions");

var _notifications = require("../../../../shared/notifications");

var _selectors = require("../../../selectors");

var _routes = require("../../../helpers/constants/routes");

var _designSystem = require("../../../helpers/constants/design-system");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function getActionFunctionById(id, history) {
  const actionFunctions = {
    2: () => {
      global.platform.openTab({
        url: 'https://survey.alchemer.com/s3/6173069/MetaMask-Extension-NPS-January-2021'
      });
    },
    3: () => {
      global.platform.openTab({
        url: 'https://community.metamask.io/t/about-the-security-category/72'
      });
    },
    4: () => {
      (0, _actions.updateViewedNotifications)({
        4: true
      });
      history.push(_routes.BUILD_QUOTE_ROUTE);
    },
    5: () => {
      (0, _actions.updateViewedNotifications)({
        5: true
      });
      global.platform.openTab({
        url: 'https://metamask.zendesk.com/hc/en-us/articles/360060826432'
      });
    },
    8: () => {
      (0, _actions.updateViewedNotifications)({
        8: true
      });
      history.push(_routes.ADVANCED_ROUTE);
    }
  };
  return actionFunctions[id];
}

const renderDescription = description => {
  if (!Array.isArray(description)) {
    return /*#__PURE__*/_react.default.createElement(_typography.default, {
      variant: _designSystem.TYPOGRAPHY.Paragraph
    }, description);
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, description.map((piece, index) => {
    const isLast = index === description.length - 1;
    return /*#__PURE__*/_react.default.createElement(_typography.default, {
      key: `item-${index}`,
      variant: _designSystem.TYPOGRAPHY.Paragraph,
      boxProps: {
        marginBottom: isLast ? 0 : 2
      }
    }, piece);
  }));
};

const renderFirstNotification = (notification, idRefMap, history, isLast) => {
  const {
    id,
    date,
    title,
    description,
    image,
    actionText
  } = notification;
  const actionFunction = getActionFunctionById(id, history);

  const imageComponent = image && /*#__PURE__*/_react.default.createElement("img", {
    className: "whats-new-popup__notification-image",
    src: image.src,
    height: image.height,
    width: image.width
  });

  const placeImageBelowDescription = image === null || image === void 0 ? void 0 : image.placeImageBelowDescription;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('whats-new-popup__notification whats-new-popup__first-notification', {
      'whats-new-popup__last-notification': isLast
    }),
    key: `whats-new-popop-notification-${id}`
  }, !placeImageBelowDescription && imageComponent, /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__notification-title"
  }, title), /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__description-and-date"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__notification-description"
  }, renderDescription(description)), /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__notification-date"
  }, date)), placeImageBelowDescription && imageComponent, actionText && /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "secondary",
    className: "whats-new-popup__button",
    onClick: actionFunction
  }, actionText), /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__intersection-observable",
    ref: idRefMap[id]
  }));
};

const renderSubsequentNotification = (notification, idRefMap, history, isLast) => {
  const {
    id,
    date,
    title,
    description,
    actionText
  } = notification;
  const actionFunction = getActionFunctionById(id, history);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('whats-new-popup__notification', {
      'whats-new-popup__last-notification': isLast
    }),
    key: `whats-new-popop-notification-${id}`
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__notification-title"
  }, title), /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__description-and-date"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__notification-description"
  }, renderDescription(description)), /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__notification-date"
  }, date)), actionText && /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__link",
    onClick: actionFunction
  }, `${actionText} >`), /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__intersection-observable",
    ref: idRefMap[id]
  }));
};

function WhatsNewPopup({
  onClose
}) {
  const t = (0, _react.useContext)(_i18n.I18nContext);
  const history = (0, _reactRouterDom.useHistory)();
  const notifications = (0, _reactRedux.useSelector)(_selectors.getSortedNotificationsToShow);
  const locale = (0, _reactRedux.useSelector)(_metamask.getCurrentLocale);
  const [seenNotifications, setSeenNotifications] = (0, _react.useState)({});
  const popoverRef = (0, _react.useRef)();
  const memoizedNotifications = (0, _useEqualityCheck.useEqualityCheck)(notifications);
  const idRefMap = (0, _react.useMemo)(() => memoizedNotifications.reduce((_idRefMap, notification) => _objectSpread(_objectSpread({}, _idRefMap), {}, {
    [notification.id]: /*#__PURE__*/_react.default.createRef()
  }), {}), [memoizedNotifications]);
  (0, _react.useEffect)(() => {
    const observer = new window.IntersectionObserver((entries, _observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const [id, ref] = Object.entries(idRefMap).find(([_, _ref]) => _ref.current.isSameNode(entry.target));
          setSeenNotifications(_seenNotifications => _objectSpread(_objectSpread({}, _seenNotifications), {}, {
            [id]: true
          }));

          _observer.unobserve(ref.current);
        }
      });
    }, {
      root: popoverRef.current,
      threshold: 1.0
    });
    Object.values(idRefMap).forEach(ref => {
      observer.observe(ref.current);
    });
    return () => {
      observer.disconnect();
    };
  }, [idRefMap, setSeenNotifications]);
  return /*#__PURE__*/_react.default.createElement(_popover.default, {
    className: "whats-new-popup__popover",
    title: t('whatsNew'),
    onClose: () => {
      (0, _actions.updateViewedNotifications)(seenNotifications);
      onClose();
    },
    popoverRef: popoverRef
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "whats-new-popup__notifications"
  }, notifications.map(({
    id
  }, index) => {
    const notification = (0, _notifications.getTranslatedUINoficiations)(t, locale)[id];
    const isLast = index === notifications.length - 1; // Display the swaps notification with full image

    return index === 0 || id === 1 ? renderFirstNotification(notification, idRefMap, history, isLast) : renderSubsequentNotification(notification, idRefMap, history, isLast);
  })));
}

WhatsNewPopup.propTypes = {
  onClose: _propTypes.default.func.isRequired
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\whats-new-popup\\whats-new-popup.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\collectibles-tab\\collectibles-tab.js", {"../../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../../hooks/useCollectiblesCollections":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useCollectiblesCollections.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","../../ui/box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","../../ui/button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\button\\index.js","../../ui/typography/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\typography.js","../collectibles-detection-notice":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\collectibles-detection-notice\\index.js","../collectibles-items":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\collectibles-items\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\collectibles-tab\collectibles-tab.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CollectiblesTab;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _box = _interopRequireDefault(require("../../ui/box"));

var _button = _interopRequireDefault(require("../../ui/button"));

var _typography = _interopRequireDefault(require("../../ui/typography/typography"));

var _collectiblesDetectionNotice = _interopRequireDefault(require("../collectibles-detection-notice"));

var _collectiblesItems = _interopRequireDefault(require("../collectibles-items"));

var _designSystem = require("../../../helpers/constants/design-system");

var _useI18nContext = require("../../../hooks/useI18nContext");

var _metamask = require("../../../ducks/metamask/metamask");

var _selectors = require("../../../selectors");

var _routes = require("../../../helpers/constants/routes");

var _actions = require("../../../store/actions");

var _useCollectiblesCollections = require("../../../hooks/useCollectiblesCollections");

function CollectiblesTab({
  onAddNFT
}) {
  const useCollectibleDetection = (0, _reactRedux.useSelector)(_selectors.getUseCollectibleDetection);
  const isMainnet = (0, _reactRedux.useSelector)(_selectors.getIsMainnet);
  const collectibleDetectionNoticeDismissed = (0, _reactRedux.useSelector)(_metamask.getCollectiblesDetectionNoticeDismissed);
  const history = (0, _reactRouterDom.useHistory)();
  const t = (0, _useI18nContext.useI18nContext)();
  const dispatch = (0, _reactRedux.useDispatch)();
  const {
    collectiblesLoading,
    collections,
    previouslyOwnedCollection
  } = (0, _useCollectiblesCollections.useCollectiblesCollections)();

  const onEnableAutoDetect = () => {
    history.push(_routes.EXPERIMENTAL_ROUTE);
  };

  const onRefresh = () => {
    if (isMainnet) {
      dispatch((0, _actions.detectCollectibles)());
    }

    (0, _actions.checkAndUpdateAllCollectiblesOwnershipStatus)();
  };

  if (collectiblesLoading) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "collectibles-tab__loading"
    }, t('loadingNFTs'));
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "collectibles-tab"
  }, Object.keys(collections).length > 0 || previouslyOwnedCollection.collectibles.length > 0 ? /*#__PURE__*/_react.default.createElement(_collectiblesItems.default, {
    collections: collections,
    previouslyOwnedCollection: previouslyOwnedCollection
  }) : /*#__PURE__*/_react.default.createElement(_box.default, {
    padding: [6, 12, 6, 12]
  }, isMainnet && !useCollectibleDetection && !collectibleDetectionNoticeDismissed ? /*#__PURE__*/_react.default.createElement(_collectiblesDetectionNotice.default, null) : null, /*#__PURE__*/_react.default.createElement(_box.default, {
    justifyContent: _designSystem.JUSTIFY_CONTENT.CENTER
  }, /*#__PURE__*/_react.default.createElement("img", {
    src: "./images/no-nfts.svg"
  })), /*#__PURE__*/_react.default.createElement(_box.default, {
    marginTop: 4,
    marginBottom: 12,
    justifyContent: _designSystem.JUSTIFY_CONTENT.CENTER,
    flexDirection: _designSystem.FLEX_DIRECTION.COLUMN,
    className: "collectibles-tab__link"
  }, /*#__PURE__*/_react.default.createElement(_typography.default, {
    color: _designSystem.COLORS.UI3,
    variant: _designSystem.TYPOGRAPHY.H4,
    align: _designSystem.TEXT_ALIGN.CENTER,
    fontWeight: _designSystem.FONT_WEIGHT.BOLD
  }, t('noNFTs')), /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "link",
    target: "_blank",
    rel: "noopener noreferrer",
    href: "https://metamask.zendesk.com/hc/en-us/articles/360058238591-NFT-tokens-in-MetaMask-wallet"
  }, t('learnMoreUpperCase')))), /*#__PURE__*/_react.default.createElement(_box.default, {
    marginBottom: 4,
    justifyContent: _designSystem.JUSTIFY_CONTENT.CENTER,
    flexDirection: _designSystem.FLEX_DIRECTION.COLUMN
  }, /*#__PURE__*/_react.default.createElement(_typography.default, {
    color: _designSystem.COLORS.UI3,
    variant: _designSystem.TYPOGRAPHY.H5,
    align: _designSystem.TEXT_ALIGN.CENTER
  }, t('missingNFT')), /*#__PURE__*/_react.default.createElement(_box.default, {
    alignItems: _designSystem.ALIGN_ITEMS.CENTER,
    justifyContent: _designSystem.JUSTIFY_CONTENT.CENTER
  }, !isMainnet && Object.keys(collections).length < 1 ? null : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_box.default, {
    className: "collectibles-tab__link",
    justifyContent: _designSystem.JUSTIFY_CONTENT.FLEX_END
  }, isMainnet && !useCollectibleDetection ? /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "link",
    onClick: onEnableAutoDetect
  }, t('enableAutoDetect')) : /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "link",
    onClick: onRefresh
  }, t('refreshList'))), /*#__PURE__*/_react.default.createElement(_typography.default, {
    color: _designSystem.COLORS.UI3,
    variant: _designSystem.TYPOGRAPHY.H6,
    align: _designSystem.TEXT_ALIGN.CENTER
  }, t('or'))), /*#__PURE__*/_react.default.createElement(_box.default, {
    justifyContent: _designSystem.JUSTIFY_CONTENT.FLEX_START,
    className: "collectibles-tab__link"
  }, /*#__PURE__*/_react.default.createElement(_button.default, {
    type: "link",
    onClick: onAddNFT
  }, t('importNFTs'))))));
}

CollectiblesTab.propTypes = {
  onAddNFT: _propTypes.default.func.isRequired
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\collectibles-tab\\collectibles-tab.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-sites\\connected-sites.container.js", {"../../ducks/history/history":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\history\\history.js","../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./connected-sites.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-sites\\connected-sites.component.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\connected-sites\connected-sites.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactRedux = require("react-redux");

var _actions = require("../../store/actions");

var _selectors = require("../../selectors");

var _routes = require("../../helpers/constants/routes");

var _history = require("../../ducks/history/history");

var _connectedSites = _interopRequireDefault(require("./connected-sites.component"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const mapStateToProps = state => {
  var _permittedAccountsByO;

  const {
    openMetaMaskTabs
  } = state.appState;
  const {
    id
  } = state.activeTab;
  const connectedSubjects = (0, _selectors.getConnectedSubjectsForSelectedAddress)(state);
  const originOfCurrentTab = (0, _selectors.getOriginOfCurrentTab)(state);
  const permittedAccountsByOrigin = (0, _selectors.getPermittedAccountsByOrigin)(state);
  const selectedAddress = (0, _selectors.getSelectedAddress)(state);
  const currentTabHasNoAccounts = !((_permittedAccountsByO = permittedAccountsByOrigin[originOfCurrentTab]) !== null && _permittedAccountsByO !== void 0 && _permittedAccountsByO.length);
  let tabToConnect;

  if (originOfCurrentTab && currentTabHasNoAccounts && !openMetaMaskTabs[id]) {
    tabToConnect = {
      origin: originOfCurrentTab
    };
  }

  return {
    accountLabel: (0, _selectors.getCurrentAccountWithSendEtherInfo)(state).name,
    connectedSubjects,
    subjects: (0, _selectors.getPermissionSubjects)(state),
    mostRecentOverviewPage: (0, _history.getMostRecentOverviewPage)(state),
    permittedAccountsByOrigin,
    selectedAddress,
    tabToConnect
  };
};

const mapDispatchToProps = dispatch => {
  return {
    getOpenMetamaskTabsIds: () => dispatch((0, _actions.getOpenMetamaskTabsIds)()),
    disconnectAccount: (subjectKey, address) => {
      dispatch((0, _actions.removePermittedAccount)(subjectKey, address));
    },
    disconnectAllAccounts: (subjectKey, subject) => {
      const permissionMethodNames = Object.values(subject.permissions).map(({
        parentCapability
      }) => parentCapability);
      dispatch((0, _actions.removePermissionsFor)({
        [subjectKey]: permissionMethodNames
      }));
    },
    requestAccountsPermissionWithId: origin => dispatch((0, _actions.requestAccountsPermissionWithId)(origin))
  };
};

const mergeProps = (stateProps, dispatchProps, ownProps) => {
  const {
    connectedSubjects,
    subjects,
    mostRecentOverviewPage,
    selectedAddress,
    tabToConnect
  } = stateProps;
  const {
    disconnectAccount,
    disconnectAllAccounts,
    // eslint-disable-next-line no-shadow
    requestAccountsPermissionWithId
  } = dispatchProps;
  const {
    history
  } = ownProps;

  const closePopover = () => history.push(mostRecentOverviewPage);

  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, ownProps), stateProps), dispatchProps), {}, {
    closePopover,
    disconnectAccount: subjectKey => {
      disconnectAccount(subjectKey, selectedAddress);

      if (connectedSubjects.length === 1) {
        closePopover();
      }
    },
    disconnectAllAccounts: subjectKey => {
      disconnectAllAccounts(subjectKey, subjects[subjectKey]);

      if (connectedSubjects.length === 1) {
        closePopover();
      }
    },
    requestAccountsPermission: async () => {
      const id = await requestAccountsPermissionWithId(tabToConnect.origin);
      history.push(`${_routes.CONNECT_ROUTE}/${id}`);
    }
  });
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(_connectedSites.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-sites\\connected-sites.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-accounts\\connected-accounts.container.js", {"../../ducks/history/history":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\history\\history.js","../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./connected-accounts.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-accounts\\connected-accounts.component.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\connected-accounts\connected-accounts.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactRedux = require("react-redux");

var _selectors = require("../../selectors");

var _util = require("../../helpers/utils/util");

var _actions = require("../../store/actions");

var _history = require("../../ducks/history/history");

var _connectedAccounts = _interopRequireDefault(require("./connected-accounts.component"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const mapStateToProps = state => {
  const {
    activeTab
  } = state;
  const accountToConnect = (0, _selectors.getAccountToConnectToActiveTab)(state);
  const connectedAccounts = (0, _selectors.getOrderedConnectedAccountsForActiveTab)(state);
  const permissions = (0, _selectors.getPermissionsForActiveTab)(state);
  const selectedAddress = (0, _selectors.getSelectedAddress)(state);
  const isActiveTabExtension = (0, _util.isExtensionUrl)(activeTab);
  return {
    accountToConnect,
    isActiveTabExtension,
    activeTabOrigin: activeTab.origin,
    connectedAccounts,
    mostRecentOverviewPage: (0, _history.getMostRecentOverviewPage)(state),
    permissions,
    selectedAddress
  };
};

const mapDispatchToProps = dispatch => {
  return {
    addPermittedAccount: (origin, address) => dispatch((0, _actions.addPermittedAccount)(origin, address)),
    removePermittedAccount: (origin, address) => dispatch((0, _actions.removePermittedAccount)(origin, address)),
    setSelectedAddress: address => dispatch((0, _actions.setSelectedAddress)(address))
  };
};

const mergeProps = (stateProps, dispatchProps, ownProps) => {
  const {
    activeTabOrigin
  } = stateProps;
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, ownProps), stateProps), dispatchProps), {}, {
    connectAccount: address => dispatchProps.addPermittedAccount(activeTabOrigin, address),
    removePermittedAccount: address => dispatchProps.removePermittedAccount(activeTabOrigin, address)
  });
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(_connectedAccounts.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\connected-accounts\\connected-accounts.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\menu-bar\\menu-bar.js", {"../../../../app/scripts/lib/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\scripts\\lib\\util.js","../../../../shared/constants/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\app.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../../hooks/useMetricEvent":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useMetricEvent.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../connected-status-indicator":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\connected-status-indicator\\index.js","../selected-account":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\selected-account\\index.js","./account-options-menu":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\menu-bar\\account-options-menu.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","extensionizer":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\extensionizer\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\menu-bar\menu-bar.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = MenuBar;

var _react = _interopRequireWildcard(require("react"));

var _extensionizer = _interopRequireDefault(require("extensionizer"));

var _reactRouterDom = require("react-router-dom");

var _reactRedux = require("react-redux");

var _selectedAccount = _interopRequireDefault(require("../selected-account"));

var _connectedStatusIndicator = _interopRequireDefault(require("../connected-status-indicator"));

var _util = require("../../../../app/scripts/lib/util");

var _app = require("../../../../shared/constants/app");

var _routes = require("../../../helpers/constants/routes");

var _useI18nContext = require("../../../hooks/useI18nContext");

var _useMetricEvent = require("../../../hooks/useMetricEvent");

var _selectors = require("../../../selectors");

var _accountOptionsMenu = _interopRequireDefault(require("./account-options-menu"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function MenuBar() {
  const t = (0, _useI18nContext.useI18nContext)();
  const openAccountOptionsEvent = (0, _useMetricEvent.useMetricEvent)({
    eventOpts: {
      category: 'Navigation',
      action: 'Home',
      name: 'Opened Account Options'
    }
  });
  const history = (0, _reactRouterDom.useHistory)();
  const [accountOptionsButtonElement, setAccountOptionsButtonElement] = (0, _react.useState)(null);
  const [accountOptionsMenuOpen, setAccountOptionsMenuOpen] = (0, _react.useState)(false);
  const origin = (0, _reactRedux.useSelector)(_selectors.getOriginOfCurrentTab);

  const showStatus = (0, _util.getEnvironmentType)() === _app.ENVIRONMENT_TYPE_POPUP && origin && origin !== _extensionizer.default.runtime.id;

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "menu-bar"
  }, showStatus ? /*#__PURE__*/_react.default.createElement(_connectedStatusIndicator.default, {
    onClick: () => history.push(_routes.CONNECTED_ACCOUNTS_ROUTE)
  }) : null, /*#__PURE__*/_react.default.createElement(_selectedAccount.default, null), /*#__PURE__*/_react.default.createElement("button", {
    className: "fas fa-ellipsis-v menu-bar__account-options",
    "data-testid": "account-options-menu-button",
    ref: setAccountOptionsButtonElement,
    title: t('accountOptions'),
    onClick: () => {
      openAccountOptionsEvent();
      setAccountOptionsMenuOpen(true);
    }
  }), accountOptionsMenuOpen && /*#__PURE__*/_react.default.createElement(_accountOptionsMenu.default, {
    anchorElement: accountOptionsButtonElement,
    onClose: () => setAccountOptionsMenuOpen(false)
  }));
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\menu-bar\\menu-bar.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\asset-list\\asset-list.js", {"../../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../../helpers/constants/common":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\common.js","../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../../../helpers/constants/routes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\routes.js","../../../hooks/useCurrencyDisplay":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useCurrencyDisplay.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../../hooks/useMetricEvent":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useMetricEvent.js","../../../hooks/useUserPreferencedCurrency":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useUserPreferencedCurrency.js","../../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../ui/box/box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\box.js","../../ui/typography/typography":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\typography\\typography.js","../asset-list-item":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\asset-list-item\\index.js","../import-token-link":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\import-token-link\\index.js","../token-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\token-list\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","_process":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\process\\browser.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\asset-list\asset-list.js
      return function (require, module, exports) {
(function (process){(function (){
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _importTokenLink = _interopRequireDefault(require("../import-token-link"));

var _tokenList = _interopRequireDefault(require("../token-list"));

var _routes = require("../../../helpers/constants/routes");

var _assetListItem = _interopRequireDefault(require("../asset-list-item"));

var _common = require("../../../helpers/constants/common");

var _useMetricEvent = require("../../../hooks/useMetricEvent");

var _useUserPreferencedCurrency = require("../../../hooks/useUserPreferencedCurrency");

var _selectors = require("../../../selectors");

var _metamask = require("../../../ducks/metamask/metamask");

var _useCurrencyDisplay = require("../../../hooks/useCurrencyDisplay");

var _typography = _interopRequireDefault(require("../../ui/typography/typography"));

var _box = _interopRequireDefault(require("../../ui/box/box"));

var _designSystem = require("../../../helpers/constants/design-system");

var _useI18nContext = require("../../../hooks/useI18nContext");

const AssetList = ({
  onClickAsset
}) => {
  var _primaryCurrencyPrope;

  const t = (0, _useI18nContext.useI18nContext)();
  const history = (0, _reactRouterDom.useHistory)();
  const selectedAccountBalance = (0, _reactRedux.useSelector)(state => (0, _selectors.getCurrentAccountWithSendEtherInfo)(state).balance);
  const nativeCurrency = (0, _reactRedux.useSelector)(_metamask.getNativeCurrency);
  const showFiat = (0, _reactRedux.useSelector)(_selectors.getShouldShowFiat);
  const selectTokenEvent = (0, _useMetricEvent.useMetricEvent)({
    eventOpts: {
      category: 'Navigation',
      action: 'Token Menu',
      name: 'Clicked Token'
    }
  });
  const addTokenEvent = (0, _useMetricEvent.useMetricEvent)({
    eventOpts: {
      category: 'Navigation',
      action: 'Token Menu',
      name: 'Clicked "Add Token"'
    }
  });
  const {
    currency: primaryCurrency,
    numberOfDecimals: primaryNumberOfDecimals
  } = (0, _useUserPreferencedCurrency.useUserPreferencedCurrency)(_common.PRIMARY, {
    ethNumberOfDecimals: 4
  });
  const {
    currency: secondaryCurrency,
    numberOfDecimals: secondaryNumberOfDecimals
  } = (0, _useUserPreferencedCurrency.useUserPreferencedCurrency)(_common.SECONDARY, {
    ethNumberOfDecimals: 4
  });
  const [, primaryCurrencyProperties] = (0, _useCurrencyDisplay.useCurrencyDisplay)(selectedAccountBalance, {
    numberOfDecimals: primaryNumberOfDecimals,
    currency: primaryCurrency
  });
  const [secondaryCurrencyDisplay, secondaryCurrencyProperties] = (0, _useCurrencyDisplay.useCurrencyDisplay)(selectedAccountBalance, {
    numberOfDecimals: secondaryNumberOfDecimals,
    currency: secondaryCurrency
  });
  const primaryTokenImage = (0, _reactRedux.useSelector)(_selectors.getNativeCurrencyImage);
  const isMainnet = (0, _reactRedux.useSelector)(_selectors.getIsMainnet) || process.env.IN_TEST;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_assetListItem.default, {
    onClick: () => onClickAsset(nativeCurrency),
    "data-testid": "wallet-balance",
    primary: (_primaryCurrencyPrope = primaryCurrencyProperties.value) !== null && _primaryCurrencyPrope !== void 0 ? _primaryCurrencyPrope : secondaryCurrencyProperties.value,
    tokenSymbol: primaryCurrencyProperties.suffix,
    secondary: showFiat ? secondaryCurrencyDisplay : undefined,
    tokenImage: primaryTokenImage,
    identiconBorder: true
  }), /*#__PURE__*/_react.default.createElement(_tokenList.default, {
    onTokenClick: tokenAddress => {
      onClickAsset(tokenAddress);
      selectTokenEvent();
    }
  }), /*#__PURE__*/_react.default.createElement(_box.default, {
    marginTop: 4
  }, /*#__PURE__*/_react.default.createElement(_box.default, {
    justifyContent: _designSystem.JUSTIFY_CONTENT.CENTER
  }, /*#__PURE__*/_react.default.createElement(_typography.default, {
    color: _designSystem.COLORS.UI4,
    variant: _designSystem.TYPOGRAPHY.H6,
    fontWeight: _designSystem.FONT_WEIGHT.NORMAL
  }, t('missingToken'))), /*#__PURE__*/_react.default.createElement(_importTokenLink.default, {
    isMainnet: isMainnet,
    onClick: () => {
      history.push(_routes.IMPORT_TOKEN_ROUTE);
      addTokenEvent();
    }
  })));
};

AssetList.propTypes = {
  onClickAsset: _propTypes.default.func.isRequired
};
var _default = AssetList;
exports.default = _default;

}).call(this)}).call(this,require('_process'))

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\asset-list\\asset-list.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-token-transaction-base\\confirm-token-transaction-base.container.js", {"../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../../helpers/utils/token-util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\token-util.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","./confirm-token-transaction-base.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-token-transaction-base\\confirm-token-transaction-base.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-token-transaction-base\confirm-token-transaction-base.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _redux = require("redux");

var _reactRouterDom = require("react-router-dom");

var _selectors = require("../../selectors");

var _metamask = require("../../ducks/metamask/metamask");

var _transactions = require("../../helpers/utils/transactions.util");

var _tokenUtil = require("../../helpers/utils/token-util");

var _conversions = require("../../helpers/utils/conversions.util");

var _util = require("../../helpers/utils/util");

var _confirmTokenTransactionBase = _interopRequireDefault(require("./confirm-token-transaction-base.component"));

const mapStateToProps = (state, ownProps) => {
  const {
    match: {
      params = {}
    }
  } = ownProps;
  const {
    id: paramsTransactionId
  } = params;
  const {
    confirmTransaction,
    metamask: {
      currentCurrency,
      conversionRate,
      currentNetworkTxList,
      nativeCurrency
    }
  } = state;
  const {
    txData: {
      id: transactionId,
      txParams: {
        to: tokenAddress,
        data
      } = {}
    } = {}
  } = confirmTransaction;
  const transaction = currentNetworkTxList.find(({
    id
  }) => id === (Number(paramsTransactionId) || transactionId)) || {};
  const {
    ethTransactionTotal,
    fiatTransactionTotal,
    hexMaximumTransactionFee
  } = (0, _selectors.transactionFeeSelector)(state, transaction);
  const tokens = (0, _metamask.getTokens)(state);
  const collectibles = (0, _metamask.getCollectibles)(state);
  const transactionData = (0, _transactions.getTransactionData)(data);
  const toAddress = (0, _tokenUtil.getTokenAddressParam)(transactionData);
  const tokenAmountOrTokenId = (0, _tokenUtil.getTokenValueParam)(transactionData);
  const ethTransactionTotalMaxAmount = Number((0, _conversions.hexWEIToDecETH)(hexMaximumTransactionFee)).toFixed(6);
  const currentToken = tokens === null || tokens === void 0 ? void 0 : tokens.find(({
    address
  }) => (0, _util.isEqualCaseInsensitive)(tokenAddress, address));
  const currentCollectible = collectibles === null || collectibles === void 0 ? void 0 : collectibles.find(({
    address,
    tokenId
  }) => (0, _util.isEqualCaseInsensitive)(tokenAddress, address) && tokenId === tokenAmountOrTokenId);
  let image, tokenId, collectibleName, tokenAmount, contractExchangeRate, title, subtitle;

  if (currentCollectible) {
    ({
      image,
      tokenId,
      name: collectibleName
    } = currentCollectible || {});
    title = collectibleName;
    subtitle = `#${tokenId}`;
  } else if (currentToken) {
    const {
      decimals,
      symbol: tokenSymbol
    } = currentToken || {};
    tokenAmount = transactionData && (0, _tokenUtil.calcTokenAmount)(tokenAmountOrTokenId, decimals).toFixed();
    contractExchangeRate = (0, _selectors.contractExchangeRateSelector)(state);
    title = `${tokenAmount} ${tokenSymbol}`;
  }

  return {
    title,
    subtitle,
    image,
    toAddress,
    tokenAddress,
    tokenAmount,
    currentCurrency,
    conversionRate,
    contractExchangeRate,
    fiatTransactionTotal,
    ethTransactionTotal,
    ethTransactionTotalMaxAmount,
    nativeCurrency
  };
};

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps))(_confirmTokenTransactionBase.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-token-transaction-base\\confirm-token-transaction-base.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-token-transaction-base\\confirm-token-transaction-base.component.js", {"../../components/app/user-preferenced-currency-display":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\user-preferenced-currency-display\\index.js","../../contexts/i18n":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\i18n.js","../../helpers/constants/common":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\common.js","../../helpers/utils/confirm-tx.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\confirm-tx.util.js","../../helpers/utils/conversions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\conversions.util.js","../confirm-transaction-base":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-base\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","bignumber.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\bignumber.js\\bignumber.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-token-transaction-base\confirm-token-transaction-base.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ConfirmTokenTransactionBase;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _bignumber = _interopRequireDefault(require("bignumber.js"));

var _i18n = require("../../contexts/i18n");

var _confirmTransactionBase = _interopRequireDefault(require("../confirm-transaction-base"));

var _userPreferencedCurrencyDisplay = _interopRequireDefault(require("../../components/app/user-preferenced-currency-display"));

var _confirmTx = require("../../helpers/utils/confirm-tx.util");

var _conversions = require("../../helpers/utils/conversions.util");

var _common = require("../../helpers/constants/common");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ConfirmTokenTransactionBase({
  image,
  title,
  subtitle,
  toAddress,
  tokenAddress,
  tokenAmount = '0',
  fiatTransactionTotal,
  ethTransactionTotal,
  ethTransactionTotalMaxAmount,
  contractExchangeRate,
  conversionRate,
  currentCurrency,
  nativeCurrency,
  onEdit
}) {
  const t = (0, _react.useContext)(_i18n.I18nContext);
  const hexWeiValue = (0, _react.useMemo)(() => {
    if (tokenAmount === '0' || !contractExchangeRate) {
      return '0';
    }

    const decimalEthValue = new _bignumber.default(tokenAmount).times(new _bignumber.default(contractExchangeRate ? String(contractExchangeRate) : 0)).toFixed();
    return (0, _conversions.getWeiHexFromDecimalValue)({
      value: decimalEthValue,
      fromCurrency: _common.ETH,
      fromDenomination: _common.ETH
    });
  }, [tokenAmount, contractExchangeRate]);
  const secondaryTotalTextOverride = (0, _react.useMemo)(() => {
    if (typeof contractExchangeRate === 'undefined') {
      return (0, _confirmTx.formatCurrency)(fiatTransactionTotal, currentCurrency);
    }

    const fiatTransactionAmount = (0, _confirmTx.convertTokenToFiat)({
      value: tokenAmount,
      toCurrency: currentCurrency,
      conversionRate,
      contractExchangeRate
    });
    const fiatTotal = (0, _confirmTx.addFiat)(fiatTransactionAmount, fiatTransactionTotal);
    const roundedFiatTotal = (0, _confirmTx.roundExponential)(fiatTotal);
    return (0, _confirmTx.formatCurrency)(roundedFiatTotal, currentCurrency);
  }, [currentCurrency, conversionRate, contractExchangeRate, fiatTransactionTotal, tokenAmount]);

  const subtitleComponent = () => {
    if (contractExchangeRate === undefined && subtitle === undefined) {
      return /*#__PURE__*/_react.default.createElement("span", null, t('noConversionRateAvailable'));
    }

    if (subtitle) {
      return /*#__PURE__*/_react.default.createElement("span", null, subtitle);
    }

    return /*#__PURE__*/_react.default.createElement(_userPreferencedCurrencyDisplay.default, {
      value: hexWeiValue,
      type: _common.PRIMARY,
      showEthLogo: true,
      hideLabel: true
    });
  };

  return /*#__PURE__*/_react.default.createElement(_confirmTransactionBase.default, {
    toAddress: toAddress,
    image: image,
    onEdit: onEdit,
    identiconAddress: tokenAddress,
    title: title,
    subtitleComponent: subtitleComponent(),
    primaryTotalTextOverride: `${title} + ${ethTransactionTotal} ${nativeCurrency}`,
    primaryTotalTextOverrideMaxAmount: `${title} + ${ethTransactionTotalMaxAmount} ${nativeCurrency}`,
    secondaryTotalTextOverride: secondaryTotalTextOverride
  });
}

ConfirmTokenTransactionBase.propTypes = {
  image: _propTypes.default.string,
  title: _propTypes.default.string,
  subtitle: _propTypes.default.string,
  tokenAddress: _propTypes.default.string,
  toAddress: _propTypes.default.string,
  tokenAmount: _propTypes.default.string,
  fiatTransactionTotal: _propTypes.default.string,
  ethTransactionTotal: _propTypes.default.string,
  contractExchangeRate: _propTypes.default.number,
  conversionRate: _propTypes.default.number,
  currentCurrency: _propTypes.default.string,
  onEdit: _propTypes.default.func,
  nativeCurrency: _propTypes.default.string,
  ethTransactionTotalMaxAmount: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-token-transaction-base\\confirm-token-transaction-base.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-deploy-contract\\confirm-deploy-contract.container.js", {"./confirm-deploy-contract.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-deploy-contract\\confirm-deploy-contract.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-deploy-contract\confirm-deploy-contract.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _confirmDeployContract = _interopRequireDefault(require("./confirm-deploy-contract.component"));

const mapStateToProps = state => {
  const {
    confirmTransaction: {
      txData
    } = {}
  } = state;
  return {
    txData
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps)(_confirmDeployContract.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-deploy-contract\\confirm-deploy-contract.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-ether\\confirm-send-ether.container.js", {"../../ducks/confirm-transaction/confirm-transaction.duck":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\confirm-transaction\\confirm-transaction.duck.js","../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","./confirm-send-ether.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-ether\\confirm-send-ether.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-send-ether\confirm-send-ether.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _redux = require("redux");

var _reactRouterDom = require("react-router-dom");

var _send = require("../../ducks/send");

var _confirmTransaction = require("../../ducks/confirm-transaction/confirm-transaction.duck");

var _confirmSendEther = _interopRequireDefault(require("./confirm-send-ether.component"));

const mapStateToProps = state => {
  const {
    confirmTransaction: {
      txData: {
        txParams
      } = {}
    }
  } = state;
  return {
    txParams
  };
};

const mapDispatchToProps = dispatch => {
  return {
    editTransaction: async txData => {
      const {
        id
      } = txData;
      await dispatch((0, _send.editTransaction)(_send.ASSET_TYPES.NATIVE, id.toString()));
      dispatch((0, _confirmTransaction.clearConfirmTransaction)());
    }
  };
};

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(_confirmSendEther.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-ether\\confirm-send-ether.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-token\\confirm-send-token.container.js", {"../../ducks/confirm-transaction/confirm-transaction.duck":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\confirm-transaction\\confirm-transaction.duck.js","../../ducks/send":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\send\\index.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./confirm-send-token.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-token\\confirm-send-token.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-send-token\confirm-send-token.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _redux = require("redux");

var _reactRouterDom = require("react-router-dom");

var _confirmTransaction = require("../../ducks/confirm-transaction/confirm-transaction.duck");

var _actions = require("../../store/actions");

var _send = require("../../ducks/send");

var _selectors = require("../../selectors");

var _confirmSendToken = _interopRequireDefault(require("./confirm-send-token.component"));

const mapStateToProps = state => {
  const {
    tokenAmount
  } = (0, _selectors.sendTokenTokenAmountAndToAddressSelector)(state);
  return {
    tokenAmount
  };
};

const mapDispatchToProps = dispatch => {
  return {
    editTransaction: ({
      txData,
      tokenData,
      tokenProps: assetDetails
    }) => {
      const {
        id
      } = txData;
      dispatch((0, _send.editTransaction)(_send.ASSET_TYPES.TOKEN, id.toString(), tokenData, assetDetails));
      dispatch((0, _confirmTransaction.clearConfirmTransaction)());
      dispatch((0, _actions.showSendTokenPage)());
    }
  };
};

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(_confirmSendToken.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-send-token\\confirm-send-token.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-decrypt-message\\confirm-decrypt-message.container.js", {"../../ducks/confirm-transaction/confirm-transaction.duck":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\confirm-transaction\\confirm-transaction.duck.js","../../ducks/history/history":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\history\\history.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./confirm-decrypt-message.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-decrypt-message\\confirm-decrypt-message.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-decrypt-message\confirm-decrypt-message.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _redux = require("redux");

var _reactRouterDom = require("react-router-dom");

var _actions = require("../../store/actions");

var _selectors = require("../../selectors");

var _confirmTransaction = require("../../ducks/confirm-transaction/confirm-transaction.duck");

var _history = require("../../ducks/history/history");

var _confirmDecryptMessage = _interopRequireDefault(require("./confirm-decrypt-message.component"));

function mapStateToProps(state) {
  const {
    metamask: {
      subjectMetadata = {}
    }
  } = state;
  const unconfirmedTransactions = (0, _selectors.unconfirmedTransactionsListSelector)(state);
  const txData = unconfirmedTransactions[0];
  const {
    msgParams: {
      from
    }
  } = txData;
  const fromAccount = (0, _selectors.getTargetAccountWithSendEtherInfo)(state, from);
  return {
    txData,
    subjectMetadata,
    fromAccount,
    requester: null,
    requesterAddress: null,
    conversionRate: (0, _selectors.conversionRateSelector)(state),
    mostRecentOverviewPage: (0, _history.getMostRecentOverviewPage)(state)
  };
}

function mapDispatchToProps(dispatch) {
  return {
    goHome: () => dispatch((0, _actions.goHome)()),
    clearConfirmTransaction: () => dispatch((0, _confirmTransaction.clearConfirmTransaction)()),
    decryptMessage: (msgData, event) => {
      const params = msgData.msgParams;
      params.metamaskId = msgData.id;
      event.stopPropagation(event);
      return dispatch((0, _actions.decryptMsg)(params));
    },
    cancelDecryptMessage: (msgData, event) => {
      event.stopPropagation(event);
      return dispatch((0, _actions.cancelDecryptMsg)(msgData));
    },
    decryptMessageInline: (msgData, event) => {
      const params = msgData.msgParams;
      params.metamaskId = msgData.id;
      event.stopPropagation(event);
      return dispatch((0, _actions.decryptMsgInline)(params));
    }
  };
}

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(_confirmDecryptMessage.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-decrypt-message\\confirm-decrypt-message.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-switch\\confirm-transaction-switch.container.js", {"../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","./confirm-transaction-switch.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-switch\\confirm-transaction-switch.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-transaction-switch\confirm-transaction-switch.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _selectors = require("../../selectors");

var _confirmTransactionSwitch = _interopRequireDefault(require("./confirm-transaction-switch.component"));

const mapStateToProps = (state, ownProps) => {
  const {
    metamask: {
      unapprovedTxs
    }
  } = state;
  const {
    match: {
      params = {},
      url
    }
  } = ownProps;
  const urlId = (url === null || url === void 0 ? void 0 : url.match(/\d+/u)) && (url === null || url === void 0 ? void 0 : url.match(/\d+/u)[0]);
  const {
    id: paramsId
  } = params;
  const transactionId = paramsId || urlId;
  const unconfirmedTransactions = (0, _selectors.unconfirmedTransactionsListSelector)(state);
  const totalUnconfirmed = unconfirmedTransactions.length;
  const transaction = totalUnconfirmed ? unapprovedTxs[transactionId] || unconfirmedTransactions[0] : {};
  return {
    txData: transaction
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps)(_confirmTransactionSwitch.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-switch\\confirm-transaction-switch.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-approve\\confirm-approve.js", {"../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../shared/modules/contract-utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\contract-utils.js","../../components/app/advanced-gas-fee-popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\advanced-gas-fee-popover\\index.js","../../components/app/edit-gas-fee-popover":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-fee-popover\\index.js","../../components/app/edit-gas-popover/edit-gas-popover.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\edit-gas-popover\\edit-gas-popover.component.js","../../components/ui/loading-screen":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\loading-screen\\index.js","../../contexts/gasFee":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\gasFee.js","../../contexts/transaction-modal":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\contexts\\transaction-modal.js","../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../helpers/utils/token-util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\token-util.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../hooks/useApproveTransaction":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useApproveTransaction.js","../../hooks/useTokenTracker":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useTokenTracker.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../selectors/transactions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\transactions.js","../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","../confirm-transaction-base":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-base\\index.js","./confirm-approve-content":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-approve\\confirm-approve-content\\index.js","./confirm-approve.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-approve\\confirm-approve.util.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-approve\confirm-approve.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ConfirmApprove;

var _react = _interopRequireWildcard(require("react"));

var _reactRedux = require("react-redux");

var _reactRouterDom = require("react-router-dom");

var _confirmTransactionBase = _interopRequireDefault(require("../confirm-transaction-base"));

var _gas = require("../../../shared/constants/gas");

var _actions = require("../../store/actions");

var _transactions = require("../../helpers/utils/transactions.util");

var _tokenUtil = require("../../helpers/utils/token-util");

var _contractUtils = require("../../../shared/modules/contract-utils");

var _gasFee = require("../../contexts/gasFee");

var _transactionModal = require("../../contexts/transaction-modal");

var _useTokenTracker = require("../../hooks/useTokenTracker");

var _metamask = require("../../ducks/metamask/metamask");

var _selectors = require("../../selectors");

var _useApproveTransaction = require("../../hooks/useApproveTransaction");

var _transactions2 = require("../../selectors/transactions");

var _advancedGasFeePopover = _interopRequireDefault(require("../../components/app/advanced-gas-fee-popover"));

var _editGasFeePopover = _interopRequireDefault(require("../../components/app/edit-gas-fee-popover"));

var _editGasPopover = _interopRequireDefault(require("../../components/app/edit-gas-popover/edit-gas-popover.component"));

var _loadingScreen = _interopRequireDefault(require("../../components/ui/loading-screen"));

var _util = require("../../helpers/utils/util");

var _confirmApprove = require("./confirm-approve.util");

var _confirmApproveContent = _interopRequireDefault(require("./confirm-approve-content"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const isAddressLedgerByFromAddress = address => state => {
  return (0, _metamask.isAddressLedger)(state, address);
};

function ConfirmApprove() {
  var _tokensWithBalances$;

  const dispatch = (0, _reactRedux.useDispatch)();
  const {
    id: paramsTransactionId
  } = (0, _reactRouterDom.useParams)();
  const {
    id: transactionId,
    txParams: {
      to: tokenAddress,
      data,
      from
    } = {}
  } = (0, _reactRedux.useSelector)(_selectors.txDataSelector);
  const currentCurrency = (0, _reactRedux.useSelector)(_selectors.getCurrentCurrency);
  const nativeCurrency = (0, _reactRedux.useSelector)(_metamask.getNativeCurrency);
  const currentNetworkTxList = (0, _reactRedux.useSelector)(_transactions2.currentNetworkTxListSelector);
  const subjectMetadata = (0, _reactRedux.useSelector)(_selectors.getSubjectMetadata);
  const tokens = (0, _reactRedux.useSelector)(_metamask.getTokens);
  const useNonceField = (0, _reactRedux.useSelector)(_selectors.getUseNonceField);
  const nextNonce = (0, _reactRedux.useSelector)(_selectors.getNextSuggestedNonce);
  const customNonceValue = (0, _reactRedux.useSelector)(_selectors.getCustomNonceValue);
  const chainId = (0, _reactRedux.useSelector)(_selectors.getCurrentChainId);
  const rpcPrefs = (0, _reactRedux.useSelector)(_selectors.getRpcPrefsForCurrentProvider);
  const isMultiLayerFeeNetwork = (0, _reactRedux.useSelector)(_selectors.getIsMultiLayerFeeNetwork);
  const networkAndAccountSupports1559 = (0, _reactRedux.useSelector)(_selectors.checkNetworkAndAccountSupports1559);
  const fromAddressIsLedger = (0, _reactRedux.useSelector)(isAddressLedgerByFromAddress(from));
  const transaction = currentNetworkTxList.find(({
    id
  }) => id === (Number(paramsTransactionId) || transactionId)) || {};
  const {
    ethTransactionTotal,
    fiatTransactionTotal,
    hexTransactionTotal
  } = (0, _reactRedux.useSelector)(state => (0, _selectors.transactionFeeSelector)(state, transaction));
  const eip1559V2Enabled = (0, _reactRedux.useSelector)(_selectors.getEIP1559V2Enabled);
  const supportsEIP1559V2 = eip1559V2Enabled && networkAndAccountSupports1559;
  const currentToken = tokens && tokens.find(({
    address
  }) => (0, _util.isEqualCaseInsensitive)(tokenAddress, address)) || {
    address: tokenAddress
  };
  const {
    tokensWithBalances
  } = (0, _useTokenTracker.useTokenTracker)([currentToken]);
  const tokenTrackerBalance = ((_tokensWithBalances$ = tokensWithBalances[0]) === null || _tokensWithBalances$ === void 0 ? void 0 : _tokensWithBalances$.balance) || '';
  const tokenSymbol = currentToken === null || currentToken === void 0 ? void 0 : currentToken.symbol;
  const decimals = Number(currentToken === null || currentToken === void 0 ? void 0 : currentToken.decimals);
  const tokenImage = currentToken === null || currentToken === void 0 ? void 0 : currentToken.image;
  const tokenData = (0, _transactions.getTransactionData)(data);
  const tokenValue = (0, _tokenUtil.getTokenValueParam)(tokenData);
  const toAddress = (0, _tokenUtil.getTokenAddressParam)(tokenData);
  const tokenAmount = tokenData && (0, _tokenUtil.calcTokenAmount)(tokenValue, decimals).toString(10);
  const [customPermissionAmount, setCustomPermissionAmount] = (0, _react.useState)('');
  const previousTokenAmount = (0, _react.useRef)(tokenAmount);
  const {
    approveTransaction,
    showCustomizeGasPopover,
    closeCustomizeGasPopover
  } = (0, _useApproveTransaction.useApproveTransaction)();
  (0, _react.useEffect)(() => {
    if (customPermissionAmount && previousTokenAmount.current !== tokenAmount) {
      setCustomPermissionAmount(tokenAmount);
    }

    previousTokenAmount.current = tokenAmount;
  }, [customPermissionAmount, tokenAmount]);
  const [submitWarning, setSubmitWarning] = (0, _react.useState)('');
  const prevNonce = (0, _react.useRef)(nextNonce);
  const prevCustomNonce = (0, _react.useRef)(customNonceValue);
  (0, _react.useEffect)(() => {
    if (prevNonce.current !== nextNonce || prevCustomNonce.current !== customNonceValue) {
      if (nextNonce !== null && customNonceValue > nextNonce) {
        setSubmitWarning(`Nonce is higher than suggested nonce of ${nextNonce}`);
      } else {
        setSubmitWarning('');
      }
    }

    prevCustomNonce.current = customNonceValue;
    prevNonce.current = nextNonce;
  }, [customNonceValue, nextNonce]);
  const [isContract, setIsContract] = (0, _react.useState)(false);
  const checkIfContract = (0, _react.useCallback)(async () => {
    const {
      isContractAddress
    } = await (0, _contractUtils.readAddressAsContract)(global.eth, toAddress);
    setIsContract(isContractAddress);
  }, [setIsContract, toAddress]);
  (0, _react.useEffect)(() => {
    checkIfContract();
  }, [checkIfContract]);
  const {
    origin
  } = transaction;
  const formattedOrigin = origin || '';
  const {
    iconUrl: siteImage = ''
  } = subjectMetadata[origin] || {};
  const tokensText = `${Number(tokenAmount)} ${tokenSymbol}`;
  const tokenBalance = tokenTrackerBalance ? (0, _tokenUtil.calcTokenAmount)(tokenTrackerBalance, decimals).toString(10) : '';
  const customData = customPermissionAmount ? (0, _confirmApprove.getCustomTxParamsData)(data, {
    customPermissionAmount,
    decimals
  }) : null;
  return tokenSymbol === undefined ? /*#__PURE__*/_react.default.createElement(_loadingScreen.default, null) : /*#__PURE__*/_react.default.createElement(_gasFee.GasFeeContextProvider, {
    transaction: transaction
  }, /*#__PURE__*/_react.default.createElement(_confirmTransactionBase.default, {
    toAddress: toAddress,
    identiconAddress: tokenAddress,
    showAccountInHeader: true,
    title: tokensText,
    contentComponent: /*#__PURE__*/_react.default.createElement(_transactionModal.TransactionModalContextProvider, null, /*#__PURE__*/_react.default.createElement(_confirmApproveContent.default, {
      decimals: decimals,
      siteImage: siteImage,
      setCustomAmount: setCustomPermissionAmount,
      customTokenAmount: String(customPermissionAmount),
      tokenAmount: tokenAmount,
      origin: formattedOrigin,
      tokenSymbol: tokenSymbol,
      tokenImage: tokenImage,
      tokenBalance: tokenBalance,
      showCustomizeGasModal: approveTransaction,
      showEditApprovalPermissionModal: ({
        /* eslint-disable no-shadow */
        customTokenAmount,
        decimals,
        origin,
        setCustomAmount,
        tokenAmount,
        tokenBalance,
        tokenSymbol
        /* eslint-enable no-shadow */

      }) => dispatch((0, _actions.showModal)({
        name: 'EDIT_APPROVAL_PERMISSION',
        customTokenAmount,
        decimals,
        origin,
        setCustomAmount,
        tokenAmount,
        tokenBalance,
        tokenSymbol
      })),
      data: customData || data,
      toAddress: toAddress,
      currentCurrency: currentCurrency,
      nativeCurrency: nativeCurrency,
      ethTransactionTotal: ethTransactionTotal,
      fiatTransactionTotal: fiatTransactionTotal,
      hexTransactionTotal: hexTransactionTotal,
      useNonceField: useNonceField,
      nextNonce: nextNonce,
      customNonceValue: customNonceValue,
      updateCustomNonce: value => {
        dispatch((0, _actions.updateCustomNonce)(value));
      },
      getNextNonce: () => dispatch((0, _actions.getNextNonce)()),
      showCustomizeNonceModal: ({
        /* eslint-disable no-shadow */
        useNonceField,
        nextNonce,
        customNonceValue,
        updateCustomNonce,
        getNextNonce
        /* eslint-disable no-shadow */

      }) => dispatch((0, _actions.showModal)({
        name: 'CUSTOMIZE_NONCE',
        useNonceField,
        nextNonce,
        customNonceValue,
        updateCustomNonce,
        getNextNonce
      })),
      warning: submitWarning,
      txData: transaction,
      fromAddressIsLedger: fromAddressIsLedger,
      chainId: chainId,
      rpcPrefs: rpcPrefs,
      isContract: isContract,
      isMultiLayerFeeNetwork: isMultiLayerFeeNetwork,
      supportsEIP1559V2: supportsEIP1559V2
    }), showCustomizeGasPopover && !supportsEIP1559V2 && /*#__PURE__*/_react.default.createElement(_editGasPopover.default, {
      onClose: closeCustomizeGasPopover,
      mode: _gas.EDIT_GAS_MODES.MODIFY_IN_PLACE,
      transaction: transaction
    }), supportsEIP1559V2 && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_editGasFeePopover.default, null), /*#__PURE__*/_react.default.createElement(_advancedGasFeePopover.default, null))),
    hideSenderToRecipient: true,
    customTxParamsData: customData
  }));
}


      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-approve\\confirm-approve.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-encryption-public-key\\confirm-encryption-public-key.container.js", {"../../ducks/confirm-transaction/confirm-transaction.duck":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\confirm-transaction\\confirm-transaction.duck.js","../../ducks/history/history":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\history\\history.js","../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","./confirm-encryption-public-key.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-encryption-public-key\\confirm-encryption-public-key.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-encryption-public-key\confirm-encryption-public-key.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactRedux = require("react-redux");

var _redux = require("redux");

var _reactRouterDom = require("react-router-dom");

var _actions = require("../../store/actions");

var _selectors = require("../../selectors");

var _confirmTransaction = require("../../ducks/confirm-transaction/confirm-transaction.duck");

var _history = require("../../ducks/history/history");

var _metamask = require("../../ducks/metamask/metamask");

var _confirmEncryptionPublicKey = _interopRequireDefault(require("./confirm-encryption-public-key.component"));

function mapStateToProps(state) {
  const {
    metamask: {
      subjectMetadata = {}
    }
  } = state;
  const unconfirmedTransactions = (0, _selectors.unconfirmedTransactionsListSelector)(state);
  const txData = unconfirmedTransactions[0];
  const {
    msgParams: from
  } = txData;
  const fromAccount = (0, _selectors.getTargetAccountWithSendEtherInfo)(state, from);
  return {
    txData,
    subjectMetadata,
    fromAccount,
    requester: null,
    requesterAddress: null,
    conversionRate: (0, _selectors.conversionRateSelector)(state),
    mostRecentOverviewPage: (0, _history.getMostRecentOverviewPage)(state),
    nativeCurrency: (0, _metamask.getNativeCurrency)(state)
  };
}

function mapDispatchToProps(dispatch) {
  return {
    goHome: () => dispatch((0, _actions.goHome)()),
    clearConfirmTransaction: () => dispatch((0, _confirmTransaction.clearConfirmTransaction)()),
    encryptionPublicKey: (msgData, event) => {
      const params = {
        data: msgData.msgParams,
        metamaskId: msgData.id
      };
      event.stopPropagation();
      return dispatch((0, _actions.encryptionPublicKeyMsg)(params));
    },
    cancelEncryptionPublicKey: (msgData, event) => {
      event.stopPropagation();
      return dispatch((0, _actions.cancelEncryptionPublicKeyMsg)(msgData));
    }
  };
}

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps))(_confirmEncryptionPublicKey.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-encryption-public-key\\confirm-encryption-public-key.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\signature-request\\index.js", {"./signature-request.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\signature-request\\signature-request.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\signature-request\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _signatureRequest.default;
  }
});

var _signatureRequest = _interopRequireDefault(require("./signature-request.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\signature-request\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\signature-request-original\\index.js", {"./signature-request-original.container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\signature-request-original\\signature-request-original.container.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\signature-request-original\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _signatureRequestOriginal.default;
  }
});

var _signatureRequestOriginal = _interopRequireDefault(require("./signature-request-original.container"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\signature-request-original\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-base\\confirm-transaction-base.container.js", {"../../../shared/constants/gas":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\gas.js","../../../shared/modules/hexstring-utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\hexstring-utils.js","../../../shared/modules/transaction.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\modules\\transaction.utils.js","../../ducks/app/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\app\\app.js","../../ducks/confirm-transaction/confirm-transaction.duck":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\confirm-transaction\\confirm-transaction.duck.js","../../ducks/history/history":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\history\\history.js","../../ducks/metamask/metamask":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\metamask\\metamask.js","../../helpers/utils/transactions.util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\transactions.util.js","../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../selectors":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\selectors\\index.js","../../store/actions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\store\\actions.js","../send/send.utils":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\send\\send.utils.js","./confirm-transaction-base.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-base\\confirm-transaction-base.component.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@babel/runtime/helpers/objectWithoutProperties":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\objectWithoutProperties.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js","react-router-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-router-dom\\index.js","redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\redux\\lib\\redux.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\pages\confirm-transaction-base\confirm-transaction-base.container.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapDispatchToProps = exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactRedux = require("react-redux");

var _redux = require("redux");

var _reactRouterDom = require("react-router-dom");

var _confirmTransaction = require("../../ducks/confirm-transaction/confirm-transaction.duck");

var _actions = require("../../store/actions");

var _send = require("../send/send.utils");

var _util = require("../../helpers/utils/util");

var _selectors = require("../../selectors");

var _history = require("../../ducks/history/history");

var _metamask = require("../../ducks/metamask/metamask");

var _transaction = require("../../../shared/modules/transaction.utils");

var _hexstringUtils = require("../../../shared/modules/hexstring-utils");

var _app = require("../../ducks/app/app");

var _transactions = require("../../helpers/utils/transactions.util");

var _gas = require("../../../shared/constants/gas");

var _confirmTransactionBase = _interopRequireDefault(require("./confirm-transaction-base.component"));

const _excluded = ["cancelAllTransactions", "updateTransactionGasFees"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

let customNonceValue = '';

const customNonceMerge = txData => customNonceValue ? _objectSpread(_objectSpread({}, txData), {}, {
  customNonceValue
}) : txData;

const mapStateToProps = (state, ownProps) => {
  var _identities$toAddress, _casedTokenList$toAdd, _allCollectibleContra;

  const {
    toAddress: propsToAddress,
    customTxParamsData,
    match: {
      params = {}
    }
  } = ownProps;
  const {
    id: paramsTransactionId
  } = params;
  const isMainnet = (0, _selectors.getIsMainnet)(state);
  const isGasEstimatesLoading = (0, _metamask.getIsGasEstimatesLoading)(state);
  const gasLoadingAnimationIsShowing = (0, _app.getGasLoadingAnimationIsShowing)(state);
  const {
    confirmTransaction,
    metamask
  } = state;
  const {
    ensResolutionsByAddress,
    conversionRate,
    identities,
    addressBook,
    network,
    unapprovedTxs,
    nextNonce,
    allCollectibleContracts,
    selectedAddress,
    provider: {
      chainId
    }
  } = metamask;
  const {
    tokenData,
    txData,
    tokenProps,
    nonce
  } = confirmTransaction;
  const {
    txParams = {},
    id: transactionId,
    type
  } = txData;
  const transaction = Object.values(unapprovedTxs).find(({
    id
  }) => id === (transactionId || Number(paramsTransactionId))) || {};
  const {
    from: fromAddress,
    to: txParamsToAddress,
    gasPrice,
    gas: gasLimit,
    value: amount,
    data
  } = transaction && transaction.txParams || txParams;
  const accounts = (0, _selectors.getMetaMaskAccounts)(state);
  const {
    balance
  } = accounts[fromAddress];
  const {
    name: fromName
  } = identities[fromAddress];
  const toAddress = propsToAddress || txParamsToAddress;
  const tokenList = (0, _selectors.getTokenList)(state);
  const useTokenDetection = (0, _selectors.getUseTokenDetection)(state);
  const casedTokenList = useTokenDetection ? tokenList : Object.keys(tokenList).reduce((acc, base) => {
    return _objectSpread(_objectSpread({}, acc), {}, {
      [base.toLowerCase()]: tokenList[base]
    });
  }, {});
  const toName = ((_identities$toAddress = identities[toAddress]) === null || _identities$toAddress === void 0 ? void 0 : _identities$toAddress.name) || ((_casedTokenList$toAdd = casedTokenList[toAddress]) === null || _casedTokenList$toAdd === void 0 ? void 0 : _casedTokenList$toAdd.name) || (0, _util.shortenAddress)((0, _hexstringUtils.toChecksumHexAddress)(toAddress));
  const checksummedAddress = (0, _hexstringUtils.toChecksumHexAddress)(toAddress);
  const addressBookObject = addressBook && addressBook[chainId] && addressBook[chainId][checksummedAddress];
  const toEns = ensResolutionsByAddress[checksummedAddress] || '';
  const toNickname = addressBookObject ? addressBookObject.name : '';
  const transactionStatus = transaction ? transaction.status : '';
  const supportsEIP1559 = (0, _selectors.checkNetworkAndAccountSupports1559)(state) && !(0, _transactions.isLegacyTransaction)(txParams);
  const {
    hexTransactionAmount,
    hexMinimumTransactionFee,
    hexMaximumTransactionFee,
    hexTransactionTotal,
    gasEstimationObject
  } = (0, _selectors.transactionFeeSelector)(state, transaction);

  if (transaction && transaction.simulationFails) {
    txData.simulationFails = transaction.simulationFails;
  }

  const currentNetworkUnapprovedTxs = Object.keys(unapprovedTxs).filter(key => (0, _transaction.transactionMatchesNetwork)(unapprovedTxs[key], chainId, network)).reduce((acc, key) => _objectSpread(_objectSpread({}, acc), {}, {
    [key]: unapprovedTxs[key]
  }), {});
  const unapprovedTxCount = (0, _util.valuesFor)(currentNetworkUnapprovedTxs).length;
  const insufficientBalance = !(0, _send.isBalanceSufficient)({
    amount,
    gasTotal: (0, _send.calcGasTotal)(gasLimit, gasPrice),
    balance,
    conversionRate
  });
  const methodData = (0, _selectors.getKnownMethodData)(state, data) || {};

  let fullTxData = _objectSpread(_objectSpread({}, txData), transaction);

  if (customTxParamsData) {
    fullTxData = _objectSpread(_objectSpread({}, fullTxData), {}, {
      txParams: _objectSpread(_objectSpread({}, fullTxData.txParams), {}, {
        data: customTxParamsData
      })
    });
  }

  const isCollectibleTransfer = Boolean(allCollectibleContracts === null || allCollectibleContracts === void 0 ? void 0 : (_allCollectibleContra = allCollectibleContracts[selectedAddress]) === null || _allCollectibleContra === void 0 ? void 0 : _allCollectibleContra[chainId].find(contract => {
    return (0, _util.isEqualCaseInsensitive)(contract.address, fullTxData.txParams.to);
  }));
  customNonceValue = (0, _selectors.getCustomNonceValue)(state);
  const isEthGasPrice = (0, _selectors.getIsEthGasPriceFetched)(state);
  const noGasPrice = !supportsEIP1559 && (0, _selectors.getNoGasPriceFetched)(state);
  const {
    useNativeCurrencyAsPrimaryCurrency
  } = (0, _selectors.getPreferences)(state);
  const gasFeeIsCustom = fullTxData.userFeeLevel === _gas.CUSTOM_GAS_ESTIMATE || (0, _transaction.txParamsAreDappSuggested)(fullTxData);
  const fromAddressIsLedger = (0, _metamask.isAddressLedger)(state, fromAddress);
  const nativeCurrency = (0, _metamask.getNativeCurrency)(state);
  const hardwareWalletRequiresConnection = (0, _selectors.doesAddressRequireLedgerHidConnection)(state, fromAddress);
  const isMultiLayerFeeNetwork = (0, _selectors.getIsMultiLayerFeeNetwork)(state);
  const eip1559V2Enabled = (0, _selectors.getEIP1559V2Enabled)(state);
  return {
    balance,
    fromAddress,
    fromName,
    toAddress,
    toEns,
    toName,
    toNickname,
    hexTransactionAmount,
    hexMinimumTransactionFee,
    hexMaximumTransactionFee,
    hexTransactionTotal,
    txData: fullTxData,
    tokenData,
    methodData,
    tokenProps,
    conversionRate,
    transactionStatus,
    nonce,
    unapprovedTxs,
    unapprovedTxCount,
    currentNetworkUnapprovedTxs,
    customGas: {
      gasLimit,
      gasPrice
    },
    advancedInlineGasShown: (0, _selectors.getAdvancedInlineGasShown)(state),
    useNonceField: (0, _selectors.getUseNonceField)(state),
    customNonceValue,
    insufficientBalance,
    hideSubtitle: !(0, _selectors.getShouldShowFiat)(state) && !isCollectibleTransfer,
    hideFiatConversion: !(0, _selectors.getShouldShowFiat)(state),
    type,
    nextNonce,
    mostRecentOverviewPage: (0, _history.getMostRecentOverviewPage)(state),
    isMainnet,
    isEthGasPrice,
    noGasPrice,
    supportsEIP1559,
    gasIsLoading: isGasEstimatesLoading || gasLoadingAnimationIsShowing,
    useNativeCurrencyAsPrimaryCurrency,
    maxFeePerGas: gasEstimationObject.maxFeePerGas,
    maxPriorityFeePerGas: gasEstimationObject.maxPriorityFeePerGas,
    baseFeePerGas: gasEstimationObject.baseFeePerGas,
    gasFeeIsCustom,
    showLedgerSteps: fromAddressIsLedger,
    nativeCurrency,
    hardwareWalletRequiresConnection,
    isMultiLayerFeeNetwork,
    chainId,
    eip1559V2Enabled
  };
};

const mapDispatchToProps = dispatch => {
  return {
    tryReverseResolveAddress: address => {
      return dispatch((0, _actions.tryReverseResolveAddress)(address));
    },
    updateCustomNonce: value => {
      customNonceValue = value;
      dispatch((0, _actions.updateCustomNonce)(value));
    },
    clearConfirmTransaction: () => dispatch((0, _confirmTransaction.clearConfirmTransaction)()),
    showTransactionConfirmedModal: ({
      onSubmit
    }) => {
      return dispatch((0, _actions.showModal)({
        name: 'TRANSACTION_CONFIRMED',
        onSubmit
      }));
    },
    showRejectTransactionsConfirmationModal: ({
      onSubmit,
      unapprovedTxCount
    }) => {
      return dispatch((0, _actions.showModal)({
        name: 'REJECT_TRANSACTIONS',
        onSubmit,
        unapprovedTxCount
      }));
    },
    cancelTransaction: ({
      id
    }) => dispatch((0, _actions.cancelTx)({
      id
    })),
    cancelAllTransactions: txList => dispatch((0, _actions.cancelTxs)(txList)),
    sendTransaction: txData => dispatch((0, _actions.updateAndApproveTx)(customNonceMerge(txData))),
    getNextNonce: () => dispatch((0, _actions.getNextNonce)()),
    setDefaultHomeActiveTabName: tabName => dispatch((0, _actions.setDefaultHomeActiveTabName)(tabName)),
    updateTransactionGasFees: gasFees => {
      dispatch((0, _metamask.updateTransactionGasFees)(_objectSpread(_objectSpread({}, gasFees), {}, {
        expectHexWei: true
      })));
    }
  };
};

exports.mapDispatchToProps = mapDispatchToProps;

const mergeProps = (stateProps, dispatchProps, ownProps) => {
  const {
    txData,
    unapprovedTxs
  } = stateProps;
  const {
    cancelAllTransactions: dispatchCancelAllTransactions,
    updateTransactionGasFees: dispatchUpdateTransactionGasFees
  } = dispatchProps,
        otherDispatchProps = (0, _objectWithoutProperties2.default)(dispatchProps, _excluded);
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, stateProps), otherDispatchProps), ownProps), {}, {
    cancelAllTransactions: () => dispatchCancelAllTransactions((0, _util.valuesFor)(unapprovedTxs)),
    updateGasAndCalculate: ({
      gasLimit,
      gasPrice
    }) => {
      dispatchUpdateTransactionGasFees({
        gasLimit,
        gasPrice,
        transaction: txData
      });
    }
  });
};

var _default = (0, _redux.compose)(_reactRouterDom.withRouter, (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps))(_confirmTransactionBase.default);

exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\pages\\confirm-transaction-base\\confirm-transaction-base.container.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\TextField\\index.js", {"./TextField":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\TextField\\TextField.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@material-ui\core\TextField\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _TextField.default;
  }
});

var _TextField = _interopRequireDefault(require("./TextField"));
      };
    };
  }
}, {package:"@material-ui\\core",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\TextField\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\index.js", {"./colorManipulator":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\colorManipulator.js","./createMuiStrictModeTheme":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\createMuiStrictModeTheme.js","./createMuiTheme":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\createMuiTheme.js","./createStyles":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\createStyles.js","./makeStyles":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\makeStyles.js","./responsiveFontSizes":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\responsiveFontSizes.js","./styled":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\styled.js","./transitions":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\transitions.js","./useTheme":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\useTheme.js","./withStyles":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\withStyles.js","./withTheme":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\withTheme.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@material-ui/styles":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\styles\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@material-ui\core\styles\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  createMuiTheme: true,
  unstable_createMuiStrictModeTheme: true,
  createStyles: true,
  makeStyles: true,
  responsiveFontSizes: true,
  styled: true,
  useTheme: true,
  withStyles: true,
  withTheme: true,
  createGenerateClassName: true,
  jssPreset: true,
  ServerStyleSheets: true,
  StylesProvider: true,
  MuiThemeProvider: true,
  ThemeProvider: true
};
Object.defineProperty(exports, "createMuiTheme", {
  enumerable: true,
  get: function get() {
    return _createMuiTheme.default;
  }
});
Object.defineProperty(exports, "unstable_createMuiStrictModeTheme", {
  enumerable: true,
  get: function get() {
    return _createMuiStrictModeTheme.default;
  }
});
Object.defineProperty(exports, "createStyles", {
  enumerable: true,
  get: function get() {
    return _createStyles.default;
  }
});
Object.defineProperty(exports, "makeStyles", {
  enumerable: true,
  get: function get() {
    return _makeStyles.default;
  }
});
Object.defineProperty(exports, "responsiveFontSizes", {
  enumerable: true,
  get: function get() {
    return _responsiveFontSizes.default;
  }
});
Object.defineProperty(exports, "styled", {
  enumerable: true,
  get: function get() {
    return _styled.default;
  }
});
Object.defineProperty(exports, "useTheme", {
  enumerable: true,
  get: function get() {
    return _useTheme.default;
  }
});
Object.defineProperty(exports, "withStyles", {
  enumerable: true,
  get: function get() {
    return _withStyles.default;
  }
});
Object.defineProperty(exports, "withTheme", {
  enumerable: true,
  get: function get() {
    return _withTheme.default;
  }
});
Object.defineProperty(exports, "createGenerateClassName", {
  enumerable: true,
  get: function get() {
    return _styles.createGenerateClassName;
  }
});
Object.defineProperty(exports, "jssPreset", {
  enumerable: true,
  get: function get() {
    return _styles.jssPreset;
  }
});
Object.defineProperty(exports, "ServerStyleSheets", {
  enumerable: true,
  get: function get() {
    return _styles.ServerStyleSheets;
  }
});
Object.defineProperty(exports, "StylesProvider", {
  enumerable: true,
  get: function get() {
    return _styles.StylesProvider;
  }
});
Object.defineProperty(exports, "MuiThemeProvider", {
  enumerable: true,
  get: function get() {
    return _styles.ThemeProvider;
  }
});
Object.defineProperty(exports, "ThemeProvider", {
  enumerable: true,
  get: function get() {
    return _styles.ThemeProvider;
  }
});

var _colorManipulator = require("./colorManipulator");

Object.keys(_colorManipulator).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _colorManipulator[key];
    }
  });
});

var _createMuiTheme = _interopRequireDefault(require("./createMuiTheme"));

var _createMuiStrictModeTheme = _interopRequireDefault(require("./createMuiStrictModeTheme"));

var _createStyles = _interopRequireDefault(require("./createStyles"));

var _makeStyles = _interopRequireDefault(require("./makeStyles"));

var _responsiveFontSizes = _interopRequireDefault(require("./responsiveFontSizes"));

var _styled = _interopRequireDefault(require("./styled"));

var _transitions = require("./transitions");

Object.keys(_transitions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _transitions[key];
    }
  });
});

var _useTheme = _interopRequireDefault(require("./useTheme"));

var _withStyles = _interopRequireDefault(require("./withStyles"));

var _withTheme = _interopRequireDefault(require("./withTheme"));

var _styles = require("@material-ui/styles");
      };
    };
  }
}, {package:"@material-ui\\core",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@material-ui\\core\\styles\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-easy-swipe\\lib\\react-swipe.js", {"prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-easy-swipe\lib\react-swipe.js
      return function (require, module, exports) {
(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'react', 'prop-types'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('react'), require('prop-types'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.propTypes);
    global.reactSwipe = mod.exports;
  }
})(this, function (exports, _react, _propTypes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.setHasSupportToCaptureOption = setHasSupportToCaptureOption;

  var _react2 = _interopRequireDefault(_react);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  function _objectWithoutProperties(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var supportsCaptureOption = false;
  function setHasSupportToCaptureOption(hasSupport) {
    supportsCaptureOption = hasSupport;
  }

  try {
    addEventListener('test', null, Object.defineProperty({}, 'capture', { get: function get() {
        setHasSupportToCaptureOption(true);
      } }));
  } catch (e) {} // eslint-disable-line no-empty

  function getSafeEventHandlerOpts() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { capture: true };

    return supportsCaptureOption ? options : options.capture;
  }

  /**
   * [getPosition returns a position element that works for mouse or touch events]
   * @param  {[Event]} event [the received event]
   * @return {[Object]}      [x and y coords]
   */
  function getPosition(event) {
    if ('touches' in event) {
      var _event$touches$ = event.touches[0],
          pageX = _event$touches$.pageX,
          pageY = _event$touches$.pageY;

      return { x: pageX, y: pageY };
    }

    var screenX = event.screenX,
        screenY = event.screenY;

    return { x: screenX, y: screenY };
  }

  var ReactSwipe = function (_Component) {
    _inherits(ReactSwipe, _Component);

    function ReactSwipe() {
      var _ref;

      _classCallCheck(this, ReactSwipe);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var _this = _possibleConstructorReturn(this, (_ref = ReactSwipe.__proto__ || Object.getPrototypeOf(ReactSwipe)).call.apply(_ref, [this].concat(args)));

      _this._handleSwipeStart = _this._handleSwipeStart.bind(_this);
      _this._handleSwipeMove = _this._handleSwipeMove.bind(_this);
      _this._handleSwipeEnd = _this._handleSwipeEnd.bind(_this);

      _this._onMouseDown = _this._onMouseDown.bind(_this);
      _this._onMouseMove = _this._onMouseMove.bind(_this);
      _this._onMouseUp = _this._onMouseUp.bind(_this);

      _this._setSwiperRef = _this._setSwiperRef.bind(_this);
      return _this;
    }

    _createClass(ReactSwipe, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (this.swiper) {
          this.swiper.addEventListener('touchmove', this._handleSwipeMove, getSafeEventHandlerOpts({
            capture: true,
            passive: false
          }));
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (this.swiper) {
          this.swiper.removeEventListener('touchmove', this._handleSwipeMove, getSafeEventHandlerOpts({
            capture: true,
            passive: false
          }));
        }
      }
    }, {
      key: '_onMouseDown',
      value: function _onMouseDown(event) {
        if (!this.props.allowMouseEvents) {
          return;
        }

        this.mouseDown = true;

        document.addEventListener('mouseup', this._onMouseUp);
        document.addEventListener('mousemove', this._onMouseMove);

        this._handleSwipeStart(event);
      }
    }, {
      key: '_onMouseMove',
      value: function _onMouseMove(event) {
        if (!this.mouseDown) {
          return;
        }

        this._handleSwipeMove(event);
      }
    }, {
      key: '_onMouseUp',
      value: function _onMouseUp(event) {
        this.mouseDown = false;

        document.removeEventListener('mouseup', this._onMouseUp);
        document.removeEventListener('mousemove', this._onMouseMove);

        this._handleSwipeEnd(event);
      }
    }, {
      key: '_handleSwipeStart',
      value: function _handleSwipeStart(event) {
        var _getPosition = getPosition(event),
            x = _getPosition.x,
            y = _getPosition.y;

        this.moveStart = { x: x, y: y };
        this.props.onSwipeStart(event);
      }
    }, {
      key: '_handleSwipeMove',
      value: function _handleSwipeMove(event) {
        if (!this.moveStart) {
          return;
        }

        var _getPosition2 = getPosition(event),
            x = _getPosition2.x,
            y = _getPosition2.y;

        var deltaX = x - this.moveStart.x;
        var deltaY = y - this.moveStart.y;
        this.moving = true;

        // handling the responsability of cancelling the scroll to
        // the component handling the event
        var shouldPreventDefault = this.props.onSwipeMove({
          x: deltaX,
          y: deltaY
        }, event);

        if (shouldPreventDefault && event.cancelable) {
          event.preventDefault();
        }

        this.movePosition = { deltaX: deltaX, deltaY: deltaY };
      }
    }, {
      key: '_handleSwipeEnd',
      value: function _handleSwipeEnd(event) {
        this.props.onSwipeEnd(event);

        var tolerance = this.props.tolerance;


        if (this.moving && this.movePosition) {
          if (this.movePosition.deltaX < -tolerance) {
            this.props.onSwipeLeft(1, event);
          } else if (this.movePosition.deltaX > tolerance) {
            this.props.onSwipeRight(1, event);
          }
          if (this.movePosition.deltaY < -tolerance) {
            this.props.onSwipeUp(1, event);
          } else if (this.movePosition.deltaY > tolerance) {
            this.props.onSwipeDown(1, event);
          }
        }

        this.moveStart = null;
        this.moving = false;
        this.movePosition = null;
      }
    }, {
      key: '_setSwiperRef',
      value: function _setSwiperRef(node) {
        this.swiper = node;
        this.props.innerRef(node);
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            tagName = _props.tagName,
            className = _props.className,
            style = _props.style,
            children = _props.children,
            allowMouseEvents = _props.allowMouseEvents,
            onSwipeUp = _props.onSwipeUp,
            onSwipeDown = _props.onSwipeDown,
            onSwipeLeft = _props.onSwipeLeft,
            onSwipeRight = _props.onSwipeRight,
            onSwipeStart = _props.onSwipeStart,
            onSwipeMove = _props.onSwipeMove,
            onSwipeEnd = _props.onSwipeEnd,
            innerRef = _props.innerRef,
            tolerance = _props.tolerance,
            props = _objectWithoutProperties(_props, ['tagName', 'className', 'style', 'children', 'allowMouseEvents', 'onSwipeUp', 'onSwipeDown', 'onSwipeLeft', 'onSwipeRight', 'onSwipeStart', 'onSwipeMove', 'onSwipeEnd', 'innerRef', 'tolerance']);

        return _react2.default.createElement(
          this.props.tagName,
          _extends({
            ref: this._setSwiperRef,
            onMouseDown: this._onMouseDown,
            onTouchStart: this._handleSwipeStart,
            onTouchEnd: this._handleSwipeEnd,
            className: className,
            style: style
          }, props),
          children
        );
      }
    }]);

    return ReactSwipe;
  }(_react.Component);

  ReactSwipe.displayName = 'ReactSwipe';
  ReactSwipe.propTypes = {
    tagName: _propTypes2.default.string,
    className: _propTypes2.default.string,
    style: _propTypes2.default.object,
    children: _propTypes2.default.node,
    allowMouseEvents: _propTypes2.default.bool,
    onSwipeUp: _propTypes2.default.func,
    onSwipeDown: _propTypes2.default.func,
    onSwipeLeft: _propTypes2.default.func,
    onSwipeRight: _propTypes2.default.func,
    onSwipeStart: _propTypes2.default.func,
    onSwipeMove: _propTypes2.default.func,
    onSwipeEnd: _propTypes2.default.func,
    innerRef: _propTypes2.default.func,
    tolerance: _propTypes2.default.number.isRequired
  };
  ReactSwipe.defaultProps = {
    tagName: 'div',
    allowMouseEvents: false,
    onSwipeUp: function onSwipeUp() {},
    onSwipeDown: function onSwipeDown() {},
    onSwipeLeft: function onSwipeLeft() {},
    onSwipeRight: function onSwipeRight() {},
    onSwipeStart: function onSwipeStart() {},
    onSwipeMove: function onSwipeMove() {},
    onSwipeEnd: function onSwipeEnd() {},
    innerRef: function innerRef() {},

    tolerance: 0
  };
  exports.default = ReactSwipe;
});
      };
    };
  }
}, {package:"react-easy-swipe",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-easy-swipe\\lib\\react-swipe.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-toggle-button\\lib\\index.js", {"react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-toggle-button\lib\index.js
      return function (require, module, exports) {
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):"object"==typeof exports?exports["react-toggle-button"]=t(require("react")):e["react-toggle-button"]=t(e.React)}(this,function(e){return function(e){function t(r){if(n[r])return n[r].exports;var a=n[r]={exports:{},id:r,loaded:!1};return e[r].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){e.exports=n(12)},function(e,t,n){e.exports=n(17)()},function(e,t){"use strict";function n(e){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]="number"==typeof e[n]?e[n]:e[n].val);return t}t.__esModule=!0,t.default=n,e.exports=t.default},function(t,n){t.exports=e},function(e,t,n){(function(t){(function(){var n,r,a;"undefined"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!=typeof t&&null!==t&&t.hrtime?(e.exports=function(){return(n()-a)/1e6},r=t.hrtime,n=function(){var e;return e=r(),1e9*e[0]+e[1]},a=n()):Date.now?(e.exports=function(){return Date.now()-a},a=Date.now()):(e.exports=function(){return(new Date).getTime()-a},a=(new Date).getTime())}).call(this)}).call(t,n(9))},function(e,t,n){(function(t){for(var r=n(19),a="undefined"==typeof window?t:window,o=["moz","webkit"],i="AnimationFrame",l=a["request"+i],u=a["cancel"+i]||a["cancelRequest"+i],s=0;!l&&s<o.length;s++)l=a[o[s]+"Request"+i],u=a[o[s]+"Cancel"+i]||a[o[s]+"CancelRequest"+i];if(!l||!u){var c=0,f=0,p=[],d=1e3/60;l=function(e){if(0===p.length){var t=r(),n=Math.max(0,d-(t-c));c=n+t,setTimeout(function(){var e=p.slice(0);p.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(c)}catch(e){setTimeout(function(){throw e},0)}},Math.round(n))}return p.push({handle:++f,callback:e,cancelled:!1}),f},u=function(e){for(var t=0;t<p.length;t++)p[t].handle===e&&(p[t].cancelled=!0)}}e.exports=function(e){return l.call(a,e)},e.exports.cancel=function(){u.apply(a,arguments)},e.exports.polyfill=function(e){e||(e=a),e.requestAnimationFrame=l,e.cancelAnimationFrame=u}}).call(t,function(){return this}())},function(e,t){"use strict";function n(e){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=0);return t}t.__esModule=!0,t.default=n,e.exports=t.default},function(e,t){"use strict";function n(e,t,n){for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)){if(0!==n[r])return!1;var a="number"==typeof t[r]?t[r]:t[r].val;if(e[r]!==a)return!1}return!0}t.__esModule=!0,t.default=n,e.exports=t.default},function(e,t){"use strict";function n(e,t,n,a,o,i,l){var u=-o*(t-a),s=-i*n,c=u+s,f=n+c*e,p=t+f*e;return Math.abs(f)<l&&Math.abs(p-a)<l?(r[0]=a,r[1]=0,r):(r[0]=p,r[1]=f,r)}t.__esModule=!0,t.default=n;var r=[0,0];e.exports=t.default},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function a(e){if(c===setTimeout)return setTimeout(e,0);if((c===n||!c)&&setTimeout)return c=setTimeout,setTimeout(e,0);try{return c(e,0)}catch(t){try{return c.call(null,e,0)}catch(t){return c.call(this,e,0)}}}function o(e){if(f===clearTimeout)return clearTimeout(e);if((f===r||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(e);try{return f(e)}catch(t){try{return f.call(null,e)}catch(t){return f.call(this,e)}}}function i(){h&&d&&(h=!1,d.length?y=d.concat(y):m=-1,y.length&&l())}function l(){if(!h){var e=a(i);h=!0;for(var t=y.length;t;){for(d=y,y=[];++m<t;)d&&d[m].run();m=-1,t=y.length}d=null,h=!1,o(e)}}function u(e,t){this.fun=e,this.array=t}function s(){}var c,f,p=e.exports={};!function(){try{c="function"==typeof setTimeout?setTimeout:n}catch(e){c=n}try{f="function"==typeof clearTimeout?clearTimeout:r}catch(e){f=r}}();var d,y=[],h=!1,m=-1;p.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];y.push(new u(e,t)),1!==y.length||h||a(l)},u.prototype.run=function(){this.fun.apply(null,this.array)},p.title="browser",p.browser=!0,p.env={},p.argv=[],p.version="",p.versions={},p.on=s,p.addListener=s,p.once=s,p.off=s,p.removeListener=s,p.removeAllListeners=s,p.emit=s,p.prependListener=s,p.prependOnceListener=s,p.listeners=function(e){return[]},p.binding=function(e){throw new Error("process.binding is not supported")},p.cwd=function(){return"/"},p.chdir=function(e){throw new Error("process.chdir is not supported")},p.umask=function(){return 0}},function(e,t){"use strict";t.__esModule=!0,t.default={noWobble:{stiffness:170,damping:26},gentle:{stiffness:120,damping:14},wobbly:{stiffness:180,damping:12},stiff:{stiffness:210,damping:20}},e.exports=t.default},function(e,t){"use strict";function n(e){var t=e;if(l[t])return l[t];t=t.replace("#",""),3===t.length&&(t=t[0]+t[0]+t[1]+t[1]+t[2]+t[2]);var n=t.match(/.{2}/g),r={r:parseInt(n[0],16),g:parseInt(n[1],16),b:parseInt(n[2],16)};return l[t]=r,r}function r(e){var t=e.indexOf("rgb")!=-1,n=e.indexOf("rgba")!=-1,r=e.match(/\d+/g);if(t&&!n)return{r:parseInt(r[0]),g:parseInt(r[1]),b:parseInt(r[2])};if(t&&n){var a="0"==r[3]?"0."+r[4]:r[3];return{r:parseInt(r[0]),g:parseInt(r[1]),b:parseInt(r[2]),a:parseFloat(a)}}return null}function a(e,t,n){var r=e.toString(16),a=t.toString(16),o=n.toString(16);return r=r.length<2?"0"+r:r,a=a.length<2?"0"+a:a,o=o.length<2?"0"+o:o,"#"+r+a+o}function o(e,t,n,r,a){var o=n-t,i=a-r,l=(e-t)/o;return r+l*i}function i(e,t,n,a,i,l){var u=void 0===a?0:a,s=void 0===i?1:i,c=r(t),f=r(n),p=Math.floor(o(e,u,s,c.r,f.r)),d=Math.floor(o(e,u,s,c.g,f.g)),y=Math.floor(o(e,u,s,c.b,f.b)),h=!1,m=null;return c.a&&f.a&&(h=!0,m=o(e,u,s,c.a,f.a)),m?"rgb("+p+","+d+","+y+","+m+")":"rgb("+p+","+d+","+y+")"}Object.defineProperty(t,"__esModule",{value:!0}),t.hexToRGB=n,t.rgbToObj=r,t.rgbToHex=a,t.mapValueInRange=o,t.interpolateColor=i;var l={}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}var a=n(13),o=r(a);e.exports=o.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=n(3),c=r(s),f=n(24),p=n(1),d=r(p),y=n(14),h=n(11),m={active:{base:"rgb(1,124,66)",hover:"rgb(1,124,66)"},inactive:{base:"rgb(65,66,68)",hover:"rgb(65,66,68)"},activeThumb:{base:"rgb(250,250,250)",hover:"rgb(250,250,250)"},inactiveThumb:{base:"rgb(250,250,250)",hover:"rgb(250,250,250)"}},v={},b=function(e){function t(e){a(this,t);var n=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={isHover:!1},n}return i(t,e),u(t,[{key:"onMouseOver",value:function(){this.setState({isHover:!0})}},{key:"onMouseOut",value:function(){this.setState({isHover:!1})}},{key:"_convertToRgb",value:function(e,t){if(e.indexOf("#")!=-1){var n=(0,h.hexToRGB)(e);return"rgb("+n.r+", "+n.g+", "+n.b+")"}return e.indexOf("rgb")==-1?t:e}},{key:"checkAllColors",value:function(e){var t=this;return Object.keys(e).forEach(function(n){t.checkColors(e,n)}),e}},{key:"checkColors",value:function(e,t){e[t]?e[t].hover?(e[t].base=this._convertToRgb(e[t].base,m[t].base),e[t].hover=this._convertToRgb(e[t].hover,m[t].hover)):e[t].base?(e[t].base=this._convertToRgb(e[t].base,m[t].base),e[t].hover=e[t].base):(console.warn('Color prop should have a "base" style and a "hover" style!'),e[t]=m[t]):e[t]=m[t]}},{key:"interpolateColorWithHover",value:function(e,t,n){var r=this.props.colors;return this.checkColors(r,t),this.checkColors(r,n),this.state.isHover?{backgroundColor:(0,h.interpolateColor)(e,r[t].hover,r[n].hover,0,400)}:{backgroundColor:(0,h.interpolateColor)(e,r[t].base,r[n].base,0,400)}}},{key:"makeStyle",value:function(e,t){return this.state.isHover?l({},e,t):e}},{key:"handleClick",value:function(e){e.target!==this._input&&(e.preventDefault(),this._input.focus(),this._input.click())}},{key:"render",value:function(){var e=this,t=this.props,n=t.internalSpringSetting,r=t.internalHoverSpringSetting,a=t.value,o=t.thumbAnimateRange,i=(t.isHover,t.containerStyle),u=t.trackStyle,s=t.animateTrackStyleToggle,p=t.animateTrackStyleHover,d=t.thumbStyleHover,h=t.trackStyleHover,m=t.activeLabelStyle,v=t.activeLabelStyleHover,b=t.activeLabel,g=t.inactiveLabelStyle,S=t.inactiveLabelStyleHover,T=t.inactiveLabel,O=t.thumbStyle,k=t.animateThumbStyleHover,w=t.animateThumbStyleToggle,I=t.thumbIcon,P=t.onClick,j=t.onToggle,_=t.passThroughInputProps,x=n,M=r;return c.default.createElement(f.Motion,{style:{opacity:(0,f.spring)(a?1:0,x),left:(0,f.spring)(a?10*o[1]:10*o[0],x),colorNumber:(0,f.spring)(a?0:400,x),toggleNumber:(0,f.spring)(a?400:0,x),hoverNumber:(0,f.spring)(this.state.isHover?400:0,M)}},function(t){var n=t.opacity,r=t.left,o=t.colorNumber,f=t.hoverNumber,x=t.toggleNumber;return c.default.createElement("div",{style:l({},e.makeStyle(l({},y.reactToggle,i))),onMouseOver:e.onMouseOver.bind(e),onMouseOut:e.onMouseOut.bind(e),onClick:e.handleClick.bind(e)},c.default.createElement("div",{style:l({},e.makeStyle(l({},y.reactToggleTrack,u,e.interpolateColorWithHover(o,"active","inactive"),s(x/400)),l({},h,p(f/400))))},c.default.createElement("div",{style:l({},e.makeStyle(l({},y.reactToggleOn,m),v),{opacity:n})},b),c.default.createElement("div",{style:l({},e.makeStyle(l({},y.reactToggleOff,g),S),{opacity:1-n})},T)),c.default.createElement("div",{style:y.reactThumbCenteringContainer},c.default.createElement("div",{style:l({},e.makeStyle(l({},y.reactToggleThumb,O,e.interpolateColorWithHover(o,"activeThumb","inactiveThumb"),w(x/400)),l({},d,k(f/400))),{position:"relative",left:Math.round(r/10)})},I)),c.default.createElement("input",l({ref:function(t){e._input=t},type:"checkbox",style:y.reactToggleScreenReaderOnly,onClick:function(e){P&&P(e),j(a)},value:a},_)))})}}]),t}(s.Component);b.defaultProps={value:!1,onToggle:function(){},colors:m,passThroughInputProps:{},activeLabel:"ON",containerStyle:v,activeLabelStyle:v,activeLabelStyleHover:v,inactiveLabel:"OFF",inactiveLabelStyle:v,inactiveLabelStyleHover:v,thumbStyle:v,thumbStyleHover:v,animateThumbStyleHover:function(){return{}},animateThumbStyleToggle:function(){return{}},trackStyle:v,trackStyleHover:v,animateTrackStyleHover:function(){return{}},animateTrackStyleToggle:function(){return{}},thumbAnimateRange:[1,33],internalSpringSetting:{stiffness:180,damping:22},internalHoverSpringSetting:{stiffness:180,damping:20}},b.displayName="Toggle",t.default=b,b.propTypes={value:d.default.bool.isRequired,onToggle:d.default.func.isRequired,passThroughInputProps:d.default.object,onClick:d.default.func,colors:d.default.object,activeLabel:d.default.oneOfType([d.default.string,d.default.object]),containerStyle:d.default.object,activeLabelStyle:d.default.object,activeLabelStyleHover:d.default.object,activeThumbStyle:d.default.object,activeThumbStyleHover:d.default.object,inactiveLabel:d.default.oneOfType([d.default.string,d.default.object]),inactiveLabelStyle:d.default.object,inactiveLabelStyleHover:d.default.object,thumbStyle:d.default.object,thumbStyleHover:d.default.object,trackStyle:d.default.object,trackStyleHover:d.default.object,animateThumbStyleHover:d.default.func,animateTrackStyleHover:d.default.func,animateTrackStyleToggle:d.default.func,animateThumbStyleToggle:d.default.func,internalSpringSetting:d.default.object,internalHoverSpringSetting:d.default.object,thumbIcon:d.default.oneOfType([d.default.string,d.default.object]),thumbAnimateRange:d.default.array}},function(e,t){"use strict";function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a=(t.reactToggle=n({display:"flex",width:52,alignItems:"center",justifyContent:"flex-start",position:"relative",cursor:"pointer",backgroundColor:"transparent",border:0,padding:0,WebkitTouchCallout:"none",WebkitUserSelect:"none",KhtmlUserSelect:"none",MozUserSelect:"none",msUserSelect:"none",userSelect:"none",WebkitTapHighlightColor:"rgba(0,0,0,0)"},"WebkitTapHighlightColor","transparent"),{fontSize:11,display:"flex",alignItems:"center",justifyContent:"center",fontFamily:"'Helvetica Neue', Helvetica, sans-serif"});t.reactToggleScreenReaderOnly={border:0,clip:"rect(0 0 0 0)",height:1,margin:-1,overflow:"hidden",padding:0,position:"absolute",width:1},t.reactToggleTrack={width:"52px",height:"20px",padding:0,borderRadius:"26px",display:"flex",alignItems:"center",justifyContent:"center"},t.reactToggleOn=r({},a,{position:"relative",color:"#FAFAFA",marginTop:"auto",marginBottom:"auto",lineHeight:0,opacity:0,width:26,height:20,left:4}),t.reactToggleOff=r({},a,{position:"relative",color:"rgba(255,255,255,0.6)",bottom:"0px",marginTop:"auto",marginBottom:"auto",paddingRight:5,lineHeight:0,width:26,height:20}),t.reactToggleThumb={width:"18px",height:"18px",display:"flex",alignSelf:"center",boxShadow:"0 0 0 1px rgba(0,0,0,0.3)",borderRadius:"50%",WebkitBoxSizing:"border-box",MozBoxSizing:"border-box",boxSizing:"border-box"},t.reactThumbCenteringContainer={position:"absolute",height:"100%",top:0,left:0,display:"flex",flex:1,alignSelf:"stretch",alignItems:"center",justifyContent:"flex-start"}},function(e,t){"use strict";function n(e){return function(){return e}}var r=function(){};r.thatReturns=n,r.thatReturnsFalse=n(!1),r.thatReturnsTrue=n(!0),r.thatReturnsNull=n(null),r.thatReturnsThis=function(){return this},r.thatReturnsArgument=function(e){return e},e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r,o,i,l,u){if(a(t),!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,l,u],f=0;s=new Error(t.replace(/%s/g,function(){return c[f++]})),s.name="Invariant Violation"}throw s.framesToPop=1,s}}var a=function(e){};e.exports=r},function(e,t,n){"use strict";var r=n(15),a=n(16),o=n(18);e.exports=function(){function e(e,t,n,r,i,l){l!==o&&a(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t){"use strict";var n="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";e.exports=n},function(e,t,n){(function(t){(function(){var n,r,a,o,i,l;"undefined"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!=typeof t&&null!==t&&t.hrtime?(e.exports=function(){return(n()-i)/1e6},r=t.hrtime,n=function(){var e;return e=r(),1e9*e[0]+e[1]},o=n(),l=1e9*t.uptime(),i=o-l):Date.now?(e.exports=function(){return Date.now()-a},a=Date.now()):(e.exports=function(){return(new Date).getTime()-a},a=(new Date).getTime())}).call(this)}).call(t,n(9))},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(6),s=r(u),c=n(2),f=r(c),p=n(8),d=r(p),y=n(4),h=r(y),m=n(5),v=r(m),b=n(7),g=r(b),S=n(3),T=r(S),O=n(1),k=r(O),w=1e3/60,I=function(e){function t(n){var r=this;a(this,t),e.call(this,n),this.wasAnimating=!1,this.animationID=null,this.prevTime=0,this.accumulatedTime=0,this.unreadPropStyle=null,this.clearUnreadPropStyle=function(e){var t=!1,n=r.state,a=n.currentStyle,o=n.currentVelocity,l=n.lastIdealStyle,u=n.lastIdealVelocity;for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var c=e[s];"number"==typeof c&&(t||(t=!0,a=i({},a),o=i({},o),l=i({},l),u=i({},u)),a[s]=c,o[s]=0,l[s]=c,u[s]=0)}t&&r.setState({currentStyle:a,currentVelocity:o,lastIdealStyle:l,lastIdealVelocity:u})},this.startAnimationIfNecessary=function(){r.animationID=v.default(function(e){var t=r.props.style;if(g.default(r.state.currentStyle,t,r.state.currentVelocity))return r.wasAnimating&&r.props.onRest&&r.props.onRest(),r.animationID=null,r.wasAnimating=!1,void(r.accumulatedTime=0);r.wasAnimating=!0;var n=e||h.default(),a=n-r.prevTime;if(r.prevTime=n,r.accumulatedTime=r.accumulatedTime+a,r.accumulatedTime>10*w&&(r.accumulatedTime=0),0===r.accumulatedTime)return r.animationID=null,void r.startAnimationIfNecessary();var o=(r.accumulatedTime-Math.floor(r.accumulatedTime/w)*w)/w,i=Math.floor(r.accumulatedTime/w),l={},u={},s={},c={};for(var f in t)if(Object.prototype.hasOwnProperty.call(t,f)){var p=t[f];if("number"==typeof p)s[f]=p,c[f]=0,l[f]=p,u[f]=0;else{for(var y=r.state.lastIdealStyle[f],m=r.state.lastIdealVelocity[f],v=0;v<i;v++){var b=d.default(w/1e3,y,m,p.val,p.stiffness,p.damping,p.precision);y=b[0],m=b[1]}var S=d.default(w/1e3,y,m,p.val,p.stiffness,p.damping,p.precision),T=S[0],O=S[1];s[f]=y+(T-y)*o,c[f]=m+(O-m)*o,l[f]=y,u[f]=m}}r.animationID=null,r.accumulatedTime-=i*w,r.setState({currentStyle:s,currentVelocity:c,lastIdealStyle:l,lastIdealVelocity:u}),r.unreadPropStyle=null,r.startAnimationIfNecessary()})},this.state=this.defaultState()}return o(t,e),l(t,null,[{key:"propTypes",value:{defaultStyle:k.default.objectOf(k.default.number),style:k.default.objectOf(k.default.oneOfType([k.default.number,k.default.object])).isRequired,children:k.default.func.isRequired,onRest:k.default.func},enumerable:!0}]),t.prototype.defaultState=function(){var e=this.props,t=e.defaultStyle,n=e.style,r=t||f.default(n),a=s.default(r);return{currentStyle:r,currentVelocity:a,lastIdealStyle:r,lastIdealVelocity:a}},t.prototype.componentDidMount=function(){this.prevTime=h.default(),this.startAnimationIfNecessary()},t.prototype.componentWillReceiveProps=function(e){null!=this.unreadPropStyle&&this.clearUnreadPropStyle(this.unreadPropStyle),this.unreadPropStyle=e.style,null==this.animationID&&(this.prevTime=h.default(),this.startAnimationIfNecessary())},t.prototype.componentWillUnmount=function(){null!=this.animationID&&(v.default.cancel(this.animationID),this.animationID=null)},t.prototype.render=function(){var e=this.props.children(this.state.currentStyle);return e&&T.default.Children.only(e)},t}(T.default.Component);t.default=I,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function i(e,t,n){for(var r=0;r<e.length;r++)if(!S.default(e[r],t[r],n[r]))return!1;return!0}t.__esModule=!0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=n(6),c=r(s),f=n(2),p=r(f),d=n(8),y=r(d),h=n(4),m=r(h),v=n(5),b=r(v),g=n(7),S=r(g),T=n(3),O=r(T),k=n(1),w=r(k),I=1e3/60,P=function(e){function t(n){var r=this;a(this,t),e.call(this,n),this.animationID=null,this.prevTime=0,this.accumulatedTime=0,this.unreadPropStyles=null,this.clearUnreadPropStyle=function(e){for(var t=r.state,n=t.currentStyles,a=t.currentVelocities,o=t.lastIdealStyles,i=t.lastIdealVelocities,u=!1,s=0;s<e.length;s++){var c=e[s],f=!1;for(var p in c)if(Object.prototype.hasOwnProperty.call(c,p)){var d=c[p];"number"==typeof d&&(f||(f=!0,u=!0,n[s]=l({},n[s]),a[s]=l({},a[s]),o[s]=l({},o[s]),i[s]=l({},i[s])),n[s][p]=d,a[s][p]=0,o[s][p]=d,i[s][p]=0)}}u&&r.setState({currentStyles:n,currentVelocities:a,lastIdealStyles:o,lastIdealVelocities:i})},this.startAnimationIfNecessary=function(){r.animationID=b.default(function(e){var t=r.props.styles(r.state.lastIdealStyles);if(i(r.state.currentStyles,t,r.state.currentVelocities))return r.animationID=null,void(r.accumulatedTime=0);var n=e||m.default(),a=n-r.prevTime;if(r.prevTime=n,r.accumulatedTime=r.accumulatedTime+a,r.accumulatedTime>10*I&&(r.accumulatedTime=0),0===r.accumulatedTime)return r.animationID=null,void r.startAnimationIfNecessary();for(var o=(r.accumulatedTime-Math.floor(r.accumulatedTime/I)*I)/I,l=Math.floor(r.accumulatedTime/I),u=[],s=[],c=[],f=[],p=0;p<t.length;p++){var d=t[p],h={},v={},b={},g={};for(var S in d)if(Object.prototype.hasOwnProperty.call(d,S)){var T=d[S];if("number"==typeof T)h[S]=T,v[S]=0,b[S]=T,g[S]=0;else{for(var O=r.state.lastIdealStyles[p][S],k=r.state.lastIdealVelocities[p][S],w=0;w<l;w++){var P=y.default(I/1e3,O,k,T.val,T.stiffness,T.damping,T.precision);O=P[0],k=P[1]}var j=y.default(I/1e3,O,k,T.val,T.stiffness,T.damping,T.precision),_=j[0],x=j[1];h[S]=O+(_-O)*o,v[S]=k+(x-k)*o,b[S]=O,g[S]=k}}c[p]=h,f[p]=v,u[p]=b,s[p]=g}r.animationID=null,r.accumulatedTime-=l*I,r.setState({currentStyles:c,currentVelocities:f,lastIdealStyles:u,lastIdealVelocities:s}),r.unreadPropStyles=null,r.startAnimationIfNecessary()})},this.state=this.defaultState()}return o(t,e),u(t,null,[{key:"propTypes",value:{defaultStyles:w.default.arrayOf(w.default.objectOf(w.default.number)),styles:w.default.func.isRequired,children:w.default.func.isRequired},enumerable:!0}]),t.prototype.defaultState=function(){var e=this.props,t=e.defaultStyles,n=e.styles,r=t||n().map(p.default),a=r.map(function(e){return c.default(e)});return{currentStyles:r,currentVelocities:a,lastIdealStyles:r,lastIdealVelocities:a}},t.prototype.componentDidMount=function(){this.prevTime=m.default(),this.startAnimationIfNecessary()},t.prototype.componentWillReceiveProps=function(e){null!=this.unreadPropStyles&&this.clearUnreadPropStyle(this.unreadPropStyles),this.unreadPropStyles=e.styles(this.state.lastIdealStyles),null==this.animationID&&(this.prevTime=m.default(),this.startAnimationIfNecessary())},t.prototype.componentWillUnmount=function(){null!=this.animationID&&(b.default.cancel(this.animationID),this.animationID=null)},t.prototype.render=function(){var e=this.props.children(this.state.currentStyles);return e&&O.default.Children.only(e)},t}(O.default.Component);t.default=P,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function i(e,t,n){var r=t;return null==r?e.map(function(e,t){return{key:e.key,data:e.data,style:n[t]}}):e.map(function(e,t){for(var a=0;a<r.length;a++)if(r[a].key===e.key)return{key:r[a].key,data:r[a].data,style:n[t]};return{key:e.key,data:e.data,style:n[t]}})}function l(e,t,n,r){if(r.length!==t.length)return!1;for(var a=0;a<r.length;a++)if(r[a].key!==t[a].key)return!1;for(var a=0;a<r.length;a++)if(!w.default(e[a],t[a].style,n[a]))return!1;return!0}function u(e,t,n,r,a,o,i,l,u){for(var s=b.default(r,a,function(e,r){var a=t(r);return null==a?(n({key:r.key,data:r.data}),null):w.default(o[e],a,i[e])?(n({key:r.key,data:r.data}),null):{key:r.key,data:r.data,style:a}}),c=[],f=[],d=[],y=[],h=0;h<s.length;h++){for(var m=s[h],v=null,g=0;g<r.length;g++)if(r[g].key===m.key){v=g;break}if(null==v){var S=e(m);c[h]=S,d[h]=S;var T=p.default(m.style);f[h]=T,y[h]=T}else c[h]=o[v],d[h]=l[v],f[h]=i[v],y[h]=u[v]}return[s,c,f,d,y]}t.__esModule=!0;var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),f=n(6),p=r(f),d=n(2),y=r(d),h=n(8),m=r(h),v=n(23),b=r(v),g=n(4),S=r(g),T=n(5),O=r(T),k=n(7),w=r(k),I=n(3),P=r(I),j=n(1),_=r(j),x=1e3/60,M=function(e){function t(n){var r=this;a(this,t),e.call(this,n),this.unmounting=!1,this.animationID=null,this.prevTime=0,this.accumulatedTime=0,this.unreadPropStyles=null,this.clearUnreadPropStyle=function(e){for(var t=u(r.props.willEnter,r.props.willLeave,r.props.didLeave,r.state.mergedPropsStyles,e,r.state.currentStyles,r.state.currentVelocities,r.state.lastIdealStyles,r.state.lastIdealVelocities),n=t[0],a=t[1],o=t[2],i=t[3],l=t[4],c=0;c<e.length;c++){var f=e[c].style,p=!1;for(var d in f)if(Object.prototype.hasOwnProperty.call(f,d)){var y=f[d];"number"==typeof y&&(p||(p=!0,a[c]=s({},a[c]),o[c]=s({},o[c]),i[c]=s({},i[c]),l[c]=s({},l[c]),n[c]={key:n[c].key,data:n[c].data,style:s({},n[c].style)}),a[c][d]=y,o[c][d]=0,i[c][d]=y,l[c][d]=0,n[c].style[d]=y)}}r.setState({currentStyles:a,currentVelocities:o,mergedPropsStyles:n,lastIdealStyles:i,lastIdealVelocities:l})},this.startAnimationIfNecessary=function(){r.unmounting||(r.animationID=O.default(function(e){if(!r.unmounting){var t=r.props.styles,n="function"==typeof t?t(i(r.state.mergedPropsStyles,r.unreadPropStyles,r.state.lastIdealStyles)):t;if(l(r.state.currentStyles,n,r.state.currentVelocities,r.state.mergedPropsStyles))return r.animationID=null,void(r.accumulatedTime=0);var a=e||S.default(),o=a-r.prevTime;if(r.prevTime=a,r.accumulatedTime=r.accumulatedTime+o,r.accumulatedTime>10*x&&(r.accumulatedTime=0),0===r.accumulatedTime)return r.animationID=null,void r.startAnimationIfNecessary();for(var s=(r.accumulatedTime-Math.floor(r.accumulatedTime/x)*x)/x,c=Math.floor(r.accumulatedTime/x),f=u(r.props.willEnter,r.props.willLeave,r.props.didLeave,r.state.mergedPropsStyles,n,r.state.currentStyles,r.state.currentVelocities,r.state.lastIdealStyles,r.state.lastIdealVelocities),p=f[0],d=f[1],y=f[2],h=f[3],v=f[4],b=0;b<p.length;b++){var g=p[b].style,T={},O={},k={},w={};for(var I in g)if(Object.prototype.hasOwnProperty.call(g,I)){var P=g[I];if("number"==typeof P)T[I]=P,O[I]=0,k[I]=P,w[I]=0;else{for(var j=h[b][I],_=v[b][I],M=0;M<c;M++){var R=m.default(x/1e3,j,_,P.val,P.stiffness,P.damping,P.precision);j=R[0],_=R[1]}var C=m.default(x/1e3,j,_,P.val,P.stiffness,P.damping,P.precision),D=C[0],H=C[1];T[I]=j+(D-j)*s,O[I]=_+(H-_)*s,k[I]=j,w[I]=_}}h[b]=k,v[b]=w,d[b]=T,y[b]=O}r.animationID=null,r.accumulatedTime-=c*x,r.setState({currentStyles:d,currentVelocities:y,lastIdealStyles:h,lastIdealVelocities:v,mergedPropsStyles:p}),r.unreadPropStyles=null,r.startAnimationIfNecessary()}}))},this.state=this.defaultState()}return o(t,e),c(t,null,[{key:"propTypes",value:{defaultStyles:_.default.arrayOf(_.default.shape({key:_.default.string.isRequired,data:_.default.any,style:_.default.objectOf(_.default.number).isRequired})),styles:_.default.oneOfType([_.default.func,_.default.arrayOf(_.default.shape({key:_.default.string.isRequired,data:_.default.any,style:_.default.objectOf(_.default.oneOfType([_.default.number,_.default.object])).isRequired}))]).isRequired,children:_.default.func.isRequired,willEnter:_.default.func,willLeave:_.default.func,didLeave:_.default.func},enumerable:!0},{key:"defaultProps",value:{willEnter:function(e){return y.default(e.style)},willLeave:function(){return null},didLeave:function(){}},enumerable:!0}]),t.prototype.defaultState=function(){var e=this.props,t=e.defaultStyles,n=e.styles,r=e.willEnter,a=e.willLeave,o=e.didLeave,i="function"==typeof n?n(t):n,l=void 0;l=null==t?i:t.map(function(e){for(var t=0;t<i.length;t++)if(i[t].key===e.key)return i[t];return e});var s=null==t?i.map(function(e){return y.default(e.style)}):t.map(function(e){return y.default(e.style)}),c=null==t?i.map(function(e){return p.default(e.style)}):t.map(function(e){return p.default(e.style)}),f=u(r,a,o,l,i,s,c,s,c),d=f[0],h=f[1],m=f[2],v=f[3],b=f[4];return{currentStyles:h,currentVelocities:m,lastIdealStyles:v,lastIdealVelocities:b,mergedPropsStyles:d}},t.prototype.componentDidMount=function(){this.prevTime=S.default(),this.startAnimationIfNecessary()},t.prototype.componentWillReceiveProps=function(e){this.unreadPropStyles&&this.clearUnreadPropStyle(this.unreadPropStyles);var t=e.styles;"function"==typeof t?this.unreadPropStyles=t(i(this.state.mergedPropsStyles,this.unreadPropStyles,this.state.lastIdealStyles)):this.unreadPropStyles=t,null==this.animationID&&(this.prevTime=S.default(),this.startAnimationIfNecessary())},t.prototype.componentWillUnmount=function(){this.unmounting=!0,null!=this.animationID&&(O.default.cancel(this.animationID),this.animationID=null)},t.prototype.render=function(){var e=i(this.state.mergedPropsStyles,this.unreadPropStyles,this.state.currentStyles),t=this.props.children(e);return t&&P.default.Children.only(t)},t}(P.default.Component);t.default=M,e.exports=t.default},function(e,t){"use strict";function n(e,t,n){for(var r={},a=0;a<e.length;a++)r[e[a].key]=a;for(var o={},a=0;a<t.length;a++)o[t[a].key]=a;for(var i=[],a=0;a<t.length;a++)i[a]=t[a];for(var a=0;a<e.length;a++)if(!Object.prototype.hasOwnProperty.call(o,e[a].key)){var l=n(a,e[a]);null!=l&&i.push(l)}return i.sort(function(e,n){var a=o[e.key],i=o[n.key],l=r[e.key],u=r[n.key];if(null!=a&&null!=i)return o[e.key]-o[n.key];if(null!=l&&null!=u)return r[e.key]-r[n.key];if(null!=a){for(var s=0;s<t.length;s++){var c=t[s].key;if(Object.prototype.hasOwnProperty.call(r,c)){if(a<o[c]&&u>r[c])return-1;if(a>o[c]&&u<r[c])return 1}}return 1}for(var s=0;s<t.length;s++){var c=t[s].key;if(Object.prototype.hasOwnProperty.call(r,c)){if(i<o[c]&&l>r[c])return 1;if(i>o[c]&&l<r[c])return-1}}return-1})}t.__esModule=!0,t.default=n,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e.default:e}t.__esModule=!0;var a=n(20);t.Motion=r(a);var o=n(21);t.StaggeredMotion=r(o);var i=n(22);t.TransitionMotion=r(i);var l=n(26);t.spring=r(l);var u=n(10);t.presets=r(u);var s=n(2);t.stripStyle=r(s);var c=n(25);
t.reorderKeys=r(c)},function(e,t,n){"use strict";function r(){}t.__esModule=!0,t.default=r,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function a(e,t){return o({},u,t,{val:e})}t.__esModule=!0;var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=a;var i=n(10),l=r(i),u=o({},l.default.noWobble,{precision:.01});e.exports=t.default}])});
      };
    };
  }
}, {package:"react-toggle-button",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-toggle-button\\lib\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\logo\\fox.json", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@metamask\logo\fox.json
      return function (require, module, exports) {
module.exports={
  "positions": [
    [111.024597, 52.604599, 46.225899],
    [114.025002, 87.673302, 58.9818],
    [66.192001, 80.898003, 55.394299],
    [72.113297, 35.491798, 30.871401],
    [97.804497, 116.560997, 73.978798],
    [16.7623, 58.010899, 58.078201],
    [52.608898, 30.3641, 42.556099],
    [106.881401, 31.945499, 46.9133],
    [113.484596, 38.6049, 49.121498],
    [108.6633, 43.2332, 46.315399],
    [101.216599, 15.9822, 46.308201],
    [16.6605, -16.2883, 93.618698],
    [40.775002, -10.2288, 85.276398],
    [23.926901, -2.5103, 86.736504],
    [11.1691, -7.0037, 99.377602],
    [9.5692, -34.393902, 141.671997],
    [12.596, 7.1655, 88.740997],
    [61.180901, 8.8142, 76.996803],
    [39.719501, -28.927099, 88.963799],
    [13.7962, -68.575699, 132.057007],
    [15.2674, -62.32, 129.688004],
    [14.8446, -52.6096, 140.113007],
    [12.8917, -49.771599, 144.740997],
    [35.604198, -71.758003, 81.063904],
    [47.462502, -68.606102, 63.369701],
    [38.2486, -64.730202, 38.909901],
    [-12.8917, -49.771599, 144.740997],
    [-13.7962, -68.575699, 132.057007],
    [17.802099, -71.758003, 81.063904],
    [19.1243, -69.0168, 49.420101],
    [38.2486, -66.275597, 17.776199],
    [12.8928, -36.703499, 141.671997],
    [109.283997, -93.589897, 27.824301],
    [122.117996, -36.8894, 35.025002],
    [67.7668, -30.197001, 78.417801],
    [33.180698, 101.851997, 25.3186],
    [9.4063, -35.589802, 150.722],
    [-9.5692, -34.393902, 141.671997],
    [-9.4063, -35.589802, 150.722],
    [11.4565, -37.899399, 150.722],
    [-12.596, 7.1655, 88.740997],
    [-11.1691, -7.0037, 99.377602],
    [70.236504, 62.836201, -3.9475],
    [47.263401, 54.293999, -27.414801],
    [28.7302, 91.731102, -24.972601],
    [69.167603, 6.5862, -12.7757],
    [28.7302, 49.1003, -48.3596],
    [31.903, 5.692, -47.821999],
    [35.075802, -34.432899, -16.280899],
    [115.284103, 48.681499, 48.684101],
    [110.842796, 28.4821, 49.176201],
    [-19.1243, -69.0168, 49.420101],
    [-38.2486, -66.275597, 17.776199],
    [-111.024597, 52.604599, 46.225899],
    [-72.113297, 35.491798, 30.871401],
    [-66.192001, 80.898003, 55.394299],
    [-114.025002, 87.673302, 58.9818],
    [-97.804497, 116.560997, 73.978798],
    [-52.608898, 30.3641, 42.556099],
    [-16.7623, 58.010899, 58.078201],
    [-106.881401, 31.945499, 46.9133],
    [-108.6633, 43.2332, 46.315399],
    [-113.484596, 38.6049, 49.121498],
    [-101.216599, 15.9822, 46.308201],
    [-16.6605, -16.2883, 93.618698],
    [-23.926901, -2.5103, 86.736504],
    [-40.775002, -10.2288, 85.276398],
    [-61.180901, 8.8142, 76.996803],
    [-39.719501, -28.927099, 88.963799],
    [-14.8446, -52.6096, 140.113007],
    [-15.2674, -62.32, 129.688004],
    [-47.462502, -68.606102, 63.369701],
    [-35.604198, -71.758003, 81.063904],
    [-38.2486, -64.730202, 38.909901],
    [-17.802099, -71.758003, 81.063904],
    [-12.8928, -36.703499, 141.671997],
    [-67.7668, -30.197001, 78.417801],
    [-122.117996, -36.8894, 35.025002],
    [-109.283997, -93.589897, 27.824301],
    [-33.180698, 101.851997, 25.3186],
    [-11.4565, -37.899399, 150.722],
    [-70.236504, 62.836201, -3.9475],
    [-28.7302, 91.731102, -24.972601],
    [-47.263401, 54.293999, -27.414801],
    [-69.167603, 6.5862, -12.7757],
    [-28.7302, 49.1003, -48.3596],
    [-31.903, 5.692, -47.821999],
    [-35.075802, -34.432899, -16.280899],
    [-115.284103, 48.681499, 48.684101],
    [-110.842796, 28.4821, 49.176201]
  ],
  "chunks": [
    {
      "color": [119, 57, 0],
      "faces": [
        [0, 1, 2],
        [2, 3, 0],
        [4, 5, 2],
        [6, 3, 2],
        [2, 5, 6],
        [7, 8, 9],
        [10, 3, 6],
        [10, 50, 7],
        [7, 3, 10],
        [7, 9, 3],
        [49, 0, 9],
        [3, 9, 0],
        [53, 54, 55],
        [55, 56, 53],
        [57, 56, 55],
        [58, 59, 55],
        [55, 54, 58],
        [60, 61, 62],
        [63, 58, 54],
        [63, 60, 89],
        [60, 63, 54],
        [60, 54, 61],
        [88, 61, 53],
        [54, 53, 61],
        [2, 1, 4],
        [55, 59, 57]
      ]
    },
    {
      "color": [36, 51, 67],
      "faces": [
        [11, 12, 13],
        [64, 65, 66]
      ]
    },
    {
      "color": [228, 116, 36],
      "faces": [
        [14, 15, 11],
        [11, 16, 14],
        [17, 12, 18],
        [41, 64, 37],
        [67, 68, 66]
      ]
    },
    {
      "color": [192, 172, 157],
      "faces": [
        [19, 20, 21],
        [21, 22, 19],
        [20, 19, 23],
        [23, 24, 20],
        [23, 25, 24],
        [19, 22, 26],
        [26, 27, 19],
        [23, 28, 29],
        [23, 29, 30],
        [25, 23, 30],
        [29, 51, 52],
        [52, 30, 29],
        [27, 26, 69],
        [69, 70, 27],
        [70, 71, 72],
        [72, 27, 70],
        [72, 71, 73],
        [51, 74, 72],
        [52, 51, 72],
        [73, 52, 72],
        [19, 27, 74],
        [74, 28, 19],
        [51, 29, 28],
        [28, 74, 51],
        [74, 27, 72],
        [28, 23, 19]
      ]
    },
    {
      "color": [214, 194, 178],
      "faces": [
        [21, 20, 24],
        [24, 31, 21],
        [69, 71, 70],
        [71, 69, 75]
      ]
    },
    {
      "color": [228, 119, 25],
      "faces": [
        [31, 24, 18],
        [6, 5, 16],
        [16, 17, 6],
        [24, 32, 33],
        [33, 34, 24],
        [5, 4, 35],
        [75, 68, 71],
        [58, 67, 40],
        [40, 59, 58],
        [71, 76, 77],
        [77, 78, 71]
      ]
    },
    {
      "color": [205, 98, 0],
      "faces": [
        [24, 34, 18],
        [16, 13, 12],
        [12, 17, 16],
        [13, 16, 11],
        [71, 68, 76],
        [40, 67, 66],
        [66, 65, 40],
        [65, 64, 40]
      ]
    },
    {
      "color": [0, 0, 0],
      "faces": [
        [36, 15, 37],
        [37, 38, 36],
        [31, 39, 22],
        [22, 21, 31],
        [31, 15, 36],
        [36, 39, 31],
        [75, 69, 26],
        [26, 80, 75],
        [75, 80, 38],
        [38, 37, 75],
        [38, 80, 39],
        [39, 36, 38],
        [39, 80, 26],
        [26, 22, 39]
      ]
    },
    {
      "color": [247, 132, 25],
      "faces": [
        [17, 33, 10],
        [17, 18, 34],
        [34, 33, 17],
        [10, 6, 17],
        [11, 15, 31],
        [31, 18, 11],
        [18, 12, 11],
        [14, 16, 40],
        [40, 41, 14],
        [59, 5, 35],
        [35, 79, 59],
        [67, 63, 77],
        [67, 77, 76],
        [76, 68, 67],
        [63, 67, 58],
        [64, 68, 75],
        [75, 37, 64],
        [68, 64, 66],
        [14, 41, 37],
        [37, 15, 14],
        [5, 59, 40],
        [40, 16, 5]
      ]
    },
    {
      "color": [225, 119, 25],
      "faces": [
        [35, 4, 42],
        [4, 1, 42],
        [42, 43, 44],
        [44, 35, 42],
        [45, 43, 42],
        [42, 10, 45],
        [30, 32, 24],
        [24, 25, 30],
        [30, 33, 32],
        [33, 30, 10],
        [44, 43, 46],
        [43, 45, 47],
        [47, 46, 43],
        [48, 47, 45],
        [45, 30, 48],
        [30, 45, 10],
        [49, 42, 0],
        [8, 7, 42],
        [50, 42, 7],
        [50, 10, 42],
        [1, 0, 42],
        [42, 9, 8],
        [42, 49, 9],
        [64, 41, 40],
        [57, 59, 79],
        [79, 81, 57],
        [57, 81, 56],
        [82, 79, 35],
        [35, 44, 82],
        [81, 79, 82],
        [82, 83, 81],
        [84, 63, 81],
        [81, 83, 84],
        [44, 46, 85],
        [85, 82, 44],
        [52, 73, 71],
        [71, 78, 52],
        [52, 78, 77],
        [77, 63, 52],
        [82, 85, 83],
        [83, 85, 86],
        [86, 84, 83],
        [87, 52, 84],
        [84, 86, 87],
        [52, 63, 84],
        [88, 53, 81],
        [62, 81, 60],
        [89, 60, 81],
        [89, 81, 63],
        [56, 81, 53],
        [81, 62, 61],
        [81, 61, 88],
        [48, 87, 86],
        [86, 47, 48],
        [47, 86, 85],
        [85, 46, 47],
        [48, 30, 52],
        [52, 87, 48]
      ]
    }
  ]
}

      };
    };
  }
}, {package:"@metamask\\logo",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\logo\\fox.json",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\logo\\util.js", {"gl-mat4/invert":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\gl-mat4\\invert.js","gl-mat4/lookAt":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\gl-mat4\\lookAt.js","gl-mat4/multiply":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\gl-mat4\\multiply.js","gl-mat4/perspective":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\gl-mat4\\perspective.js","gl-mat4/rotate":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\gl-mat4\\rotate.js","gl-vec3/transformMat4":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\gl-vec3\\transformMat4.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@metamask\logo\util.js
      return function (require, module, exports) {
const perspective = require('gl-mat4/perspective');
const multiply = require('gl-mat4/multiply');
const lookAt = require('gl-mat4/lookAt');
const invert = require('gl-mat4/invert');
const rotate = require('gl-mat4/rotate');
const transform = require('gl-vec3/transformMat4');

const SVG_NS = 'http://www.w3.org/2000/svg';

// Taken from https://github.com/yuzhe-han/ParentNode-replaceChildren
// This is to support browsers that do not yet support `replaceChildren`
const replaceChildrenPonyfill = function (...addNodes) {
  while (this.lastChild) {
    this.removeChild(this.lastChild);
  }

  if (addNodes.length > 0) {
    this.append(...addNodes);
  }
};

module.exports = {
  calculateSizingOptions,
  createLogoViewer,
  createModelRenderer,
  loadModelFromJson,
  positionsFromModel,
  createPolygonsFromModelJson,
  createStandardModelPolygon,
  createMatrixComputer,
  compareZ,
  createFaceUpdater,
  createNode,
  setAttribute,
  setGradientDefinitions,
  setMaskDefinitions,
  svgElementToSvgImageContent,
  Polygon,
};

/**
 * A distance measurement used for SVG attributes. A length is specified as a number followed by a
 * unit identifier.
 *
 * See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Content_type#length} for further
 * information.
 *
 * @typedef {`${number}${'em' | 'ex' | 'px' | 'in' | 'cm' | 'mm' | 'pt' | 'pc' | '%'}`} SvgLength
 */

/**
 * A definition for a `<stop>` SVG element, which defines a color and the position for that color
 * on a gradient. This element is always a child of either a `<linearGradient>` or
 * `<radialGradient>` element.
 *
 * See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/stop} for more information
 * about the `<stop>` element.
 *
 * @typedef {object} StopDefinition
 * @property {number | `${number}%`} [offset] - The location of the gradient stop along the
 * gradient vector.
 * @property {string} [stop-color] - The color of the gradient stop. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/stop}.
 * @property {number} [stop-opacity] - The opacity of the gradient stop. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stop-opacity}.
 */

/**
 * A definition for a `<linearGradient>` SVG element. This definition includes all supported
 * `<linearGradient>` attributes, and it includes a `stops` property which is an array of
 * definitions for each `<stop>` child node.
 *
 * See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient} for more
 * information about the `<linearGradient>` element.
 *
 * @typedef {object} LinearGradientDefinition
 * @property {string} [gradientTransform] - A transform from the gradient coordinate system to the
 * target coordinate system. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientTransform}.
 * @property {'userSpaceOnUse' | 'objectBoundingBox'} [gradientUnits] - The coordinate system used.
 * for the coordinate attributes. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientUnits}.
 * @property {'pad' | 'reflect' | 'repeat'} [spreadMethod] - The method used to fill a shape beyond
 * the defined edges of a gradient. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/spreadMethod}.
 * @property {StopDefinition[]} [stops] - The colors of the gradient, and the position of each
 * color along the gradient vector.
 * @property {'linear'} type - The type of the gradient.
 * @property {SvgLength} [x1] - The x coordinate of the starting point of the vector gradient.
 * @property {SvgLength} [x2] - The x coordinate of the ending point of the vector gradient.
 * @property {SvgLength} [y1] - The y coordinate of the starting point of the vector gradient.
 * @property {SvgLength} [y2] - The y coordinate of the ending point of the vector gradient.
 */

/**
 * A definition for a `<radialGradient>` SVG element. This definition includes all supported
 * `<radialGradient>` attributes, and it includes a `stops` property which is an array of
 * definitions for each `<stop>` child node.
 *
 * See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/radialGradient} for more
 * information about the `<radialGradient>` element.
 *
 * @typedef {object} RadialGradientDefinition
 * @property {SvgLength} [cx] - The x coordinate of the end circle of the radial gradiant.
 * @property {SvgLength} [cy] - The y coordinate of the end circle of the radial gradient.
 * @property {SvgLength} [fr] - The radius of the start circle of the radial gradient.
 * @property {SvgLength} [fx] - The x coordinate of the start circle of the radial gradient.
 * @property {SvgLength} [fy] - The y coordinate of the start circle of the radial gradient.
 * @property {string} [gradientTransform] - A transform from the gradient coordinate system to the
 * target coordinate system. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientTransform}.
 * @property {'userSpaceOnUse' | 'objectBoundingBox'} [gradientUnits] - The coordinate system used
 * for the coordinate attributes. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientUnits}.
 * @property {SvgLength} [r] - The radius of the end circle of the radial gradient.
 * @property {'pad' | 'reflect' | 'repeat'} [spreadMethod] - The method used to fill a shape beyond
 * the defined edges of a gradient. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/spreadMethod}.
 * @property {StopDefinition[]} [stops] - The colors of the gradient, and the position of each
 * color along the gradient vector.
 * @property {'radial'} type - The type of the gradient.
 */

function createLogoViewer(
  container,
  renderScene,
  {
    followMouse = false,
    followMotion = false,
    slowDrift = false,
    lazyRender = true,
  } = {},
) {
  let shouldRender = true;
  const mouse = {
    x: 0,
    y: 0,
  };
  const lookCurrent = [0, 0];
  const lookRate = 0.3;

  // closes over scene state
  const renderCurrentScene = () => {
    updateLookCurrent();
    renderScene(lookCurrent, slowDrift);
  };

  function setLookAtTarget(target) {
    const bounds = container.getBoundingClientRect();
    mouse.x = 1.0 - (2.0 * (target.x - bounds.left)) / bounds.width;
    mouse.y = 1.0 - (2.0 * (target.y - bounds.top)) / bounds.height;
  }

  function stopAnimation() {
    shouldRender = false;
  }

  function startAnimation() {
    shouldRender = true;
  }

  function setFollowMouse(state) {
    // eslint-disable-next-line no-param-reassign
    followMouse = state;
  }

  function setFollowMotion(state) {
    // eslint-disable-next-line no-param-reassign
    followMotion = state;
  }

  window.addEventListener('mousemove', function (ev) {
    if (!shouldRender) {
      startAnimation();
    }

    if (followMouse) {
      setLookAtTarget({
        x: ev.clientX,
        y: ev.clientY,
      });
      renderCurrentScene();
    }
  });

  window.addEventListener('deviceorientation', function (event) {
    if (!shouldRender) {
      startAnimation();
    }

    if (followMotion) {
      // gamma: left to right
      const leftToRight = event.gamma;
      // beta: front back motion
      const frontToBack = event.beta;
      // x offset: needed to correct the intial position
      const xOffset = 200;
      // y offset: needed to correct the intial position
      const yOffset = -300;
      // acceleration
      const acceleration = 10;

      setLookAtTarget({
        x: xOffset + leftToRight * acceleration,
        y: yOffset + frontToBack * acceleration,
      });
      renderCurrentScene();
    }
  });

  function lookAtAndRender(target) {
    // update look target
    setLookAtTarget(target);
    // this should prolly just call updateLookCurrent or set lookCurrent values to eaxactly lookTarget
    // but im not really sure why its different, so im leaving it alone
    lookCurrent[0] = mouse.x;
    lookCurrent[1] = mouse.y + 0.085 / lookRate;
    renderCurrentScene();
  }

  function renderLoop() {
    if (!shouldRender) {
      return;
    }
    window.requestAnimationFrame(renderLoop);
    renderCurrentScene();
  }

  function updateLookCurrent() {
    const li = 1.0 - lookRate;
    lookCurrent[0] = li * lookCurrent[0] + lookRate * mouse.x;
    lookCurrent[1] = li * lookCurrent[1] + lookRate * mouse.y + 0.085;
  }

  if (lazyRender) {
    renderCurrentScene();
  } else {
    renderLoop();
  }

  return {
    container,
    lookAt: setLookAtTarget,
    setFollowMouse,
    setFollowMotion,
    stopAnimation,
    startAnimation,
    lookAtAndRender,
    renderCurrentScene,
  };
}

function loadModelFromJson(
  modelJson,
  createSvgPolygon = createStandardModelPolygon,
) {
  const vertCount = modelJson.positions.length;
  const positions = new Float32Array(3 * vertCount);
  const transformed = new Float32Array(3 * vertCount);
  const { polygons, polygonsByChunk } = createPolygonsFromModelJson(
    modelJson,
    createSvgPolygon,
  );
  positionsFromModel(positions, modelJson);
  const updatePositions = createPositionUpdater(
    positions,
    transformed,
    vertCount,
  );
  const modelObj = {
    updatePositions,
    positions,
    transformed,
    polygons,
    polygonsByChunk,
  };
  return modelObj;
}

function createModelRenderer(container, cameraDistance, modelObj) {
  const { updatePositions, transformed, polygons } = modelObj;

  for (const polygon of polygons) {
    container.appendChild(polygon.svg);
  }

  const computeMatrix = createMatrixComputer(cameraDistance);
  const updateFaces = createFaceUpdater(container, polygons, transformed);

  return (rect, lookPos, slowDrift) => {
    const matrix = computeMatrix(rect, lookPos, slowDrift);
    updatePositions(matrix);
    updateFaces(rect, container, polygons, transformed);
  };
}

function positionsFromModel(positions, modelJson) {
  const pp = modelJson.positions;
  let ptr = 0;
  for (let i = 0; i < pp.length; ++i) {
    const p = pp[i];
    for (let j = 0; j < 3; ++j) {
      positions[ptr] = p[j];
      ptr += 1;
    }
  }
}

function createPolygonsFromModelJson(modelJson, createSvgPolygon) {
  const polygons = [];
  const polygonsByChunk = modelJson.chunks.map((chunk, index) => {
    const { faces } = chunk;
    return faces.map((face) => {
      const svgPolygon = createSvgPolygon(chunk, {
        gradients: modelJson.gradients,
        index,
        masks: modelJson.masks,
      });
      const polygon = new Polygon(svgPolygon, face);
      polygons.push(polygon);
      return polygon;
    });
  });
  return { polygons, polygonsByChunk };
}

/**
 * Create an SVG `<polygon> element.
 *
 * This polygon is assigned the correct `fill` and `stroke` attributes, according to the chunk
 * definition provided. But the `points` attribute is always set to a dummy value, as it gets reset
 * later to the correct position during each render loop.
 *
 * @param {object} chunk - The definition for the chunk of the model this polygon is a part of.
 * This includes the color or gradient to apply to the polygon.
 * @param {object} options - Polygon options.
 * @param {(LinearGradientDefinition | RadialGradientDefinition)[]} [options.gradients] - The set of
 * all gradient definitions used in this model.
 * @param options.index - The index for the chunk this polygon is found in.
 * @returns {Element} The `<polygon>` SVG element.
 */
function createStandardModelPolygon(chunk, { gradients = {}, index, masks }) {
  const svgPolygon = createNode('polygon');

  if (chunk.gradient && chunk.color) {
    throw new Error(
      `Both gradient and color for chunk '${index}'. These options are mutually exclusive.`,
    );
  } else if (chunk.gradient) {
    const gradientId = chunk.gradient;
    if (!gradients[gradientId]) {
      throw new Error(`Gradient ID not found: '${gradientId}'`);
    }

    setAttribute(svgPolygon, 'fill', `url('#${gradientId}')`);
    setAttribute(svgPolygon, 'stroke', `url('#${gradientId}')`);
  } else {
    const fill =
      typeof chunk.color === 'string' ? chunk.color : `rgb(${chunk.color})`;
    setAttribute(svgPolygon, 'fill', fill);
    setAttribute(svgPolygon, 'stroke', fill);
  }

  if (chunk.mask) {
    if (!masks[chunk.mask]) {
      throw new Error(`Mask ID not found: '${chunk.mask}'`);
    }
    setAttribute(svgPolygon, 'mask', `url('#${chunk.mask}')`);
  }

  setAttribute(svgPolygon, 'points', '0,0, 10,0, 0,10');
  return svgPolygon;
}

function createMatrixComputer(distance) {
  const objectCenter = new Float32Array(3);
  const up = new Float32Array([0, 1, 0]);
  const projection = new Float32Array(16);
  const model = new Float32Array(16);
  const view = lookAt(
    new Float32Array(16),
    new Float32Array([0, 0, distance]),
    objectCenter,
    up,
  );
  const invView = invert(new Float32Array(16), view);
  const invProjection = new Float32Array(16);
  const target = new Float32Array(3);
  const transformedMatrix = new Float32Array(16);

  const X = new Float32Array([1, 0, 0]);
  const Y = new Float32Array([0, 1, 0]);
  const Z = new Float32Array([0, 0, 1]);

  return (rect, lookPos, slowDrift) => {
    const viewportWidth = rect.width;
    const viewportHeight = rect.height;
    perspective(
      projection,
      Math.PI / 4.0,
      viewportWidth / viewportHeight,
      100.0,
      1000.0,
    );
    invert(invProjection, projection);
    target[0] = lookPos[0];
    target[1] = lookPos[1];
    target[2] = 1.2;
    transform(target, target, invProjection);
    transform(target, target, invView);
    lookAt(model, objectCenter, target, up);

    // this shouldnt operate directly on the matrix/model,
    // it should likely operate on the lookPos
    // if we do want to operate on the matrix/model, it shouldnt happen here
    if (slowDrift) {
      const time = Date.now() / 1000.0;
      rotate(model, model, 0.1 + Math.sin(time / 3) * 0.2, X);
      rotate(model, model, -0.1 + Math.sin(time / 2) * 0.03, Z);
      rotate(model, model, 0.5 + Math.sin(time / 3) * 0.2, Y);
    }

    multiply(transformedMatrix, projection, view);
    multiply(transformedMatrix, transformedMatrix, model);

    return transformedMatrix;
  };
}

function createPositionUpdater(positions, transformed, vertCount) {
  return (M) => {
    const m00 = M[0];
    const m01 = M[1];
    const m02 = M[2];
    const m03 = M[3];
    const m10 = M[4];
    const m11 = M[5];
    const m12 = M[6];
    const m13 = M[7];
    const m20 = M[8];
    const m21 = M[9];
    const m22 = M[10];
    const m23 = M[11];
    const m30 = M[12];
    const m31 = M[13];
    const m32 = M[14];
    const m33 = M[15];

    for (let i = 0; i < vertCount; ++i) {
      const x = positions[3 * i];
      const y = positions[3 * i + 1];
      const z = positions[3 * i + 2];

      const tw = x * m03 + y * m13 + z * m23 + m33;
      transformed[3 * i] = (x * m00 + y * m10 + z * m20 + m30) / tw;
      transformed[3 * i + 1] = (x * m01 + y * m11 + z * m21 + m31) / tw;
      transformed[3 * i + 2] = (x * m02 + y * m12 + z * m22 + m32) / tw;
    }
  };
}

function compareZ(a, b) {
  return b.zIndex - a.zIndex;
}

function createFaceUpdater(container, polygons, transformed) {
  const toDraw = [];
  return (rect) => {
    let i;
    const w = rect.width;
    const h = rect.height;
    toDraw.length = 0;
    for (i = 0; i < polygons.length; ++i) {
      const poly = polygons[i];
      const { indices } = poly;

      const i0 = indices[0];
      const i1 = indices[1];
      const i2 = indices[2];
      const ax = transformed[3 * i0];
      const ay = transformed[3 * i0 + 1];
      const bx = transformed[3 * i1];
      const by = transformed[3 * i1 + 1];
      const cx = transformed[3 * i2];
      const cy = transformed[3 * i2 + 1];
      const det = (bx - ax) * (cy - ay) - (by - ay) * (cx - ax);
      if (det < 0) {
        continue;
      }

      const points = [];
      let zmax = -Infinity;
      let zmin = Infinity;
      const element = poly.svg;
      for (let j = 0; j < 3; ++j) {
        const idx = indices[j];
        points.push(
          `${0.5 * w * (1.0 - transformed[3 * idx])},${
            0.5 * h * (1.0 - transformed[3 * idx + 1])
          }`,
        );
        const z = transformed[3 * idx + 2];
        zmax = Math.max(zmax, z);
        zmin = Math.min(zmin, z);
      }
      poly.zIndex = zmax + 0.25 * zmin;
      const joinedPoints = points.join(' ');

      if (joinedPoints.indexOf('NaN') === -1) {
        setAttribute(element, 'points', joinedPoints);
      }

      toDraw.push(poly);
    }
    toDraw.sort(compareZ);

    const newPolygons = toDraw.map((poly) => poly.svg);
    const defs = container.getElementsByTagName('defs');
    const maskChildren = container.getElementsByTagName('mask');
    if (container.replaceChildren) {
      container.replaceChildren(...defs, ...maskChildren, ...newPolygons);
    } else {
      replaceChildrenPonyfill.bind(container)(
        ...defs,
        ...maskChildren,
        ...newPolygons,
      );
    }
  };
}

function calculateSizingOptions(options = {}) {
  let width = options.width || 400;
  let height = options.height || 400;

  if (!options.pxNotRatio) {
    width = Math.floor(window.innerWidth * (options.width || 0.25));
    height = Math.floor(window.innerHeight * options.height || width);

    if ('minWidth' in options && width < options.minWidth) {
      width = options.minWidth;
      height = Math.floor((options.minWidth * options.height) / options.width);
    }
  }
  return { width, height };
}

function createNode(type) {
  return document.createElementNS(SVG_NS, type);
}

function setAttribute(node, attribute, value) {
  node.setAttributeNS(null, attribute, value);
}

function svgElementToSvgImageContent(svgElement) {
  const inner = svgElement.innerHTML;
  const head =
    `<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"> ` +
    `<svg width="521px" height="521px" version="1.1" baseProfile="full" xmlns="${SVG_NS}" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events">`;
  const foot = '</svg>';
  const content = head + inner + foot;
  return content;
}

function Polygon(svg, indices) {
  this.svg = svg;
  this.indices = indices;
  this.zIndex = 0;
}

/**
 * Parse gradient definitions and construct them in the DOM.
 *
 * Both `<linearGradient>` and `<radialGradient>` are supported. All gradients get added to a
 * `<defs>` element that is added as a direct child of the container element.
 *
 * @param {Element} container - The `<svg>` HTML element that the definitions should be added to.
 * @param {(LinearGradientDefinition | RadialGradientDefinition)[]} [gradients] - The gradient definitions.
 */
function setGradientDefinitions(container, gradients) {
  if (!gradients || Object.keys(gradients).length === 0) {
    return;
  }

  const defsContainer = createNode('defs');

  const linearCoordinateAttributes = ['x1', 'x2', 'y1', 'y2'];
  const radialCoordinateAttributes = ['cx', 'cy', 'fr', 'fx', 'fy', 'r'];
  const commonAttributes = [
    'gradientTransform',
    'gradientUnits',
    'spreadMethod',
    'stops',
    'type',
  ];
  const allLinearAttributes = [
    ...linearCoordinateAttributes,
    ...commonAttributes,
  ];
  const allRadialAttributes = [
    ...radialCoordinateAttributes,
    ...commonAttributes,
  ];

  for (const [gradientId, gradientDefinition] of Object.entries(gradients)) {
    let gradient;
    if (gradientDefinition.type === 'linear') {
      gradient = createNode('linearGradient');

      const unsupportedLinearAttribute = Object.keys(gradientDefinition).find(
        (attribute) => !allLinearAttributes.includes(attribute),
      );
      if (unsupportedLinearAttribute) {
        throw new Error(
          `Unsupported linear gradient attribute: '${unsupportedLinearAttribute}'`,
        );
      } else if (
        linearCoordinateAttributes.some(
          (attributeName) => gradientDefinition[attributeName] !== undefined,
        )
      ) {
        const missingAttributes = linearCoordinateAttributes.filter(
          (attributeName) => gradientDefinition[attributeName] === undefined,
        );
        if (missingAttributes.length > 0) {
          throw new Error(
            `Missing coordinate attributes: '${missingAttributes.join(', ')}'`,
          );
        }

        for (const attribute of linearCoordinateAttributes) {
          if (typeof gradientDefinition[attribute] !== 'string') {
            throw new Error(
              `Type of '${attribute}' option expected to be 'string'. Instead received type '${typeof gradientDefinition[
                attribute
              ]}'`,
            );
          }
          setAttribute(gradient, attribute, gradientDefinition[attribute]);
        }
      }
    } else if (gradientDefinition.type === 'radial') {
      gradient = createNode('radialGradient');

      const presentCoordinateAttributes = radialCoordinateAttributes.filter(
        (attributeName) => gradientDefinition[attributeName] !== undefined,
      );
      const unsupportedRadialAttribute = Object.keys(gradientDefinition).find(
        (attribute) => !allRadialAttributes.includes(attribute),
      );
      if (unsupportedRadialAttribute) {
        throw new Error(
          `Unsupported radial gradient attribute: '${unsupportedRadialAttribute}'`,
        );
      } else if (presentCoordinateAttributes.length > 0) {
        for (const attribute of presentCoordinateAttributes) {
          if (typeof gradientDefinition[attribute] !== 'string') {
            throw new Error(
              `Type of '${attribute}' option expected to be 'string'. Instead received type '${typeof gradientDefinition[
                attribute
              ]}'`,
            );
          }
          setAttribute(gradient, attribute, gradientDefinition[attribute]);
        }
      }
    } else {
      throw new Error(
        `Unsupported gradient type: '${gradientDefinition.type}'`,
      );
    }

    // Set common attributes
    setAttribute(gradient, 'id', gradientId);
    if (gradientDefinition.gradientUnits !== undefined) {
      if (
        !['userSpaceOnUse', 'objectBoundingBox'].includes(
          gradientDefinition.gradientUnits,
        )
      ) {
        throw new Error(
          `Unrecognized value for 'gradientUnits' attribute: '${gradientDefinition.gradientUnits}'`,
        );
      }
      setAttribute(gradient, 'gradientUnits', gradientDefinition.gradientUnits);
    }

    if (gradientDefinition.gradientTransform !== undefined) {
      if (typeof gradientDefinition.gradientTransform !== 'string') {
        throw new Error(
          `Type of 'gradientTransform' option expected to be 'string'. Instead received type '${typeof gradientDefinition.gradientTransform}'`,
        );
      }

      setAttribute(
        gradient,
        'gradientTransform',
        gradientDefinition.gradientTransform,
      );
    }

    if (gradientDefinition.spreadMethod !== undefined) {
      if (
        !['pad', 'reflect', 'repeat'].includes(gradientDefinition.spreadMethod)
      ) {
        throw new Error(
          `Unrecognized value for 'spreadMethod' attribute: '${gradientDefinition.spreadMethod}'`,
        );
      }
      setAttribute(gradient, 'spreadMethod', gradientDefinition.spreadMethod);
    }

    if (gradientDefinition.stops !== undefined) {
      if (!Array.isArray(gradientDefinition.stops)) {
        throw new Error(`The 'stop' attribute must be an array`);
      }

      for (const stopDefinition of gradientDefinition.stops) {
        if (typeof stopDefinition !== 'object') {
          throw new Error(
            `Each entry in the 'stop' attribute must be an object. Instead received type '${typeof stopDefinition}'`,
          );
        }
        const stop = createNode('stop');

        if (stopDefinition.offset !== undefined) {
          setAttribute(stop, 'offset', stopDefinition.offset);
        }

        if (stopDefinition['stop-color'] !== undefined) {
          setAttribute(stop, 'stop-color', stopDefinition['stop-color']);
        }

        if (stopDefinition['stop-opacity'] !== undefined) {
          setAttribute(stop, 'stop-opacity', stopDefinition['stop-opacity']);
        }

        gradient.appendChild(stop);
      }
    }

    defsContainer.appendChild(gradient);
  }

  container.appendChild(defsContainer);
}

/**
 * The properties of a single SVG mask.
 *
 * @typedef MaskDefinition
 * @property {string} color - The color or gradient to apply to the mask.
 */

/**
 * Parse mask definitions and construct them in the DOM.
 *
 * The `<mask>` element contains a single rectangle that should cover the full extent of the SVG
 * model. The color of this rectangle can be set to single color or a gradient. Anything the mask
 * is applied to will be invisible if under a black pixel, visible if under a white pixel, and
 * partially translucent if under a pixel that is between white and black.
 *
 * Later this could be extended to include custom paths and other shapes, rather than just a single
 * rectangle.
 *
 * @param options - The mask options.
 * @param {Element} options.container - The `<svg>` HTML element that the mask should be added to.
 * @param {Record<string, MaskDefinition>} [options.masks] - The gradient definitions.
 * @param {number} options.height - The height of the SVG container.
 * @param {number} options.width - The width of the SVG container.
 */
function setMaskDefinitions({ container, masks, height, width }) {
  if (!masks || Object.keys(masks).length === 0) {
    return;
  }

  for (const [maskId, maskDefinition] of Object.entries(masks)) {
    const mask = createNode('mask');
    setAttribute(mask, 'id', maskId);

    const maskedRect = createNode('rect');

    // Extend mask beyond container to ensure it completely covers the model.
    // The model can extend beyond the container as well.
    setAttribute(maskedRect, 'width', width * 1.5);
    setAttribute(maskedRect, 'height', height * 1.5);
    setAttribute(maskedRect, 'x', `-${Math.floor(width / 4)}`);
    setAttribute(maskedRect, 'y', `-${Math.floor(height / 4)}`);

    setAttribute(maskedRect, 'fill', maskDefinition.color);
    mask.appendChild(maskedRect);

    container.appendChild(mask);
  }
}

      };
    };
  }
}, {package:"@metamask\\logo",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@metamask\\logo\\util.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\chain-function\\index.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\chain-function\index.js
      return function (require, module, exports) {

module.exports = function chain(){
  var len = arguments.length
  var args = [];

  for (var i = 0; i < len; i++)
    args[i] = arguments[i]

  args = args.filter(function(fn){ return fn != null })

  if (args.length === 0) return undefined
  if (args.length === 1) return args[0]

  return args.reduce(function(current, next){
    return function chainedFunction() {
      current.apply(this, arguments);
      next.apply(this, arguments);
    };
  })
}

      };
    };
  }
}, {package:"chain-function",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\chain-function\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\node_modules\\warning\\browser.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-transition-group\node_modules\warning\browser.js
      return function (require, module, exports) {
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if ("development" !== 'production') {
  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' +
        format.replace(/%s/g, function() {
          return args[argIndex++];
        });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

module.exports = warning;

      };
    };
  }
}, {package:"warning",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\node_modules\\warning\\browser.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\utils\\ChildMapping.js", {"react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\react-transition-group\utils\ChildMapping.js
      return function (require, module, exports) {
'use strict';

exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;

var _react = require('react');

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children) {
  if (!children) {
    return children;
  }
  var result = {};
  _react.Children.map(children, function (child) {
    return child;
  }).forEach(function (child) {
    result[child.key] = child;
  });
  return result;
}

/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    if (next.hasOwnProperty(key)) {
      return next[key];
    }

    return prev[key];
  }

  // For each key of `next`, the list of keys to insert before that key in
  // the combined list
  var nextKeysPending = {};

  var pendingKeys = [];
  for (var prevKey in prev) {
    if (next.hasOwnProperty(prevKey)) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i = void 0;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending.hasOwnProperty(nextKey)) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }

  // Finally, add the keys which didn't appear before any key in `next`
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}
      };
    };
  }
}, {package:"react-transition-group",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-transition-group\\utils\\ChildMapping.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\class\\removeClass.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\dom-helpers\class\removeClass.js
      return function (require, module, exports) {
'use strict';

function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}

module.exports = function removeClass(element, className) {
  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
};
      };
    };
  }
}, {package:"dom-helpers",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\class\\removeClass.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\util\\requestAnimationFrame.js", {"./inDOM":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\util\\inDOM.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\dom-helpers\util\requestAnimationFrame.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _inDOM = _interopRequireDefault(require("./inDOM"));

var vendors = ['', 'webkit', 'moz', 'o', 'ms'];
var cancel = 'clearTimeout';
var raf = fallback;
var compatRaf;

var getKey = function getKey(vendor, k) {
  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';
};

if (_inDOM.default) {
  vendors.some(function (vendor) {
    var rafKey = getKey(vendor, 'request');

    if (rafKey in window) {
      cancel = getKey(vendor, 'cancel');
      return raf = function raf(cb) {
        return window[rafKey](cb);
      };
    }
  });
}
/* https://github.com/component/raf */


var prev = new Date().getTime();

function fallback(fn) {
  var curr = new Date().getTime(),
      ms = Math.max(0, 16 - (curr - prev)),
      req = setTimeout(fn, ms);
  prev = curr;
  return req;
}

compatRaf = function compatRaf(cb) {
  return raf(cb);
};

compatRaf.cancel = function (id) {
  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);
};

var _default = compatRaf;
exports.default = _default;
module.exports = exports["default"];
      };
    };
  }
}, {package:"dom-helpers",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\util\\requestAnimationFrame.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\class\\addClass.js", {"./hasClass":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\class\\hasClass.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\dom-helpers\class\addClass.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = addClass;

var _hasClass = _interopRequireDefault(require("./hasClass"));

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
}

module.exports = exports["default"];
      };
    };
  }
}, {package:"dom-helpers",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\class\\addClass.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\transition\\properties.js", {"../util/inDOM":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\util\\inDOM.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\dom-helpers\transition\properties.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = void 0;

var _inDOM = _interopRequireDefault(require("../util/inDOM"));

var transform = 'transform';
exports.transform = transform;
var prefix, transitionEnd, animationEnd;
exports.animationEnd = animationEnd;
exports.transitionEnd = transitionEnd;
var transitionProperty, transitionDuration, transitionTiming, transitionDelay;
exports.transitionDelay = transitionDelay;
exports.transitionTiming = transitionTiming;
exports.transitionDuration = transitionDuration;
exports.transitionProperty = transitionProperty;
var animationName, animationDuration, animationTiming, animationDelay;
exports.animationDelay = animationDelay;
exports.animationTiming = animationTiming;
exports.animationDuration = animationDuration;
exports.animationName = animationName;

if (_inDOM.default) {
  var _getTransitionPropert = getTransitionProperties();

  prefix = _getTransitionPropert.prefix;
  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;
  exports.transform = transform = prefix + "-" + transform;
  exports.transitionProperty = transitionProperty = prefix + "-transition-property";
  exports.transitionDuration = transitionDuration = prefix + "-transition-duration";
  exports.transitionDelay = transitionDelay = prefix + "-transition-delay";
  exports.transitionTiming = transitionTiming = prefix + "-transition-timing-function";
  exports.animationName = animationName = prefix + "-animation-name";
  exports.animationDuration = animationDuration = prefix + "-animation-duration";
  exports.animationTiming = animationTiming = prefix + "-animation-delay";
  exports.animationDelay = animationDelay = prefix + "-animation-timing-function";
}

var _default = {
  transform: transform,
  end: transitionEnd,
  property: transitionProperty,
  timing: transitionTiming,
  delay: transitionDelay,
  duration: transitionDuration
};
exports.default = _default;

function getTransitionProperties() {
  var style = document.createElement('div').style;
  var vendorMap = {
    O: function O(e) {
      return "o" + e.toLowerCase();
    },
    Moz: function Moz(e) {
      return e.toLowerCase();
    },
    Webkit: function Webkit(e) {
      return "webkit" + e;
    },
    ms: function ms(e) {
      return "MS" + e;
    }
  };
  var vendors = Object.keys(vendorMap);
  var transitionEnd, animationEnd;
  var prefix = '';

  for (var i = 0; i < vendors.length; i++) {
    var vendor = vendors[i];

    if (vendor + "TransitionProperty" in style) {
      prefix = "-" + vendor.toLowerCase();
      transitionEnd = vendorMap[vendor]('TransitionEnd');
      animationEnd = vendorMap[vendor]('AnimationEnd');
      break;
    }
  }

  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';
  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';
  style = null;
  return {
    animationEnd: animationEnd,
    transitionEnd: transitionEnd,
    prefix: prefix
  };
}
      };
    };
  }
}, {package:"dom-helpers",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\dom-helpers\\transition\\properties.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\menu\\menu-item.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\menu\menu-item.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

const MenuItem = ({
  children,
  className,
  'data-testid': dataTestId,
  iconClassName,
  onClick,
  subtitle
}) => /*#__PURE__*/_react.default.createElement("button", {
  className: (0, _classnames.default)('menu-item', className),
  "data-testid": dataTestId,
  onClick: onClick
}, iconClassName ? /*#__PURE__*/_react.default.createElement("i", {
  className: (0, _classnames.default)('menu-item__icon', iconClassName)
}) : null, /*#__PURE__*/_react.default.createElement("span", null, children), subtitle);

MenuItem.propTypes = {
  children: _propTypes.default.node.isRequired,
  className: _propTypes.default.string,
  'data-testid': _propTypes.default.string,
  iconClassName: _propTypes.default.string,
  onClick: _propTypes.default.func,
  subtitle: _propTypes.default.node
};
MenuItem.defaultProps = {
  className: undefined,
  'data-testid': undefined,
  iconClassName: undefined,
  onClick: undefined,
  subtitle: undefined
};
var _default = MenuItem;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\menu\\menu-item.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\menu\\menu.js", {"@babel/runtime/helpers/extends":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\extends.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-dom":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-dom\\index.js","react-popper":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-popper\\lib\\cjs\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\menu\menu.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = require("react-dom");

var _reactPopper = require("react-popper");

var _classnames = _interopRequireDefault(require("classnames"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const Menu = ({
  anchorElement,
  children,
  className,
  onHide,
  popperOptions
}) => {
  const [popperElement, setPopperElement] = (0, _react.useState)(null);
  const popoverContainerElement = (0, _react.useRef)(document.getElementById('popover-content'));
  const {
    attributes,
    styles
  } = (0, _reactPopper.usePopper)(anchorElement, popperElement, popperOptions);
  return /*#__PURE__*/(0, _reactDom.createPortal)( /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "menu__background",
    onClick: onHide
  }), /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    className: (0, _classnames.default)('menu__container', className),
    ref: setPopperElement,
    style: styles.popper
  }, attributes.popper), children)), popoverContainerElement.current);
};

Menu.propTypes = {
  anchorElement: _propTypes.default.instanceOf(window.Element),
  children: _propTypes.default.node.isRequired,
  className: _propTypes.default.string,
  onHide: _propTypes.default.func.isRequired,
  popperOptions: _propTypes.default.object
};
Menu.defaultProps = {
  anchorElement: undefined,
  className: undefined,
  popperOptions: undefined
};
var _default = Menu;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\menu\\menu.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\hardware.js", {}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\helpers\utils\hardware.js
      return function (require, module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHardwareKeyring = isHardwareKeyring;

function isHardwareKeyring(keyringType = '') {
  return keyringType.includes('Hardware');
}

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\hardware.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\swap-icon.component.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\icon\swap-icon.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SwapIcon;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function SwapIcon({
  width = '17',
  height = '17',
  color = 'white'
}) {
  return /*#__PURE__*/_react.default.createElement("svg", {
    width: width,
    height: height,
    viewBox: `0 0 ${width} ${height}`,
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M13.1714 9.66035V12.3786H4.68253C4.51685 12.3786 4.38253 12.2443 4.38253 12.0786V10.5478C4.38253 10.1888 3.94605 10.0116 3.69574 10.269L0.978328 13.0641C0.827392 13.2193 0.827392 13.4665 0.978328 13.6217L3.69573 16.4168C3.94604 16.6742 4.38253 16.497 4.38253 16.1379V14.6072C4.38253 14.4415 4.51685 14.3072 4.68253 14.3072H14.9992H15.0492V14.2572V9.66035C15.0492 9.14182 14.6288 8.72146 14.1103 8.72146C13.5918 8.72146 13.1714 9.14182 13.1714 9.66035ZM2.55476 2.55003H2.50476V2.60003V7.19686C2.50476 7.71539 2.92511 8.13575 3.44364 8.13575C3.96218 8.13575 4.38253 7.71539 4.38253 7.19686V4.70619C4.38253 4.5805 4.48443 4.47861 4.61012 4.47861H12.8714C13.0371 4.47861 13.1714 4.61292 13.1714 4.77861V6.30937C13.1714 6.66845 13.6079 6.84566 13.8582 6.5882L16.5756 3.79315C16.7266 3.6379 16.7266 3.39074 16.5756 3.23549L13.8582 0.440443C13.6079 0.182981 13.1714 0.360188 13.1714 0.719273V2.25004C13.1714 2.41572 13.0371 2.55003 12.8714 2.55003H2.55476Z",
    fill: color,
    stroke: color,
    strokeWidth: "0.1"
  }));
}

SwapIcon.propTypes = {
  /**
   * Width of the icon
   */
  width: _propTypes.default.string,

  /**
   * Height of the icon
   */
  height: _propTypes.default.string,

  /**
   * Color of the icon should be a valid design system color
   */
  color: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\swap-icon.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\overview-send-icon.component.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\icon\overview-send-icon.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SwapIcon;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function SwapIcon({
  width = '15',
  height = '15',
  fill = 'white'
}) {
  return /*#__PURE__*/_react.default.createElement("svg", {
    width: width,
    height: height,
    viewBox: `0 0 ${width} ${height}`,
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M13.6827 0.889329C13.6458 0.890495 13.609 0.893722 13.5725 0.898996H7.76263C7.40564 0.893947 7.07358 1.08151 6.89361 1.38986C6.71364 1.69821 6.71364 2.07958 6.89361 2.38793C7.07358 2.69628 7.40564 2.88384 7.76263 2.87879H11.3124L1.12335 13.0678C0.864749 13.3161 0.760577 13.6848 0.851011 14.0315C0.941446 14.3786 1.21235 14.6495 1.55926 14.7399C1.90616 14.8303 2.27485 14.7262 2.52313 14.4676L12.7121 4.27857V7.82829C12.7071 8.18528 12.8946 8.51734 13.203 8.69731C13.5113 8.87728 13.8927 8.87728 14.2011 8.69731C14.5094 8.51734 14.697 8.18528 14.6919 7.82829V2.01457C14.7318 1.7261 14.6427 1.43469 14.4483 1.2179C14.2538 1.00111 13.9738 0.880924 13.6827 0.889329Z",
    fill: fill
  }));
}

SwapIcon.propTypes = {
  /**
   * Width of the icon
   */
  width: _propTypes.default.string,

  /**
   * Height of the icon
   */
  height: _propTypes.default.string,

  /**
   * Fill  of the icon should be a valid design system color
   */
  fill: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\overview-send-icon.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\wallet-overview\\wallet-overview.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\wallet-overview\wallet-overview.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

const WalletOverview = ({
  balance,
  buttons,
  className,
  icon
}) => {
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('wallet-overview', className)
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "wallet-overview__balance"
  }, icon, balance), /*#__PURE__*/_react.default.createElement("div", {
    className: "wallet-overview__buttons"
  }, buttons));
};

WalletOverview.propTypes = {
  balance: _propTypes.default.element.isRequired,
  buttons: _propTypes.default.element.isRequired,
  className: _propTypes.default.string,
  icon: _propTypes.default.element.isRequired
};
WalletOverview.defaultProps = {
  className: undefined
};
var _default = WalletOverview;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\wallet-overview\\wallet-overview.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-button\\index.js", {"./icon-button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-button\\icon-button.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\icon-button\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _iconButton.default;
  }
});

var _iconButton = _interopRequireDefault(require("./icon-button"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-button\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\overview-buy-icon.component.js", {"@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\icon\overview-buy-icon.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BuyIcon;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function BuyIcon({
  width = '17',
  height = '21',
  fill = 'white'
}) {
  return /*#__PURE__*/_react.default.createElement("svg", {
    width: width,
    height: height,
    viewBox: `0 0 ${width} ${height}`,
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M8.62829 14.3216C8.65369 14.2947 8.67756 14.2664 8.69978 14.2368L12.8311 10.1286C13.0886 9.87975 13.1913 9.51233 13.1 9.16703C13.0087 8.82174 12.7375 8.55207 12.3903 8.46129C12.0431 8.37051 11.6736 8.47268 11.4233 8.72869L8.89913 11.2387L8.89913 1.3293C8.90647 0.970874 8.71837 0.636511 8.40739 0.455161C8.0964 0.273811 7.71112 0.27381 7.40014 0.45516C7.08915 0.636511 6.90105 0.970873 6.90839 1.3293L6.90839 11.2387L4.38422 8.72869C4.13396 8.47268 3.76446 8.37051 3.41722 8.46129C3.06998 8.55207 2.79879 8.82174 2.7075 9.16703C2.61621 9.51233 2.71896 9.87975 2.97641 10.1286L7.11049 14.2395C7.28724 14.4717 7.55784 14.6148 7.85026 14.6306C8.14268 14.6464 8.42727 14.5333 8.62829 14.3216Z",
    fill: fill
  }), /*#__PURE__*/_react.default.createElement("rect", {
    x: "0.260986",
    y: "15.75",
    width: "15.8387",
    height: "2.25",
    rx: "1",
    fill: "white"
  }));
}

BuyIcon.propTypes = {
  /**
   * Width of the icon
   */
  width: _propTypes.default.string,

  /**
   * Height of the icon
   */
  height: _propTypes.default.string,

  /**
   * Fill  of the icon should be a valid design system color
   */
  fill: _propTypes.default.string
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon\\overview-buy-icon.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-list-item\\index.js", {"./transaction-list-item.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-list-item\\transaction-list-item.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\transaction-list-item\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _transactionListItem.default;
  }
});

var _transactionListItem = _interopRequireDefault(require("./transaction-list-item.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-list-item\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-list-item\\smart-transaction-list-item.component.js", {"../../../../shared/constants/transaction":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\transaction.js","../../../ducks/swaps/swaps":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\ducks\\swaps\\swaps.js","../../../helpers/utils/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\util.js","../../../hooks/useI18nContext":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\hooks\\useI18nContext.js","../../ui/list-item":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\list-item\\index.js","../cancel-button":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\cancel-button\\index.js","../transaction-icon":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-icon\\index.js","../transaction-status/transaction-status.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-status\\transaction-status.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js","react-redux":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react-redux\\lib\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\transaction-list-item\smart-transaction-list-item.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SmartTransactionListItem;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _listItem = _interopRequireDefault(require("../../ui/list-item"));

var _transactionStatus = _interopRequireDefault(require("../transaction-status/transaction-status.component"));

var _transactionIcon = _interopRequireDefault(require("../transaction-icon"));

var _useI18nContext = require("../../../hooks/useI18nContext");

var _util = require("../../../helpers/utils/util");

var _transaction = require("../../../../shared/constants/transaction");

var _cancelButton = _interopRequireDefault(require("../cancel-button"));

var _swaps = require("../../../ducks/swaps/swaps");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function SmartTransactionListItem({
  smartTransaction,
  isEarliestNonce = false
}) {
  const dispatch = (0, _reactRedux.useDispatch)();
  const t = (0, _useI18nContext.useI18nContext)();
  const [cancelSwapLinkClicked, setCancelSwapLinkClicked] = (0, _react.useState)(false);
  const {
    sourceTokenSymbol,
    destinationTokenSymbol,
    time,
    status
  } = smartTransaction;
  const category = _transaction.TRANSACTION_GROUP_CATEGORIES.SWAP;
  const title = t('swapTokenToToken', [sourceTokenSymbol, destinationTokenSymbol]);
  const subtitle = 'metamask';
  const date = (0, _util.formatDateWithYearContext)(time);
  let displayedStatusKey;

  if (status === _transaction.SMART_TRANSACTION_STATUSES.PENDING) {
    displayedStatusKey = _transaction.TRANSACTION_GROUP_STATUSES.PENDING;
  } else if (status !== null && status !== void 0 && status.startsWith(_transaction.SMART_TRANSACTION_STATUSES.CANCELLED)) {
    displayedStatusKey = _transaction.TRANSACTION_GROUP_STATUSES.CANCELLED;
  }

  const showCancelSwapLink = smartTransaction.cancellable && !cancelSwapLinkClicked;
  const className = 'transaction-list-item transaction-list-item--unconfirmed';
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_listItem.default, {
    className: className,
    title: title,
    icon: /*#__PURE__*/_react.default.createElement(_transactionIcon.default, {
      category: category,
      status: displayedStatusKey
    }),
    subtitle: /*#__PURE__*/_react.default.createElement("h3", null, /*#__PURE__*/_react.default.createElement(_transactionStatus.default, {
      isPending: true,
      isEarliestNonce: isEarliestNonce,
      date: date,
      status: displayedStatusKey
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "transaction-list-item__origin",
      title: subtitle
    }, subtitle))
  }, displayedStatusKey === _transaction.TRANSACTION_GROUP_STATUSES.PENDING && showCancelSwapLink && /*#__PURE__*/_react.default.createElement("div", {
    className: "transaction-list-item__pending-actions"
  }, /*#__PURE__*/_react.default.createElement(_cancelButton.default, {
    transaction: smartTransaction.uuid,
    cancelTransaction: e => {
      e === null || e === void 0 ? void 0 : e.preventDefault();
      dispatch((0, _swaps.cancelSwapsSmartTransaction)(smartTransaction.uuid));
      setCancelSwapLinkClicked(true);
    }
  }))));
}

SmartTransactionListItem.propTypes = {
  smartTransaction: _propTypes.default.object.isRequired,
  isEarliestNonce: _propTypes.default.bool
};

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\transaction-list-item\\smart-transaction-list-item.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-with-fallback\\icon-with-fallback.component.js", {"@babel/runtime/helpers/extends":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\extends.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@babel/runtime/helpers/objectWithoutProperties":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\objectWithoutProperties.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\icon-with-fallback\icon-with-fallback.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

const _excluded = ["name", "icon", "size", "className", "fallbackClassName"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const IconWithFallback = _ref => {
  let {
    name = '',
    icon = null,
    size,
    className,
    fallbackClassName
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const [iconError, setIconError] = (0, _react.useState)(false);
  const style = size ? {
    height: `${size}px`,
    width: `${size}px`
  } : {};

  const handleOnError = () => {
    setIconError(true);
  };

  return !iconError && icon ? /*#__PURE__*/_react.default.createElement("img", (0, _extends2.default)({
    onError: handleOnError,
    src: icon,
    style: style,
    className: className,
    alt: name.length ? name : 'icon'
  }, props)) : /*#__PURE__*/_react.default.createElement("span", {
    className: (0, _classnames.default)('icon-with-fallback__fallback', fallbackClassName)
  }, name.length ? name.charAt(0).toUpperCase() : '');
};

IconWithFallback.propTypes = {
  /**
   * The img src of the icon
   */
  icon: _propTypes.default.string,

  /**
   * The name of the icon also used for the alt attribute of the image
   */
  name: _propTypes.default.string,

  /**
   * The size of the icon. Recommended sizes adhere to 8px grid: 16, 24, 32, 40
   */
  size: _propTypes.default.number,

  /**
   * className to apply to the image tag
   */
  className: _propTypes.default.string,

  /**
   * Additional className to apply to the fallback span tag
   */
  fallbackClassName: _propTypes.default.string
};
var _default = IconWithFallback;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\icon-with-fallback\\icon-with-fallback.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\textarea\\textarea.js", {"../../../helpers/constants/design-system":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\constants\\design-system.js","../box":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\box\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/extends":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\extends.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@babel/runtime/helpers/objectWithoutProperties":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\objectWithoutProperties.js","classnames":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\classnames\\index.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\textarea\textarea.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _designSystem = require("../../../helpers/constants/design-system");

var _box = _interopRequireDefault(require("../box"));

const _excluded = ["className", "value", "onChange", "resize", "scrollable", "height", "boxProps"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const TextArea = _ref => {
  let {
    className,
    value,
    onChange,
    resize = _designSystem.RESIZE.BOTH,
    scrollable = false,
    height,
    boxProps
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const textAreaClassnames = (0, _classnames.default)('textarea', className, `textarea--resize-${resize}`, {
    'textarea--scrollable': scrollable,
    'textarea--not-scrollable': !scrollable
  });
  return /*#__PURE__*/_react.default.createElement(_box.default, (0, _extends2.default)({
    borderColor: _designSystem.COLORS.UI3,
    borderRadius: _designSystem.SIZES.SM,
    borderStyle: _designSystem.BORDER_STYLE.SOLID,
    padding: [4, 4],
    width: _designSystem.BLOCK_SIZES.FULL
  }, boxProps), boxClassName => /*#__PURE__*/_react.default.createElement("textarea", (0, _extends2.default)({
    required: true,
    style: {
      height
    },
    className: (0, _classnames.default)(boxClassName, textAreaClassnames)
  }, _objectSpread({
    value,
    onChange
  }, props))));
};

TextArea.propTypes = {
  /**
   * The height of the Textarea component. Accepts any number, px or % value
   */
  height: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),

  /**
   * Optional additional className to add to the Textarea component
   */
  className: _propTypes.default.string,

  /**
   * Value is the text of the TextArea component
   */
  value: _propTypes.default.string,

  /**
   * The onChange function of the textarea
   */
  onChange: _propTypes.default.func,

  /**
   * Resize is the resize capability of the textarea accepts all valid css values
   * Defaults to "both"
   */
  resize: _propTypes.default.oneOf(Object.values(_designSystem.RESIZE)),

  /**
   * Whether the Textarea should be scrollable. Applies overflow-y: scroll to the textarea
   * Defaults to false
   */
  scrollable: _propTypes.default.bool,

  /**
   * The Textarea component accepts all Box component props inside the boxProps object
   */
  boxProps: _propTypes.default.shape(_objectSpread({}, _box.default.propTypes))
};
var _default = TextArea;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\textarea\\textarea.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\truncated-definition-list\\index.js", {"./truncated-definition-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\truncated-definition-list\\truncated-definition-list.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\truncated-definition-list\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _truncatedDefinitionList.default;
  }
});

var _truncatedDefinitionList = _interopRequireDefault(require("./truncated-definition-list"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\truncated-definition-list\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\definition-list\\index.js", {"./definition-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\definition-list\\definition-list.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\definition-list\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _definitionList.default;
  }
});

var _definitionList = _interopRequireDefault(require("./definition-list"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\definition-list\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\metamask-translation\\index.js", {"./metamask-translation":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\metamask-translation\\metamask-translation.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\metamask-translation\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _metamaskTranslation.default;
  }
});

var _metamaskTranslation = _interopRequireDefault(require("./metamask-translation"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\metamask-translation\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\account-list\\index.js", {"./account-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\account-list\\account-list.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\account-list\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _accountList.default;
  }
});

var _accountList = _interopRequireDefault(require("./account-list"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\account-list\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-footer\\index.js", {"./permissions-connect-footer.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-footer\\permissions-connect-footer.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\permissions-connect-footer\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _permissionsConnectFooter.default;
  }
});

var _permissionsConnectFooter = _interopRequireDefault(require("./permissions-connect-footer.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-footer\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-header\\index.js", {"./permissions-connect-header.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-header\\permissions-connect-header.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\permissions-connect-header\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _permissionsConnectHeader.default;
  }
});

var _permissionsConnectHeader = _interopRequireDefault(require("./permissions-connect-header.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-header\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container.component.js", {".":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\index.js","../../ui/page-container":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\page-container\\index.js","../permissions-connect-footer":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-footer\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","lodash":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\lodash\\lodash.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\permission-page-container\permission-page-container.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _lodash = require("lodash");

var _pageContainer = require("../../ui/page-container");

var _permissionsConnectFooter = _interopRequireDefault(require("../permissions-connect-footer"));

var _ = require(".");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

class PermissionPageContainer extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      selectedPermissions: this.getRequestedMethodState(this.getRequestedMethodNames(this.props))
    });
    (0, _defineProperty2.default)(this, "onCancel", () => {
      const {
        request,
        rejectPermissionsRequest
      } = this.props;
      rejectPermissionsRequest(request.metadata.id);
    });
    (0, _defineProperty2.default)(this, "onSubmit", () => {
      const {
        request: _request,
        approvePermissionsRequest,
        rejectPermissionsRequest,
        selectedIdentities
      } = this.props;

      const request = _objectSpread(_objectSpread({}, _request), {}, {
        permissions: _objectSpread({}, _request.permissions),
        approvedAccounts: selectedIdentities.map(selectedIdentity => selectedIdentity.address)
      });

      Object.keys(this.state.selectedPermissions).forEach(key => {
        if (!this.state.selectedPermissions[key]) {
          delete request.permissions[key];
        }
      });

      if (Object.keys(request.permissions).length > 0) {
        approvePermissionsRequest(request);
      } else {
        rejectPermissionsRequest(request.metadata.id);
      }
    });
  }

  componentDidUpdate() {
    const newMethodNames = this.getRequestedMethodNames(this.props);

    if (!(0, _lodash.isEqual)(Object.keys(this.state.selectedPermissions), newMethodNames)) {
      // this should be a new request, so just overwrite
      this.setState({
        selectedPermissions: this.getRequestedMethodState(newMethodNames)
      });
    }
  }

  getRequestedMethodState(methodNames) {
    return methodNames.reduce((acc, methodName) => {
      acc[methodName] = true;
      return acc;
    }, {});
  }

  getRequestedMethodNames(props) {
    return Object.keys(props.request.permissions || {});
  }

  componentDidMount() {
    this.context.metricsEvent({
      eventOpts: {
        category: 'Auth',
        action: 'Connect',
        name: 'Tab Opened'
      }
    });
  }

  render() {
    const {
      requestMetadata,
      targetSubjectMetadata,
      selectedIdentities,
      allIdentitiesSelected
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "page-container permission-approval-container"
    }, /*#__PURE__*/_react.default.createElement(_.PermissionPageContainerContent, {
      requestMetadata: requestMetadata,
      subjectMetadata: targetSubjectMetadata,
      selectedPermissions: this.state.selectedPermissions,
      selectedIdentities: selectedIdentities,
      allIdentitiesSelected: allIdentitiesSelected
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "permission-approval-container__footers"
    }, /*#__PURE__*/_react.default.createElement(_permissionsConnectFooter.default, null), /*#__PURE__*/_react.default.createElement(_pageContainer.PageContainerFooter, {
      cancelButtonType: "default",
      onCancel: () => this.onCancel(),
      cancelText: this.context.t('cancel'),
      onSubmit: () => this.onSubmit(),
      submitText: this.context.t('connect'),
      buttonSizeLarge: false
    })));
  }

}

exports.default = PermissionPageContainer;
(0, _defineProperty2.default)(PermissionPageContainer, "propTypes", {
  approvePermissionsRequest: _propTypes.default.func.isRequired,
  rejectPermissionsRequest: _propTypes.default.func.isRequired,
  selectedIdentities: _propTypes.default.array,
  allIdentitiesSelected: _propTypes.default.bool,
  request: _propTypes.default.object,
  requestMetadata: _propTypes.default.object,
  targetSubjectMetadata: _propTypes.default.shape({
    name: _propTypes.default.string,
    origin: _propTypes.default.string.isRequired,
    subjectType: _propTypes.default.string.isRequired,
    extensionId: _propTypes.default.string,
    iconUrl: _propTypes.default.string
  })
});
(0, _defineProperty2.default)(PermissionPageContainer, "defaultProps", {
  request: {},
  requestMetadata: {},
  selectedIdentities: [],
  allIdentitiesSelected: false
});
(0, _defineProperty2.default)(PermissionPageContainer, "contextTypes", {
  t: _propTypes.default.func,
  metricsEvent: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container-content\\permission-page-container-content.component.js", {"../../../ui/tooltip":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\tooltip\\index.js","../../permissions-connect-header":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-header\\index.js","../../permissions-connect-permission-list":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permissions-connect-permission-list\\index.js","@babel/runtime/helpers/defineProperty":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\permission-page-container\permission-page-container-content\permission-page-container-content.component.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _permissionsConnectHeader = _interopRequireDefault(require("../../permissions-connect-header"));

var _tooltip = _interopRequireDefault(require("../../../ui/tooltip"));

var _permissionsConnectPermissionList = _interopRequireDefault(require("../../permissions-connect-permission-list"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class PermissionPageContainerContent extends _react.PureComponent {
  renderRequestedPermissions() {
    const {
      selectedPermissions
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "permission-approval-container__content__requested"
    }, /*#__PURE__*/_react.default.createElement(_permissionsConnectPermissionList.default, {
      permissions: selectedPermissions
    }));
  }

  renderAccountTooltip(textContent) {
    const {
      selectedIdentities
    } = this.props;
    const {
      t
    } = this.context;
    return /*#__PURE__*/_react.default.createElement(_tooltip.default, {
      key: "all-account-connect-tooltip",
      position: "bottom",
      wrapperClassName: "permission-approval-container__bold-title-elements",
      html: /*#__PURE__*/_react.default.createElement("div", {
        style: {
          display: 'flex',
          flexDirection: 'column'
        }
      }, selectedIdentities.slice(0, 6).map((identity, index) => {
        return /*#__PURE__*/_react.default.createElement("div", {
          key: `tooltip-identity-${index}`
        }, identity.addressLabel);
      }), selectedIdentities.length > 6 ? t('plusXMore', [selectedIdentities.length - 6]) : null)
    }, textContent);
  }

  getTitle() {
    var _selectedIdentities$;

    const {
      subjectMetadata,
      selectedIdentities,
      allIdentitiesSelected,
      selectedPermissions
    } = this.props;
    const {
      t
    } = this.context;

    if (subjectMetadata.extensionId) {
      return t('externalExtension', [subjectMetadata.extensionId]);
    } else if (!selectedPermissions.eth_accounts) {
      return t('permissionRequestCapitalized');
    } else if (allIdentitiesSelected) {
      return t('connectToAll', [this.renderAccountTooltip(t('connectToAllAccounts'))]);
    } else if (selectedIdentities.length > 1) {
      return t('connectToMultiple', [this.renderAccountTooltip(t('connectToMultipleNumberOfAccounts', [selectedIdentities.length]))]);
    }

    return t('connectTo', [(_selectedIdentities$ = selectedIdentities[0]) === null || _selectedIdentities$ === void 0 ? void 0 : _selectedIdentities$.addressLabel]);
  }

  render() {
    const {
      subjectMetadata
    } = this.props;
    const {
      t
    } = this.context;
    const title = this.getTitle();
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "permission-approval-container__content"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "permission-approval-container__content-container"
    }, /*#__PURE__*/_react.default.createElement(_permissionsConnectHeader.default, {
      iconUrl: subjectMetadata.iconUrl,
      iconName: subjectMetadata.name,
      headerTitle: title,
      headerText: subjectMetadata.extensionId ? t('allowExternalExtensionTo', [subjectMetadata.extensionId]) : t('allowThisSiteTo'),
      siteOrigin: subjectMetadata.origin
    }), /*#__PURE__*/_react.default.createElement("section", {
      className: "permission-approval-container__permissions-container"
    }, this.renderRequestedPermissions())));
  }

}

exports.default = PermissionPageContainerContent;
(0, _defineProperty2.default)(PermissionPageContainerContent, "propTypes", {
  subjectMetadata: _propTypes.default.shape({
    name: _propTypes.default.string.isRequired,
    origin: _propTypes.default.string.isRequired,
    subjectType: _propTypes.default.string.isRequired,
    extensionId: _propTypes.default.string,
    iconUrl: _propTypes.default.string
  }),
  selectedPermissions: _propTypes.default.object.isRequired,
  selectedIdentities: _propTypes.default.array,
  allIdentitiesSelected: _propTypes.default.bool
});
(0, _defineProperty2.default)(PermissionPageContainerContent, "defaultProps", {
  selectedIdentities: [],
  allIdentitiesSelected: false
});
(0, _defineProperty2.default)(PermissionPageContainerContent, "contextTypes", {
  t: _propTypes.default.func
});

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\permission-page-container\\permission-page-container-content\\permission-page-container-content.component.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@keystonehq\\bc-ur-registry-eth\\dist\\index.js", {"./bc-ur-registry-eth.cjs.development.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@keystonehq\\bc-ur-registry-eth\\dist\\bc-ur-registry-eth.cjs.development.js","./bc-ur-registry-eth.cjs.production.min.js":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@keystonehq\\bc-ur-registry-eth\\dist\\bc-ur-registry-eth.cjs.production.min.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\@keystonehq\bc-ur-registry-eth\dist\index.js
      return function (require, module, exports) {

'use strict'

if ("development" === 'production') {
  module.exports = require('./bc-ur-registry-eth.cjs.production.min.js')
} else {
  module.exports = require('./bc-ur-registry-eth.cjs.development.js')
}

      };
    };
  }
}, {package:"@keystonehq\\bc-ur-registry-eth",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@keystonehq\\bc-ur-registry-eth\\dist\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\qrcode.react\\lib\\index.js", {"prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","qr.js/lib/ErrorCorrectLevel":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\qr.js\\lib\\ErrorCorrectLevel.js","qr.js/lib/QRCode":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\qr.js\\lib\\QRCode.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\node_modules\qrcode.react\lib\index.js
      return function (require, module, exports) {
'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var React = require('react');

var PropTypes = require('prop-types'); // qr.js doesn't handle error level of zero (M) so we need to do it right,
// thus the deep require.


var QRCodeImpl = require('qr.js/lib/QRCode');

var ErrorCorrectLevel = require('qr.js/lib/ErrorCorrectLevel'); // TODO: pull this off of the QRCode class type so it matches.


// Convert from UTF-16, forcing the use of byte-mode encoding in our QR Code.
// This allows us to encode Hanji, Kanji, emoji, etc. Ideally we'd do more
// detection and not resort to byte-mode if possible, but we're trading off
// a smaller library for a smaller amount of data we can potentially encode.
// Based on http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/
function convertStr(str) {
  var out = '';

  for (var i = 0; i < str.length; i++) {
    var charcode = str.charCodeAt(i);

    if (charcode < 0x0080) {
      out += String.fromCharCode(charcode);
    } else if (charcode < 0x0800) {
      out += String.fromCharCode(0xc0 | charcode >> 6);
      out += String.fromCharCode(0x80 | charcode & 0x3f);
    } else if (charcode < 0xd800 || charcode >= 0xe000) {
      out += String.fromCharCode(0xe0 | charcode >> 12);
      out += String.fromCharCode(0x80 | charcode >> 6 & 0x3f);
      out += String.fromCharCode(0x80 | charcode & 0x3f);
    } else {
      // This is a surrogate pair, so we'll reconsitute the pieces and work
      // from that
      i++;
      charcode = 0x10000 + ((charcode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);
      out += String.fromCharCode(0xf0 | charcode >> 18);
      out += String.fromCharCode(0x80 | charcode >> 12 & 0x3f);
      out += String.fromCharCode(0x80 | charcode >> 6 & 0x3f);
      out += String.fromCharCode(0x80 | charcode & 0x3f);
    }
  }

  return out;
}

var DEFAULT_PROPS = {
  size: 128,
  level: 'L',
  bgColor: '#FFFFFF',
  fgColor: '#000000',
  includeMargin: false
};
var PROP_TYPES = "development" !== 'production' ? {
  value: PropTypes.string.isRequired,
  size: PropTypes.number,
  level: PropTypes.oneOf(['L', 'M', 'Q', 'H']),
  bgColor: PropTypes.string,
  fgColor: PropTypes.string,
  includeMargin: PropTypes.bool,
  imageSettings: PropTypes.shape({
    src: PropTypes.string.isRequired,
    height: PropTypes.number.isRequired,
    width: PropTypes.number.isRequired,
    excavate: PropTypes.bool,
    x: PropTypes.number,
    y: PropTypes.number
  })
} : {};
var MARGIN_SIZE = 4; // This is *very* rough estimate of max amount of QRCode allowed to be covered.
// It is "wrong" in a lot of ways (area is a terrible way to estimate, it
// really should be number of modules covered), but if for some reason we don't
// get an explicit height or width, I'd rather default to something than throw.

var DEFAULT_IMG_SCALE = 0.1;

function generatePath(modules) {
  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var ops = [];
  modules.forEach(function (row, y) {
    var start = null;
    row.forEach(function (cell, x) {
      if (!cell && start !== null) {
        // M0 0h7v1H0z injects the space with the move and drops the comma,
        // saving a char per operation
        ops.push("M".concat(start + margin, " ").concat(y + margin, "h").concat(x - start, "v1H").concat(start + margin, "z"));
        start = null;
        return;
      } // end of row, clean up or skip


      if (x === row.length - 1) {
        if (!cell) {
          // We would have closed the op above already so this can only mean
          // 2+ light modules in a row.
          return;
        }

        if (start === null) {
          // Just a single dark module.
          ops.push("M".concat(x + margin, ",").concat(y + margin, " h1v1H").concat(x + margin, "z"));
        } else {
          // Otherwise finish the current line.
          ops.push("M".concat(start + margin, ",").concat(y + margin, " h").concat(x + 1 - start, "v1H").concat(start + margin, "z"));
        }

        return;
      }

      if (cell && start === null) {
        start = x;
      }
    });
  });
  return ops.join('');
} // We could just do this in generatePath, except that we want to support
// non-Path2D canvas, so we need to keep it an explicit step.


function excavateModules(modules, excavation) {
  return modules.slice().map(function (row, y) {
    if (y < excavation.y || y >= excavation.y + excavation.h) {
      return row;
    }

    return row.map(function (cell, x) {
      if (x < excavation.x || x >= excavation.x + excavation.w) {
        return cell;
      }

      return false;
    });
  });
}

function getImageSettings(props, cells) {
  var imageSettings = props.imageSettings,
      size = props.size,
      includeMargin = props.includeMargin;

  if (imageSettings == null) {
    return null;
  }

  var margin = includeMargin ? MARGIN_SIZE : 0;
  var numCells = cells.length + margin * 2;
  var defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);
  var scale = numCells / size;
  var w = (imageSettings.width || defaultSize) * scale;
  var h = (imageSettings.height || defaultSize) * scale;
  var x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;
  var y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;
  var excavation = null;

  if (imageSettings.excavate) {
    var floorX = Math.floor(x);
    var floorY = Math.floor(y);
    var ceilW = Math.ceil(w + x - floorX);
    var ceilH = Math.ceil(h + y - floorY);
    excavation = {
      x: floorX,
      y: floorY,
      w: ceilW,
      h: ceilH
    };
  }

  return {
    x: x,
    y: y,
    h: h,
    w: w,
    excavation: excavation
  };
} // For canvas we're going to switch our drawing mode based on whether or not
// the environment supports Path2D. We only need the constructor to be
// supported, but Edge doesn't actually support the path (string) type
// argument. Luckily it also doesn't support the addPath() method. We can
// treat that as the same thing.


var SUPPORTS_PATH2D = function () {
  try {
    new Path2D().addPath(new Path2D());
  } catch (e) {
    return false;
  }

  return true;
}();

var QRCodeCanvas =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(QRCodeCanvas, _React$PureComponent);

  function QRCodeCanvas() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, QRCodeCanvas);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QRCodeCanvas)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "_canvas", void 0);

    _defineProperty(_assertThisInitialized(_this), "_image", void 0);

    _defineProperty(_assertThisInitialized(_this), "state", {
      imgLoaded: false
    });

    _defineProperty(_assertThisInitialized(_this), "handleImageLoad", function () {
      _this.setState({
        imgLoaded: true
      });
    });

    return _this;
  }

  _createClass(QRCodeCanvas, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this._image && this._image.complete) {
        this.handleImageLoad();
      }

      this.update();
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var _this$props$imageSett, _nextProps$imageSetti;

      var currentSrc = (_this$props$imageSett = this.props.imageSettings) === null || _this$props$imageSett === void 0 ? void 0 : _this$props$imageSett.src;
      var nextSrc = (_nextProps$imageSetti = nextProps.imageSettings) === null || _nextProps$imageSetti === void 0 ? void 0 : _nextProps$imageSetti.src;

      if (currentSrc !== nextSrc) {
        this.setState({
          imgLoaded: false
        });
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.update();
    }
  }, {
    key: "update",
    value: function update() {
      var _this$props = this.props,
          value = _this$props.value,
          size = _this$props.size,
          level = _this$props.level,
          bgColor = _this$props.bgColor,
          fgColor = _this$props.fgColor,
          includeMargin = _this$props.includeMargin,
          imageSettings = _this$props.imageSettings; // We'll use type===-1 to force QRCode to automatically pick the best type

      var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);
      qrcode.addData(convertStr(value));
      qrcode.make();

      if (this._canvas != null) {
        var canvas = this._canvas;
        var ctx = canvas.getContext('2d');

        if (!ctx) {
          return;
        }

        var cells = qrcode.modules;

        if (cells === null) {
          return;
        }

        var margin = includeMargin ? MARGIN_SIZE : 0;
        var numCells = cells.length + margin * 2;
        var calculatedImageSettings = getImageSettings(this.props, cells);

        if (imageSettings != null && calculatedImageSettings != null) {
          if (calculatedImageSettings.excavation != null) {
            cells = excavateModules(cells, calculatedImageSettings.excavation);
          }
        } // We're going to scale this so that the number of drawable units
        // matches the number of cells. This avoids rounding issues, but does
        // result in some potentially unwanted single pixel issues between
        // blocks, only in environments that don't support Path2D.


        var pixelRatio = window.devicePixelRatio || 1;
        canvas.height = canvas.width = size * pixelRatio;
        var scale = size / numCells * pixelRatio;
        ctx.scale(scale, scale); // Draw solid background, only paint dark modules.

        ctx.fillStyle = bgColor;
        ctx.fillRect(0, 0, numCells, numCells);
        ctx.fillStyle = fgColor;

        if (SUPPORTS_PATH2D) {
          // $FlowFixMe: Path2D c'tor doesn't support args yet.
          ctx.fill(new Path2D(generatePath(cells, margin)));
        } else {
          cells.forEach(function (row, rdx) {
            row.forEach(function (cell, cdx) {
              if (cell) {
                ctx.fillRect(cdx + margin, rdx + margin, 1, 1);
              }
            });
          });
        }

        if (this.state.imgLoaded && this._image && calculatedImageSettings != null) {
          ctx.drawImage(this._image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          value = _this$props2.value,
          size = _this$props2.size,
          level = _this$props2.level,
          bgColor = _this$props2.bgColor,
          fgColor = _this$props2.fgColor,
          style = _this$props2.style,
          includeMargin = _this$props2.includeMargin,
          imageSettings = _this$props2.imageSettings,
          otherProps = _objectWithoutProperties(_this$props2, ["value", "size", "level", "bgColor", "fgColor", "style", "includeMargin", "imageSettings"]);

      var canvasStyle = _objectSpread({
        height: size,
        width: size
      }, style);

      var img = null;
      var imgSrc = imageSettings && imageSettings.src;

      if (imageSettings != null && imgSrc != null) {
        img = React.createElement("img", {
          src: imgSrc,
          style: {
            display: 'none'
          },
          onLoad: this.handleImageLoad,
          ref: function ref(_ref) {
            return _this2._image = _ref;
          }
        });
      }

      return React.createElement(React.Fragment, null, React.createElement("canvas", _extends({
        style: canvasStyle,
        height: size,
        width: size,
        ref: function ref(_ref2) {
          return _this2._canvas = _ref2;
        }
      }, otherProps)), img);
    }
  }]);

  return QRCodeCanvas;
}(React.PureComponent);

_defineProperty(QRCodeCanvas, "defaultProps", DEFAULT_PROPS);

if ("development" !== 'production') {
  QRCodeCanvas.propTypes = PROP_TYPES;
}

var QRCodeSVG =
/*#__PURE__*/
function (_React$PureComponent2) {
  _inherits(QRCodeSVG, _React$PureComponent2);

  function QRCodeSVG() {
    _classCallCheck(this, QRCodeSVG);

    return _possibleConstructorReturn(this, _getPrototypeOf(QRCodeSVG).apply(this, arguments));
  }

  _createClass(QRCodeSVG, [{
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          value = _this$props3.value,
          size = _this$props3.size,
          level = _this$props3.level,
          bgColor = _this$props3.bgColor,
          fgColor = _this$props3.fgColor,
          includeMargin = _this$props3.includeMargin,
          imageSettings = _this$props3.imageSettings,
          otherProps = _objectWithoutProperties(_this$props3, ["value", "size", "level", "bgColor", "fgColor", "includeMargin", "imageSettings"]); // We'll use type===-1 to force QRCode to automatically pick the best type


      var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);
      qrcode.addData(convertStr(value));
      qrcode.make();
      var cells = qrcode.modules;

      if (cells === null) {
        return null;
      }

      var margin = includeMargin ? MARGIN_SIZE : 0;
      var numCells = cells.length + margin * 2;
      var calculatedImageSettings = getImageSettings(this.props, cells);
      var image = null;

      if (imageSettings != null && calculatedImageSettings != null) {
        if (calculatedImageSettings.excavation != null) {
          cells = excavateModules(cells, calculatedImageSettings.excavation);
        }

        image = React.createElement("image", {
          xlinkHref: imageSettings.src,
          height: calculatedImageSettings.h,
          width: calculatedImageSettings.w,
          x: calculatedImageSettings.x + margin,
          y: calculatedImageSettings.y + margin,
          preserveAspectRatio: "none"
        });
      } // Drawing strategy: instead of a rect per module, we're going to create a
      // single path for the dark modules and layer that on top of a light rect,
      // for a total of 2 DOM nodes. We pay a bit more in string concat but that's
      // way faster than DOM ops.
      // For level 1, 441 nodes -> 2
      // For level 40, 31329 -> 2


      var fgPath = generatePath(cells, margin);
      return React.createElement("svg", _extends({
        shapeRendering: "crispEdges",
        height: size,
        width: size,
        viewBox: "0 0 ".concat(numCells, " ").concat(numCells)
      }, otherProps), React.createElement("path", {
        fill: bgColor,
        d: "M0,0 h".concat(numCells, "v").concat(numCells, "H0z")
      }), React.createElement("path", {
        fill: fgColor,
        d: fgPath
      }), image);
    }
  }]);

  return QRCodeSVG;
}(React.PureComponent);

_defineProperty(QRCodeSVG, "defaultProps", DEFAULT_PROPS);

if ("development" !== 'production') {
  QRCodeSVG.propTypes = PROP_TYPES;
}

var QRCode = function QRCode(props) {
  var renderAs = props.renderAs,
      otherProps = _objectWithoutProperties(props, ["renderAs"]);

  var Component = renderAs === 'svg' ? QRCodeSVG : QRCodeCanvas;
  return React.createElement(Component, otherProps);
};

QRCode.defaultProps = _objectSpread({
  renderAs: 'canvas'
}, DEFAULT_PROPS);
module.exports = QRCode;
      };
    };
  }
}, {package:"qrcode.react",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\qrcode.react\\lib\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\webcam-utils.js", {"../../../app/scripts/lib/util":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\app\\scripts\\lib\\util.js","../../../shared/constants/app":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\app.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\helpers\utils\webcam-utils.js
      return function (require, module, exports) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _app = require("../../../shared/constants/app");

var _util = require("../../../app/scripts/lib/util");

class WebcamUtils {
  static async checkStatus() {
    const isPopup = (0, _util.getEnvironmentType)() === _app.ENVIRONMENT_TYPE_POPUP;

    const isFirefoxOrBrave = (0, _util.getPlatform)() === (_app.PLATFORM_FIREFOX || _app.PLATFORM_BRAVE);

    const devices = await window.navigator.mediaDevices.enumerateDevices();
    const webcams = devices.filter(device => device.kind === 'videoinput');
    const hasWebcam = webcams.length > 0; // A non-empty-string label implies that the webcam has been granted permission, as
    // otherwise the label is kept blank to prevent fingerprinting

    const hasWebcamPermissions = webcams.some(webcam => webcam.label && webcam.label.length > 0);

    if (hasWebcam) {
      let environmentReady = true;

      if (isFirefoxOrBrave && isPopup || isPopup && !hasWebcamPermissions) {
        environmentReady = false;
      }

      return {
        permissions: hasWebcamPermissions,
        environmentReady
      };
    }

    const error = new Error('No webcam found');
    error.type = 'NO_WEBCAM_FOUND';
    throw error;
  }

}

var _default = WebcamUtils;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\helpers\\utils\\webcam-utils.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\enhanced-reader.js", {"../../../../shared/constants/time":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\shared\\constants\\time.js","../../ui/spinner":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\spinner\\index.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js","@zxing/browser":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@zxing\\browser\\cjs\\index.js","@zxing/library":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@zxing\\library\\umd\\index.min.js","loglevel":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\loglevel\\lib\\loglevel.js","prop-types":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\prop-types\\index.js","react":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\react\\index.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\app\qr-hardware-popover\enhanced-reader.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _library = require("@zxing/library");

var _browser = require("@zxing/browser");

var _loglevel = _interopRequireDefault(require("loglevel"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _time = require("../../../../shared/constants/time");

var _spinner = _interopRequireDefault(require("../../ui/spinner"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const EnhancedReader = ({
  handleScan
}) => {
  const [canplay, setCanplay] = (0, _react.useState)(false);
  const codeReader = (0, _react.useMemo)(() => {
    const hint = new Map();
    hint.set(_library.DecodeHintType.POSSIBLE_FORMATS, [_library.BarcodeFormat.QR_CODE]);
    return new _browser.BrowserQRCodeReader(hint, {
      delayBetweenScanAttempts: _time.MILLISECOND * 100,
      delayBetweenScanSuccess: _time.MILLISECOND * 100
    });
  }, []);
  (0, _react.useEffect)(() => {
    const videoElem = document.getElementById('video');

    const canplayListener = () => {
      setCanplay(true);
    };

    videoElem.addEventListener('canplay', canplayListener);
    const promise = codeReader.decodeFromVideoDevice(undefined, 'video', result => {
      if (result) {
        handleScan(result.getText());
      }
    });
    return () => {
      videoElem.removeEventListener('canplay', canplayListener);
      promise.then(controls => {
        if (controls) {
          controls.stop();
        }
      }).catch(_loglevel.default.info);
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "qr-scanner__content__video-wrapper"
  }, /*#__PURE__*/_react.default.createElement("video", {
    id: "video",
    style: {
      display: canplay ? 'block' : 'none',
      width: '100%',
      filter: 'blur(4px)'
    }
  }), canplay ? null : /*#__PURE__*/_react.default.createElement(_spinner.default, {
    color: "#F7C06C"
  }));
};

EnhancedReader.propTypes = {
  handleScan: _propTypes.default.func.isRequired
};
var _default = EnhancedReader;
exports.default = _default;

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\app\\qr-hardware-popover\\enhanced-reader.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\blockieIdenticon\\index.js", {"./blockieIdenticon.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\blockieIdenticon\\blockieIdenticon.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\identicon\blockieIdenticon\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _blockieIdenticon.default;
  }
});

var _blockieIdenticon = _interopRequireDefault(require("./blockieIdenticon.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\identicon\\blockieIdenticon\\index.js",}],
["D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\jazzicon\\index.js", {"./jazzicon.component":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\jazzicon\\jazzicon.component.js","@babel/runtime/helpers/interopRequireDefault":"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"}, function(){
  with (this) {
    return function() {
      'use strict';
      // source: D:\Building_Projects\blockchain\metamaskextension\metamask-extension-latest\ui\components\ui\jazzicon\index.js
      return function (require, module, exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _jazzicon.default;
  }
});

var _jazzicon = _interopRequireDefault(require("./jazzicon.component"));

      };
    };
  }
}, {package:"<root>",file:"D:\\Building_Projects\\blockchain\\metamaskextension\\metamask-extension-latest\\ui\\components\\ui\\jazzicon\\index.js",}]],[],{})

//# sourceMappingURL=data:application/json;charset=utf8;base64,
